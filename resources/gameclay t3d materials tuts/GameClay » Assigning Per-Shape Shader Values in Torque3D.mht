From: "Saved by Windows Internet Explorer 8"
Subject: =?Windows-1252?Q?GameClay_=BB_Assigning_Per-Shape_Shader_Values_in_Torque?=
	=?Windows-1252?Q?3D?=
Date: Mon, 20 Dec 2010 13:18:59 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----=_NextPart_000_0033_01CBA048.763C1690"
X-MimeOLE: Produced By Microsoft MimeOLE V6.1.7600.16543

This is a multi-part message in MIME format.

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: text/html;
	charset="utf-8"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/documentation/per-shape-shader-values-t3d

=EF=BB=BF<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" =
"http://www.w3c.org/TR/1999/REC-html401-19991224/loose.dtd">
<HTML lang=3Den xml:lang=3D"en" =
xmlns=3D"http://www.w3.org/1999/xhtml"><HEAD><TITLE>GameClay =C2=BB =
Assigning Per-Shape Shader Values in Torque3D</TITLE>
<META content=3Dtext/html;charset=3Dutf-8 http-equiv=3DContent-Type>
<SCRIPT type=3Dtext/javascript>//<![CDATA[=0A=
	// Google Analytics for WordPress by Yoast v4.06 | =
http://yoast.com/wordpress/google-analytics/=0A=
	var _gaq =3D _gaq || [];=0A=
	_gaq.push(['_setAccount','UA-9195640-2']);=0A=
	_gaq.push(['_trackPageview']);=0A=
	(function() {=0A=
		var ga =3D document.createElement('script'); ga.type =3D =
'text/javascript'; ga.async =3D true;=0A=
		ga.src =3D ('https:' =3D=3D document.location.protocol ? 'https://ssl' =
: 'http://www') + '.google-analytics.com/ga.js';=0A=
		var s =3D document.getElementsByTagName('script')[0]; =
s.parentNode.insertBefore(ga, s);=0A=
	})();=0A=
	// End of Google Analytics for WordPress by Yoast v4.0=0A=
	//]]></SCRIPT>
<LINK=20
title=3D"GameClay =C2=BB Assigning Per-Shape Shader Values in Torque3D =
Comments Feed"=20
rel=3Dalternate type=3Dapplication/rss+xml=20
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d/fee=
d"><LINK=20
id=3Dstyles-css rel=3Dstylesheet type=3Dtext/css=20
href=3D"http://gameclay.com/wp-content/themes/bullseye/style.css?ver=3D3.=
0.1"=20
media=3Dall>
<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/prototype.js?ver=3D1.6.1"></SCR=
IPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/scriptaculous/wp-scriptaculous.=
js?ver=3D1.8.3"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/scriptaculous/effects.js?ver=3D=
1.8.3"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-content/plugins/lightbox-2/lightbox.js?ver=3D=
1.8"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-content/themes/onepress/scripts/op.js?ver=3D=
3.0.1"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-content/themes/onepress/scripts/nav.js?ver=3D=
3.0.1"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/comment-reply.js?ver=3D20090102=
"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/jquery/jquery.js?ver=3D1.4.2"><=
/SCRIPT>
<LINK title=3DRSD rel=3DEditURI type=3Dapplication/rsd+xml=20
href=3D"http://gameclay.com/xmlrpc.php?rsd"><LINK rel=3Dwlwmanifest=20
type=3Dapplication/wlwmanifest+xml=20
href=3D"http://gameclay.com/wp-includes/wlwmanifest.xml"><LINK =
title=3DGameClay=20
rel=3Dindex href=3D"http://gameclay.com"><LINK title=3DDocumentation =
rel=3Dup=20
href=3D"http://gameclay.com/documentation"><LINK title=3DDocumentation =
rel=3Dprev=20
href=3D"http://gameclay.com/documentation"><LINK rel=3Dcanonical=20
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d">
<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-includes/js/jquery/jquery.js?ver=3D1.2.6"><=
/SCRIPT>

<SCRIPT language=3DJavaScript><!--=0A=
 var DevFmtUrl=3D'http://gameclay.com/wp-content/plugins/devformatter/'; =
//-->=0A=
</SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-content/plugins/devformatter/devfmt_common.=
js?ver=3D2009.0.1.32"></SCRIPT>

<SCRIPT type=3Dtext/javascript=20
src=3D"http://gameclay.com/wp-content/plugins/devformatter/devfmt_public.=
js?ver=3D2009.0.1.32"></SCRIPT>

<STYLE type=3Dtext/css media=3Dscreen>@import url( =
http://gameclay.com/wp-content/plugins/devformatter/devfmt_reset.css?ver=3D=
2009.0.1.32 );
</STYLE>

<STYLE type=3Dtext/css media=3Dscreen>@import url( =
http://gameclay.com/wp-content/plugins/devformatter/devfmt_css.php?ver=3D=
2009.0.1.32 );
</STYLE>
<!-- begin lightbox scripts -->
<SCRIPT type=3Dtext/javascript>=0A=
    //<![CDATA[=0A=
    document.write('<link rel=3D"stylesheet" =
href=3D"http://gameclay.com/wp-content/plugins/lightbox-2/Themes/Black/li=
ghtbox.css" type=3D"text/css" media=3D"screen" />');=0A=
    //]]>=0A=
    </SCRIPT>
<!-- end lightbox scripts --><LINK rel=3Dicon type=3Dimage/x-icon=20
href=3D"/favicon.ico">
<META name=3Ddescription=20
content=3D"  Assigning Per-Shape Shader Values in Torque3D - GameClay =
LLC"><LINK=20
title=3D"GameClay RSS Feed" rel=3Dalternate type=3Dapplication/rss+xml=20
href=3D"http://gameclay.com/feed"><LINK title=3D"GameClay Comments RSS =
Feed"=20
rel=3Dalternate type=3Dapplication/atom+xml=20
href=3D"http://gameclay.com/comments/feed"><LINK rel=3Dpingback=20
href=3D"http://gameclay.com/xmlrpc.php"><!--[if lt IE 8]>
<![endif]-->
<META name=3DGENERATOR content=3D"MSHTML 8.00.7600.16700"></HEAD>
<BODY class=3D"page single">
<DIV id=3Dpage>
<DIV id=3Dheader>
<DIV class=3Dhd>
<DIV class=3Dc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dc>
<DIV id=3Dheaderimg class=3Ds>
<H1><A href=3D"http://gameclay.com/"><SPAN>GameClay</SPAN></A></H1>
<DIV class=3Ddescription><SPAN>GameClay LLC</SPAN></DIV>
<DIV id=3Dheaderlink><A=20
href=3D"http://gameclay.com/"><SPAN></SPAN></A></DIV></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dc></DIV></DIV></DIV>
<DIV id=3Dop_navigation>
<DIV id=3Dop_navigation2>
<UL>
  <LI><A href=3D"http://gameclay.com/">Home</A></LI>
  <LI=20
  class=3D"page_item page-item-46 current_page_ancestor =
current_page_parent"><A=20
  title=3DDocumentation =
href=3D"http://gameclay.com/documentation">Documentation</A>=20

  <UL class=3Dchildren>
    <LI class=3D"page_item page-item-31"><A=20
    title=3D"Extending the Torque3D Material System"=20
    href=3D"http://gameclay.com/documentation/t3d-materials">Extending =
the=20
    Torque3D Material System</A></LI>
    <LI class=3D"page_item page-item-106 current_page_item"><A=20
    title=3D"Assigning Per-Shape Shader Values in Torque3D"=20
    =
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d">As=
signing=20
    Per-Shape Shader Values in Torque3D</A></LI></UL></LI></UL><!-- =
OnePress - Do not remove --><SPAN=20
class=3Dforclear></SPAN><!-- OnePress - Do not remove --></DIV></DIV>
<DIV id=3Dcontent>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV id=3Dcontent_s class=3Ds>
<DIV id=3Dmain_wrap class=3Dlayout1>
<DIV id=3Dmain>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds>
<DIV id=3Dcontent_body-10451143442 class=3D"widget  =
widget_op_content_body">
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds>
<DIV id=3Dpost-106 class=3D"post post_number_1 post_odd">
<H2><SPAN><A=20
title=3D"Permanent Link to Assigning Per-Shape Shader Values in =
Torque3D"=20
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d"=20
rel=3Dbookmark>Assigning Per-Shape Shader Values in =
Torque3D</A></SPAN></H2>
<DIV class=3Dpost_author>
<DIV><SPAN class=3Dlabel>by </SPAN><A class=3Dauthor_Pat-Wilson=20
href=3D"http://gameclay.com/author/pat/">Pat Wilson</A></DIV></DIV>
<DIV class=3Dpost_date><SPAN>August 24, 2009</SPAN></DIV>
<DIV class=3Dpost_content>
<P>Torque3D includes a standard set of material features which meet the =
basic=20
needs of most visual effects. Most shader features in Torque3D are =
controlled by=20
parameters that are set on a per-material basis; each shape instance =
which=20
shares a material uses the same parameters to render. Some visual =
effects=20
require shapes, which share the same material, to use different values =
for each=20
instance of the shape. This document will provide the programmer with an =

overview of the render-instance system in Torque3D, an explanation of =
how to add=20
per-instance data to the <STRONG>TSStatic </STRONG>object, and an =
example=20
implementation for getting data from game-play scripts into a shader=20
constant.</P>
<P>This document builds on the example introduced in the document: <A=20
href=3D"http://gameclay.com/documentation/t3d-materials" =
target=3D_blank>Extending=20
the Torque3D Material System</A></P>
<H1>Rendering a Mesh in Torque3D: Starting at DrawPrimitive</H1>
<P>The first step to implementing this feature is understanding how a =
mesh gets=20
drawn in Torque3D. We will work backwards, starting with the =
=E2=80=98DrawPrimitive=E2=80=99=20
call, working all the way back to the game object which it represents. =
This=20
overview will touch on the <STRONG>RenderBin </STRONG>system, the=20
<STRONG>TSMesh</STRONG> code, game objects inheriting from=20
<STRONG>ShapeBase</STRONG> as well as <STRONG>TSStatic</STRONG>, and =
explain how=20
to pass data between these discrete systems.</P>
<DIV style=3D"FLOAT: right"><!--DEVFMTCODE--><PRE class=3Ddevcodeblock =
title=3DC++><DIV style=3D"WIDTH: 400px" class=3Ddevcodeoverflow><TABLE =
class=3Ddevcodearea width=3D"100%"><TBODY><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #0000ff">struct</SPAN> MeshRenderInst <SPAN =
style=3D"COLOR: #008080">:</SPAN> <SPAN style=3D"COLOR: =
#0000ff">public</SPAN> RenderInst</PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">   GFXVertexBufferHandleBase <SPAN =
style=3D"COLOR: #000040">*</SPAN>vertBuff<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   GFXPrimitiveBufferHandle <SPAN style=3D"COLOR: =
#000040">*</SPAN>primBuff<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">   GFXPrimitive <SPAN style=3D"COLOR: =
#000040">*</SPAN>prim<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   U32 primBuffIndex<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   BaseMatInstance <SPAN style=3D"COLOR: =
#000040">*</SPAN>matInst<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   F32 visibility<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   MatrixF<SPAN style=3D"COLOR: =
#000040">*</SPAN> objectToWorld<SPAN style=3D"COLOR: #008080">;</SPAN>   =
    </PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">   MatrixF<SPAN style=3D"COLOR: =
#000040">*</SPAN> worldToCamera<SPAN style=3D"COLOR: #008080">;</SPAN>   =
    </PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   MatrixF<SPAN style=3D"COLOR: #000040">*</SPAN> =
projection<SPAN style=3D"COLOR: #008080">;</SPAN> =
</PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #008000">}</SPAN><SPAN =
style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE--></DIV>
<H2>RenderMeshMgr</H2>
<P>The final call issued to render almost every mesh object in Torque3D =
is=20
located in <EM>=E2=80=98RenderMeshMgr::render()=E2=80=99</EM>. =
<STRONG>RenderMeshMgr</STRONG>=20
contains a list of <STRONG>MeshRenderInst</STRONG>, each of which =
describes a=20
mesh instance which needs to be rendered. As you can see, from the code =
to the=20
right,&nbsp; this structure contains the basic information needed to =
render a=20
mesh instance (abridged version, see=20
<EM>=E2=80=98Engine/source/renderInstance/renderPassManager=E2=80=99</EM>=
); the vertex buffer,=20
primitive buffer (index buffer + geometry information), transforms, and=20
material.</P>
<P>For each of these instances, the <STRONG>RenderMeshMgr</STRONG> will =
set=20
vertex and primitive information, pass the relevant, per-instance data =
to the=20
<STRONG>BaseMatInstance</STRONG>, and then issue a DrawPrimitive =
call.</P>
<P>The transforms are a perfect example of per-instance data, so we will =
trace=20
their path. Each <STRONG>MeshRenderInst</STRONG> contains the transforms =
that it=20
needs to draw properly, and these get assigned to shader constants prior =
to=20
render in <EM>=E2=80=98RenderMeshMgr::render()=E2=80=99&nbsp; </EM>with =
the following call: <!--DEVFMTCODE--><PRE class=3Ddevcodeblock =
title=3DC++><DIV class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">mat<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>setTransforms<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #000040">*</SPAN>passRI<SPAN =
style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>objectToWorld, <SPAN style=3D"COLOR: =
#000040">*</SPAN>passRI<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>worldToCamera, <SPAN style=3D"COLOR: =
#000040">*</SPAN>passRI<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>projection<SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<P>This code passes the per-instance transforms through some methods =
into=20
<EM>=E2=80=98ProcessedShaderMaterial::setTransforms=E2=80=99</EM>. Here, =
the transforms get=20
combined, manipulated and set as shader constants. Where do these =
transforms get=20
assigned? For that we go to the next step in our backtracking of a mesh=20
render.</P>
<H2>TSMesh</H2>
<P>The TSMesh class encapsulates a huge amount of functionality, most of =
which=20
is way out of the scope of this document. We=E2=80=99ll start with a =
look at=20
TSMesh::innerRender (Heavily abridged, see=20
<EM>=E2=80=98Engine/source/ts/tsMesh.cpp=E2=80=99</EM>).<BR><!--DEVFMTCOD=
E--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">MeshRenderInst <SPAN style=3D"COLOR: =
#000040">*</SPAN>coreRI <SPAN style=3D"COLOR: #000080">=3D</SPAN> =
renderPass<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>allocInst<SPAN style=3D"COLOR: =
#000080">&lt;</SPAN>MeshRenderInst<SPAN style=3D"COLOR: =
#000080">&gt;</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN><SPAN =
style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">coreRI<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>type <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> RenderPassManager<SPAN style=3D"COLOR: =
#008080">::</SPAN><SPAN style=3D"COLOR: #007788">RIT_Mesh</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">F32 meshVisibility <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> rdata.<SPAN style=3D"COLOR: =
#007788">getFadeOverride</SPAN><SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN> <SPAN =
style=3D"COLOR: #000040">*</SPAN> mVisibility<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">coreRI<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>visibility =
<SPAN style=3D"COLOR: #000080">=3D</SPAN> meshVisibility<SPAN =
style=3D"COLOR: #008080">;</SPAN> </PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">coreRI<SPAN =
style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>objectToWorld <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> renderPass<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>allocXform<SPAN style=3D"COLOR: #008000">(</SPAN> =
GFX<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>getWorldMatrix<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN> <SPAN =
style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">coreRI<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>worldToCamera <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> renderPass<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>allocXform<SPAN style=3D"COLOR: #008000">(</SPAN> =
rdata.<SPAN style=3D"COLOR: #007788">getCamTransform</SPAN><SPAN =
style=3D"COLOR: #008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN> =
<SPAN style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">coreRI<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>projection =
<SPAN style=3D"COLOR: #000080">=3D</SPAN> renderPass<SPAN =
style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>allocXform<SPAN style=3D"COLOR: #008000">(</SPAN> =
GFX<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>getProjectionMatrix<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN> <SPAN =
style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<P>This is where the <STRONG>MeshRenderInst</STRONG> gets allocated, and =
later=20
added to the active <STRONG>RenderPassManager </STRONG>for the=20
<STRONG>SceneState</STRONG>. This, in turn, provides it to the=20
<STRONG>RenderMeshMgr</STRONG>, which adds it to its list of instances =
because=20
it has a compatible type, =
<EM>=E2=80=98RenderPassManager::RIT_Mesh=E2=80=99.</EM> The variable I=20
would like to draw attention to is <EM>=E2=80=98rdata=E2=80=99</EM> =
which has been passed in as=20
a parameter to <EM>=E2=80=98TSMesh::innerRender=E2=80=99</EM>. This =
parameter gets passed=20
through a chain of methods. Working backwards: =
<EM>TSMesh::innerRender()</EM>,=20
is called by <EM>TSMesh::render()</EM>, which is called by=20
<EM>TSShapeInstance::render()</EM>, which is called by=20
<EM>ShapeBase::render()</EM> as well as =
<EM>TSStatic::prepRenderImage()</EM>. I=20
will be skipping over <STRONG>TSShapeInstance</STRONG>, because it is =
outside=20
the scope of this document, and does not modify the data member in which =
we are=20
interested.</P>
<H2>ShapeBase and TSStatic</H2>
<P>The next step in this chain are the game object base-classes=20
<STRONG>ShapeBase</STRONG>, and <STRONG>TSStatic</STRONG>. These classes =
each=20
have a <STRONG>TSShapeInstance </STRONG>member variable which gets a =
call to=20
=E2=80=98<EM>render()</EM>=E2=80=98, and is passed an instance of =
<STRONG>TSRenderState=20
</STRONG>which contains the data we are following, among other =
things.</P>
<P>Each instance of <STRONG>TSStatic </STRONG>has several data members, =
which=20
are exposed to the scripting language in=20
<EM>=E2=80=98TSStatic::initPersistFields()=E2=80=99.</EM> We will be =
modifying <STRONG>TSStatic=20
</STRONG>simply because it makes for shorter, cleaner example code, but =
the=20
concepts introduced are applicable to <STRONG>ShapeBase</STRONG>,=20
<STRONG>GameBase</STRONG>, or wherever your game-object needs take =
you.</P>
<H1>Adding Per-Instance Data to TSStatic</H1>
<P>Now that we have skimmed over the path for data to get from a =
game-object to=20
a draw primitive call, we are going to use the material feature that we =
created=20
in the <A href=3D"http://gameclay.com/documentation/t3d-materials"=20
target=3D_blank>preceding document</A> and change how the data gets =
assigned to=20
the shader constant. Previously, the value for the =
<EM>=E2=80=98multConst=E2=80=99</EM>=20
parameter was assigned from a parameter specified in the=20
<STRONG>Material</STRONG> definition in script. Once this part of the =
document=20
is complete, the value will be assigned from a parameter which can =
differ for=20
any <STRONG>TSStatic </STRONG>in the scene. To do this, we will start by =
adding=20
the script-accessible data field on <STRONG>TSStatic</STRONG> and follow =
the=20
data path forward, all the way back to =
<STRONG>RenderMeshMgr</STRONG>.</P>
<P>The first task is to remove the =
<EM>=E2=80=98mMultConstant=E2=80=99</EM> data member that we=20
added to <STRONG>Material</STRONG> and put it in =
<STRONG>TSStatic</STRONG>.=20
Remember to initialize the data member in the constructor (don=E2=80=99t =
initialize to=20
-1.0 alpha any more), and expose it as a field in=20
<EM>=E2=80=98TSStatic::initPersistFields()=E2=80=99</EM>. Remove the =
code that was added in the=20
section <STRONG>=E2=80=98Exposing Data to the Shader =
Feature=E2=80=99</STRONG> in the preceding=20
document, as well.</P>
<P>Now we must make sure that this member is updated over the network, =
by=20
modifying <EM>=E2=80=98packUpdate()/unpackUpdate()=E2=80=99.</EM> Please =
note that use of update=20
masks, and packing should be considered for a real feature =
implementation,=20
however this delves slightly deeper into Torque3D networking, and is out =
of the=20
scope of this document. For now we will simply write the full color =
value on=20
each call to <EM>=E2=80=98packUpdate()=E2=80=99</EM>.</P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">491</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">U32 TSStatic<SPAN style=3D"COLOR: #008080">::</SPAN><SPAN =
style=3D"COLOR: #007788">packUpdate</SPAN><SPAN style=3D"COLOR: =
#008000">(</SPAN>NetConnection <SPAN style=3D"COLOR: =
#000040">*</SPAN>con, U32 mask, BitStream <SPAN style=3D"COLOR: =
#000040">*</SPAN>stream<SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">492</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">493</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   U32 retMask <SPAN style=3D"COLOR: #000080">=3D</SPAN> =
Parent<SPAN style=3D"COLOR: #008080">::</SPAN><SPAN style=3D"COLOR: =
#007788">packUpdate</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN>con, =
mask, stream<SPAN style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">494</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   stream<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>write<SPAN =
style=3D"COLOR: #008000">(</SPAN>mMultConstant<SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">495</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">496</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: #666666">// =
...</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE-=
->
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">517</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">void</SPAN> TSStatic<SPAN =
style=3D"COLOR: #008080">::</SPAN><SPAN style=3D"COLOR: =
#007788">unpackUpdate</SPAN><SPAN style=3D"COLOR: =
#008000">(</SPAN>NetConnection <SPAN style=3D"COLOR: =
#000040">*</SPAN>con, BitStream <SPAN style=3D"COLOR: =
#000040">*</SPAN>stream<SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">518</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">519</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   Parent<SPAN style=3D"COLOR: #008080">::</SPAN><SPAN =
style=3D"COLOR: #007788">unpackUpdate</SPAN><SPAN style=3D"COLOR: =
#008000">(</SPAN>con, stream<SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">520</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   stream<SPAN =
style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>read<SPAN style=3D"COLOR: #008000">(</SPAN><SPAN =
style=3D"COLOR: #000040">&amp;</SPAN>mMultConstant<SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">521</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">522</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: #666666">// =
...</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE-=
-><BR>With=20
this code in place, lets turn attention to=20
<EM>=E2=80=98TSStatic::prepRenderImage()=E2=80=99</EM>. In this method, =
a=20
<STRONG>TSRenderState</STRONG> instance, called =
<EM>=E2=80=98rdata=E2=80=99</EM> is created and=20
passed to the <EM>render()</EM> method of =
<STRONG>TSShapeInstance.</STRONG>=20
Modify the <STRONG>TSRenderState</STRONG> structure in=20
<EM>=E2=80=98Engine/source/ts/tsRenderState.h=E2=80=99</EM> to include =
the additional data=20
member.<BR><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard6 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D6&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">46</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">class</SPAN> =
TSRenderState</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">47</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">48</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">protected</SPAN><SPAN =
style=3D"COLOR: #008080">:</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">49</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   ColorF =
mMultConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">50</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">public</SPAN><SPAN =
style=3D"COLOR: #008080">:</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">51</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #0000ff">const</SPAN> ColorF <SPAN style=3D"COLOR: =
#000040">&amp;</SPAN>getMultConstant<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN> <SPAN =
style=3D"COLOR: #0000ff">const</SPAN> </PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">52</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">      <SPAN =
style=3D"COLOR: #008000">{</SPAN> <SPAN style=3D"COLOR: =
#0000ff">return</SPAN> mMultConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN> <SPAN style=3D"COLOR: =
#008000">}</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">53</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: =
#0000ff">void</SPAN> setMultConstant<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #0000ff">const</SPAN> ColorF =
<SPAN style=3D"COLOR: #000040">&amp;</SPAN>val<SPAN style=3D"COLOR: =
#008000">)</SPAN> </PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">54</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">      <SPAN style=3D"COLOR: #008000">{</SPAN> mMultConstant =
<SPAN style=3D"COLOR: #000080">=3D</SPAN> val<SPAN style=3D"COLOR: =
#008080">;</SPAN> <SPAN style=3D"COLOR: =
#008000">}</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">55</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">56</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #666666">// =
...</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE-=
->
<P></P>
<P>Next add a call to the new method in=20
<EM>=E2=80=98TSStatic::prepRenderImage()=E2=80=99</EM>.<BR><!--DEVFMTCODE=
--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">146</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   MatrixF world <SPAN style=3D"COLOR: #000080">=3D</SPAN> =
GFX<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>getWorldMatrix<SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">147</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">148</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// Set up our TS render =
state.</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">149</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   TSRenderState rdata<SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">150</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   =
rdata.<SPAN style=3D"COLOR: #007788">setCamTransform</SPAN><SPAN =
style=3D"COLOR: #008000">(</SPAN> world <SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">151</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   rdata.<SPAN style=3D"COLOR: =
#007788">setSceneState</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN> =
state <SPAN style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">152</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   rdata.<SPAN style=3D"COLOR: =
#007788">setFadeOverride</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN> =
1.0f <SPAN style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">153</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">154</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   =
rdata.<SPAN style=3D"COLOR: #007788">setMultConstant</SPAN><SPAN =
style=3D"COLOR: #008000">(</SPAN> mMultConstant <SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: #008080">;</SPAN> <SPAN =
style=3D"COLOR: #666666">// Add this line</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">155</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #666666">// =
...</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE-=
->
<P></P>
<P>This will cause the value to be passed down the chain we traced =
earlier all=20
the way into <EM>=E2=80=98TSMesh::innerRender()=E2=80=99</EM> and that =
is our next stop. This is=20
where data gets assigned to a <STRONG>MeshRenderInst</STRONG> and then =
passed to=20
the active <STRONG>RenderPassManager</STRONG>. First add a member to=20
<STRONG>MeshRenderInst</STRONG> in=20
<EM>=E2=80=98Engine/source/renderInstance/renderPassManager.h=E2=80=99</E=
M> for the data we are=20
passing around:<BR><!--DEVFMTCODE--><PRE class=3Ddevcodeblock =
title=3DC++><DIV class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">ColorF multConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE--><BR>Then=20
add an assignment in <EM>=E2=80=98TSMesh::innerRender()=E2=80=99</EM> =
near the following code:
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">146</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   MeshRenderInst <SPAN style=3D"COLOR: =
#000040">*</SPAN>coreRI <SPAN style=3D"COLOR: #000080">=3D</SPAN> =
renderPass<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>allocInst<SPAN style=3D"COLOR: =
#000080">&lt;</SPAN>MeshRenderInst<SPAN style=3D"COLOR: =
#000080">&gt;</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN><SPAN =
style=3D"COLOR: #008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">147</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   coreRI<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>type <SPAN =
style=3D"COLOR: #000080">=3D</SPAN> RenderPassManager<SPAN =
style=3D"COLOR: #008080">::</SPAN><SPAN style=3D"COLOR: =
#007788">RIT_Mesh</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">148</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">149</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   coreRI<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>multConstant =
<SPAN style=3D"COLOR: #000080">=3D</SPAN> rdata.<SPAN style=3D"COLOR: =
#007788">getMultConstant</SPAN><SPAN style=3D"COLOR: =
#008000">(</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN> <SPAN style=3D"COLOR: #666666">// Add =
this =
line</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE=
-->
<P></P>
<P>The next step is to provide a path for communication between=20
<STRONG>RenderMeshMgr</STRONG> and =
<STRONG>ProcessedShaderMaterial</STRONG>. We=20
can do that many ways, including making methods, but for the ease of =
this=20
example, modify the SceneGraphData structure in=20
<EM>=E2=80=98Engine/source/materials/sceneData.h=E2=80=99</EM>.</P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">66</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// =
misc</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines devcodelinesodd =
devcodelinesodd" width=3D"1%">67</TD><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   MatrixF        objTrans<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">68</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   VertexData <SPAN style=3D"COLOR: #000040">*</SPAN>   =
vertData<SPAN style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">69</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   GFXCubemap =
<SPAN style=3D"COLOR: #000040">*</SPAN>   cubemap<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">70</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   F32            visibility<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">71</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   ColorF<SPAN style=3D"COLOR: =
#000040">*</SPAN>        multConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN> <SPAN style=3D"COLOR: #666666">// Add this =
line</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE=
-->
<P></P>
<P>Next add the following line to =
<EM>=E2=80=98RenderBinManager::setupSGData()=E2=80=99</EM> in=20
<EM>=E2=80=98Engine/source/renderInstance/renderBinManager.cpp=E2=80=99</=
EM>.<BR><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">data.<SPAN style=3D"COLOR: =
#007788">multConstant</SPAN> <SPAN style=3D"COLOR: #000080">=3D</SPAN> =
<SPAN style=3D"COLOR: #000040">&amp;</SPAN>ri<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>multConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE--><BR><STRONG>RenderMeshMgr</STRONG>=20
calls <EM>=E2=80=98RenderBinManager::setupSGData()=E2=80=99</EM> during =
its render loop, which=20
will assign the value into the <STRONG>SceneGraphData</STRONG> =
structure. In=20
order to get it into the shader constants, I am going to introduce a =
different=20
method for setting shader constants than I demonstrated previously. =
Modify the=20
ConstantMultFeature class to include the following:
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard12 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D12&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">41</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">virtual</SPAN> String =
getName<SPAN style=3D"COLOR: #008000">(</SPAN><SPAN style=3D"COLOR: =
#008000">)</SPAN> <SPAN style=3D"COLOR: #008000">{</SPAN> <SPAN =
style=3D"COLOR: #0000ff">return</SPAN> <SPAN style=3D"COLOR: =
#ff0000">"ConstantMultFeature"</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN> <SPAN style=3D"COLOR: =
#008000">}</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">42</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">43</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #666666">// add this code</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">44</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #0000ff">class</SPAN> ConstMultFeatureHdls <SPAN =
style=3D"COLOR: #008080">:</SPAN> <SPAN style=3D"COLOR: =
#0000ff">public</SPAN> ShaderFeatureConstHandles</PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">45</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #008000">{</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">46</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   =
GFXShaderConstHandle<SPAN style=3D"COLOR: #000040">*</SPAN> =
mMultConstSC<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">47</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">48</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#0000ff">public</SPAN><SPAN style=3D"COLOR: =
#008080">:</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">49</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   ConstMultFeatureHdls<SPAN style=3D"COLOR: =
#008000">(</SPAN> GFXShader <SPAN style=3D"COLOR: =
#000040">*</SPAN>shader <SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">50</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">51</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">      mMultConstSC <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> shader<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>getShaderConstHandle<SPAN =
style=3D"COLOR: #008000">(</SPAN><SPAN style=3D"COLOR: =
#ff0000">"$multConst"</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">52</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #008000">}</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">53</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">54</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: =
#0000ff">virtual</SPAN> <SPAN style=3D"COLOR: #0000ff">void</SPAN> =
setConsts<SPAN style=3D"COLOR: #008000">(</SPAN> SceneState <SPAN =
style=3D"COLOR: #000040">*</SPAN>state, <SPAN style=3D"COLOR: =
#0000ff">const</SPAN> SceneGraphData <SPAN style=3D"COLOR: =
#000040">&amp;</SPAN>sgData, GFXShaderConstBuffer <SPAN style=3D"COLOR: =
#000040">*</SPAN>buffer <SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">55</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">56</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">      <SPAN style=3D"COLOR: =
#0000ff">if</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN> =
mMultConstSC<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN style=3D"COLOR: =
#000080">&gt;</SPAN>isValid<SPAN style=3D"COLOR: #008000">(</SPAN><SPAN =
style=3D"COLOR: #008000">)</SPAN> <SPAN style=3D"COLOR: =
#000040">&amp;&amp;</SPAN> sgData.<SPAN style=3D"COLOR: =
#007788">multConstant</SPAN> <SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">57</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">      <SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">58</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">         buffer<SPAN style=3D"COLOR: =
#000040">-</SPAN><SPAN style=3D"COLOR: #000080">&gt;</SPAN>set<SPAN =
style=3D"COLOR: #008000">(</SPAN> mMultConstSC, <SPAN style=3D"COLOR: =
#000040">*</SPAN>sgData.<SPAN style=3D"COLOR: =
#007788">multConstant</SPAN> <SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">59</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">      <SPAN style=3D"COLOR: =
#008000">}</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">60</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: =
#008000">}</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">61</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #008000">}</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">62</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">&nbsp;</PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">63</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #0000ff">virtual</SPAN> =
ShaderFeatureConstHandles<SPAN style=3D"COLOR: #000040">*</SPAN> =
createConstHandles<SPAN style=3D"COLOR: #008000">(</SPAN> GFXShader =
<SPAN style=3D"COLOR: #000040">*</SPAN>shader <SPAN style=3D"COLOR: =
#008000">)</SPAN> </PRE></TD></TR><TR><TD class=3D"devcodelines =
devcodelinesodd devcodelinesodd" width=3D"1%">64</TD><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">65</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// This memory is cleaned =
up via a delete call which takes place</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">66</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #666666">// in =
ShaderRenderPassData::reset()</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">67</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #0000ff">return</SPAN> <SPAN style=3D"COLOR: =
#0000dd">new</SPAN> ConstMultFeatureHdls<SPAN style=3D"COLOR: =
#008000">(</SPAN> shader <SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN> </PRE></TD></TR><TR><TD =
class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">68</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #008000">}</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelines width=3D"1%">69</TD><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline"><SPAN =
style=3D"COLOR: #666666">// done added =
code</PRE></SPAN></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVFMTCODE=
-->
<P></P>
<P>This method for assignment of shader constants allows you to =
encapsulate the=20
handle acquisition and value assignment within the shader feature which =
requires=20
those constants.</P>
<P>One final task remains, to enable <EM>MFT_ConstantMult</EM> during=20
<EM>=E2=80=98ProcessedShaderMaterial::_determineFeatures()=E2=80=99.</EM>=
 To do this, we will=20
add a boolean field on <STRONG>Material</STRONG>. I have provided the =
code=20
snippets, for a step-by-step, see the <A=20
href=3D"http://gameclay.com/documentation/t3d-materials" =
target=3D_blank>preceding=20
document</A>.</P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard13 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D13&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">229</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// =
'Engine/source/materials/processedShaderMaterial.cpp'</SPAN></PRE></TD></=
TR><TR><TD class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">230</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #0000ff">if</SPAN> <SPAN style=3D"COLOR: =
#008000">(</SPAN> mMaterial<SPAN style=3D"COLOR: #000040">-</SPAN><SPAN =
style=3D"COLOR: #000080">&gt;</SPAN>mMultConstant <SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelines =
width=3D"1%">231</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">      fd.<SPAN style=3D"COLOR: =
#007788">features</SPAN>.<SPAN style=3D"COLOR: =
#007788">addFeature</SPAN><SPAN style=3D"COLOR: #008000">(</SPAN> =
MFT_ConstantMult <SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard14 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D14&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">256</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// =
'Engine/source/materials/materialDefinition.h'</SPAN></PRE></TD></TR><TR>=
<TD class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">257</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   <SPAN =
style=3D"COLOR: #0000ff">bool</SPAN> mMultConstant<SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard15 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D15&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">137</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// =
'Engine/source/materials/materialDefinition.cpp'</SPAN></PRE></TD></TR><T=
R><TD class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">138</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   mMultConstant =
<SPAN style=3D"COLOR: #000080">=3D</SPAN> <SPAN style=3D"COLOR: =
#0000ff">false</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<P><!--DEVFMTCODE--><PRE class=3Ddevcodeblock title=3DC++><TABLE =
class=3Ddevcodetools><TBODY><TR><TD>&nbsp;C++&nbsp;|&nbsp;</TD><TD =
style=3D"BACKGROUND-IMAGE: =
url(http://gameclay.com/wp-content/plugins/devformatter/img/devformatter-=
copy.png); WIDTH: 16px; BACKGROUND-REPEAT: no-repeat; =
BACKGROUND-POSITION: 50% 50%; HEIGHT: 16px"><EMBED id=3DZeroClipboard16 =
height=3D16 type=3Dapplication/x-shockwave-flash align=3Dmiddle =
pluginspage=3Dhttp://www.macromedia.com/go/getflashplayer width=3D16 =
src=3Dhttp://gameclay.com/wp-content/plugins/devformatter/_zclipboard.swf=
 wmode=3D"transparent" =
flashvars=3D"id=3D16&amp;width=3D16&amp;height=3D16" =
allowFullScreen=3D"false" allowScriptAccess=3D"always" =
bgcolor=3D"#ffffff" quality=3D"best" menu=3D"false" =
loop=3D"false"></TD><TD>&nbsp;copy&nbsp;code&nbsp;|</TD><TD =
style=3D"CURSOR: pointer" title=3D"DevFormatter Plugin" =
onclick=3Ddevfmt_credits()>?</TD><TD =
width=3D"99%">&nbsp;</TD></TR></TBODY></TABLE><DIV =
class=3Ddevcodeoverflow><TABLE class=3Ddevcodearea =
width=3D"100%"><TBODY><TR><TD class=3Ddevcodelines =
width=3D"1%">239</TD><TD class=3Ddevcodelinesarea><PRE class=3D"devcode =
devcodeline">   <SPAN style=3D"COLOR: #666666">// =
'Engine/source/materials/materialDefinition.cpp'</SPAN></PRE></TD></TR><T=
R><TD class=3D"devcodelines devcodelinesodd devcodelinesodd" =
width=3D"1%">240</TD><TD class=3D"devcodelinesarea devcodelinesareaodd =
devcodelinesareaodd"><PRE class=3D"devcode devcodeline">   addField<SPAN =
style=3D"COLOR: #008000">(</SPAN><SPAN style=3D"COLOR: =
#ff0000">"multConstant"</SPAN>, TypeBool, Offset<SPAN style=3D"COLOR: =
#008000">(</SPAN>mMultConstant, Material<SPAN style=3D"COLOR: =
#008000">)</SPAN><SPAN style=3D"COLOR: #008000">)</SPAN><SPAN =
style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE-->
<P></P>
<H1>Testing</H1>
<DIV style=3D"FLOAT: left"><!--DEVFMTCODE--><PRE class=3Ddevcodeblock =
title=3DC++><DIV style=3D"WIDTH: 300px" class=3Ddevcodeoverflow><TABLE =
class=3Ddevcodearea width=3D"100%"><TBODY><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">singleton =
Material<SPAN style=3D"COLOR: #008000">(</SPAN>skin<SPAN style=3D"COLOR: =
#008000">)</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: =
#008000">{</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">   mapTo <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> <SPAN style=3D"COLOR: #ff0000">"skin"</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   baseTex<SPAN style=3D"COLOR: =
#008000">[</SPAN><SPAN style=3D"COLOR: #0000dd">0</SPAN><SPAN =
style=3D"COLOR: #008000">]</SPAN> <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> <SPAN style=3D"COLOR: #ff0000">"skin"</SPAN><SPAN =
style=3D"COLOR: #008080">;</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   =
bumpTex<SPAN style=3D"COLOR: #008000">[</SPAN><SPAN style=3D"COLOR: =
#0000dd">0</SPAN><SPAN style=3D"COLOR: #008000">]</SPAN> <SPAN =
style=3D"COLOR: #000080">=3D</SPAN> <SPAN style=3D"COLOR: =
#ff0000">"skin_n"</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   pixelSpecular<SPAN style=3D"COLOR: =
#008000">[</SPAN>0<SPAN style=3D"COLOR: #008000">]</SPAN> <SPAN =
style=3D"COLOR: #000080">=3D</SPAN> <SPAN style=3D"COLOR: =
#0000ff">true</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">   specular<SPAN style=3D"COLOR: =
#008000">[</SPAN><SPAN style=3D"COLOR: #0000dd">0</SPAN><SPAN =
style=3D"COLOR: #008000">]</SPAN> <SPAN style=3D"COLOR: =
#000080">=3D</SPAN> <SPAN style=3D"COLOR: #ff0000">"0.6 0.7 0.6 =
0.7"</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline">   specularPower<SPAN style=3D"COLOR: =
#008000">[</SPAN>0<SPAN style=3D"COLOR: #008000">]</SPAN> <SPAN =
style=3D"COLOR: #000080">=3D</SPAN> <SPAN style=3D"COLOR: =
#800080">32.0</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3Ddevcodelinesarea><PRE =
class=3D"devcode devcodeline">&nbsp;</PRE></TD></TR><TR><TD =
class=3D"devcodelinesarea devcodelinesareaodd devcodelinesareaodd"><PRE =
class=3D"devcode devcodeline">   <SPAN style=3D"COLOR: #666666">// =
change this line</SPAN></PRE></TD></TR><TR><TD =
class=3Ddevcodelinesarea><PRE class=3D"devcode devcodeline">   =
multConstant <SPAN style=3D"COLOR: #000080">=3D</SPAN> <SPAN =
style=3D"COLOR: #0000ff">true</SPAN><SPAN style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR><TR><TD class=3D"devcodelinesarea =
devcodelinesareaodd devcodelinesareaodd"><PRE class=3D"devcode =
devcodeline"><SPAN style=3D"COLOR: #008000">}</SPAN><SPAN =
style=3D"COLOR: =
#008080">;</SPAN></PRE></TD></TR></TBODY></TABLE></DIV></PRE><!--END_DEVF=
MTCODE--></DIV>
<P>Recall that we modified the <STRONG>Material</STRONG> definition to =
include a=20
color value for <EM>=E2=80=98multConstant=E2=80=99</EM>. Change that to =
simply indicate=20
=E2=80=98true=E2=80=99.</P>
<P>Next, fire up the Torque3D World Editor, and add some shapes that use =
that=20
material. If you inspect the object you created, you will see that the =
field we=20
exposed on <STRONG>TSStatic</STRONG> is visible in the inspector window. =
You can=20
use the inspector to modify the color value using the color selector =
widget, and=20
you should see your shape changing colors. If you add multiple copies of =
the=20
shape, each copy stores, and draws, its own value for the color =
multiply.</P>
<H1>Conclusion</H1>
<H1><A=20
href=3D"http://gameclay.com/wp-content/uploads/2009/08/screenshot_002-000=
00.png"=20
rel=3Dlightbox[106]><IMG class=3D"alignright size-large wp-image-171"=20
title=3D"Red Green and Blue Robots" alt=3D"Red Green and Blue Robots"=20
src=3D"http://gameclay.com/wp-content/uploads/2009/08/screenshot_002-0000=
0-1024x560.png"=20
width=3D499 height=3D272></A></H1>
<P>This document should provide the programmer with the tools needed to=20
implement shader effects which have parameters that vary on a per-shape =
basis.=20
Combining the techniques learned in this document with other powerful =
constructs=20
in Torque3D will allow you to create the visual effects that you need =
for your=20
game.</P></DIV>
<DIV class=3Ddiv-1>
<DIV class=3Dpost_edit><SPAN></SPAN></DIV></DIV>
<DIV class=3Dcomment>
<DIV>
<H4 id=3Dcomments>One Comment</H4>
<UL class=3Dcommentlist>
  <LI id=3Dcomment-199 class=3D"comment even thread-even depth-1">
  <DIV id=3Ddiv-comment-199>
  <DIV class=3D"comment-author vcard"><IMG class=3D"avatar avatar-32 =
photo" alt=3D""=20
  =
src=3D"http://0.gravatar.com/avatar/81f09cc504f020d122b3a71e783abcac?s=3D=
32&amp;d=3Dhttp%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9=
bb6523536%3Fs%3D32&amp;r=3DG"=20
  width=3D32 height=3D32><CITE><A class=3Durl =
href=3D"http://project.apex-games.net/"=20
  rel=3D"external nofollow">Ross Pawley</A></CITE> Says:</DIV>
  <DIV class=3D"comment-meta commentmetadata"><A title=3D""=20
  =
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d#com=
ment-199">September=20
  25th, 2010 at 10:58 am</A></DIV>
  <P>Nice article Pat! It seems that adding TSRenderState paid off even =
more=20
  than I=E2=80=99d hoped <IMG class=3Dwp-smiley alt=3D:)=20
  src=3D"http://gameclay.com/wp-includes/images/smilies/icon_smile.gif"> =
</P>
  <DIV class=3Dreply></DIV></DIV></LI></UL>
<DIV class=3Dnavigation>
<DIV class=3Dalignleft></DIV>
<DIV class=3Dalignright></DIV></DIV>
<DIV id=3Drespond>Leave a Reply
<DIV id=3Dcancel-comment-reply><SMALL><A style=3D"DISPLAY: none"=20
id=3Dcancel-comment-reply-link=20
href=3D"http://gameclay.com/documentation/per-shape-shader-values-t3d#res=
pond"=20
rel=3Dnofollow>Click here to cancel reply.</A></SMALL> </DIV>
<FORM id=3Dcommentform method=3Dpost=20
action=3Dhttp://gameclay.com/wp-comments-post.php>
<P><INPUT id=3Dauthor tabIndex=3D1 aria-required=3Dtrue size=3D22 =
type=3Dtext name=3Dauthor>=20
<LABEL for=3Dauthor><SMALL>Name (required)</SMALL></LABEL></P>
<P><INPUT id=3Demail tabIndex=3D2 aria-required=3Dtrue size=3D22 =
type=3Dtext name=3Demail>=20
<LABEL for=3Demail><SMALL>Mail (will not be published)=20
(required)</SMALL></LABEL></P>
<P><INPUT id=3Durl tabIndex=3D3 size=3D22 type=3Dtext name=3Durl> <LABEL =

for=3Durl><SMALL>Website</SMALL></LABEL></P>
<P><TEXTAREA id=3Dcomment tabIndex=3D4 rows=3D10 cols=3D100 =
name=3Dcomment></TEXTAREA></P>
<P><INPUT id=3Dsubmit tabIndex=3D5 value=3D"Submit Comment" =
type=3Dsubmit name=3Dsubmit>=20
<INPUT value=3D106 type=3Dhidden name=3Dcomment_post_ID> <INPUT =
id=3Dcomment_post_ID=20
value=3D106 type=3Dhidden name=3Dcomment_post_ID> <INPUT =
id=3Dcomment_parent value=3D0=20
type=3Dhidden name=3Dcomment_parent>=20
</P></FORM></DIV></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV>
<DIV id=3D_wrap class=3Dlayout1>
<DIV>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV>
<DIV id=3D_wrap class=3Dlayout1>
<DIV>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV>
<DIV id=3D_wrap class=3Dlayout1>
<DIV>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV><SPAN=20
class=3Dforclear></SPAN></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV>
<DIV id=3Dfooter>
<DIV class=3Dhd>
<DIV class=3Dhc></DIV></DIV>
<DIV class=3Dbd>
<DIV class=3Dbc>
<DIV class=3Ds>
<DIV id=3Dcolumn_wrap class=3Dlayout3>
<DIV class=3D"column order1 column1"></DIV>
<DIV class=3D"column order2 column2"></DIV>
<DIV class=3D"column order3 column3"></DIV><SPAN =
class=3Dforclear></SPAN></DIV><SPAN=20
class=3Dforclear></SPAN>
<P class=3Dsignature><B>GameClay</B> is powered by <A=20
href=3D"http://wordpress.org/">WordPress</A> and <A=20
href=3D"http://www.onepresscommunity.com/">OnePress Community</A><BR><A=20
href=3D"http://gameclay.com/feed">Blog (RSS)</A> and <A=20
href=3D"http://gameclay.com/comments/feed">Comments=20
(RSS)</A></P></DIV></DIV></DIV>
<DIV class=3Dft>
<DIV class=3Dfc></DIV></DIV></DIV></DIV></BODY></HTML>

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://gameclay.com/wp-content/uploads/2009/08/screenshot_002-00000-1024x560.png

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
hRde5GzTWfJy8/jd00+j6RqbN22a0timw0zn1/kMDgTYv28fPn8uq1atYueOHYyGQpSVl2POz2HQ
bKYTnb4EFC6ex+DeOiz6zGrAhyMRzpxpIsvjITfXTyKRwGwy0dPTS7Y3GyWpkJeXi9rdQ29vHx63
E7PJhDgLHj+6rjM6GiIYDOLL8WIyySSTSQYGBsj2eJBlCYvFjN1uo72zm3g8jtlszljppCgKnZ1d
BAIDvPXWDpYuWYyqadTXn6K/f4B4PInNZicejyOKGkklSTgSIZFIpEOJZov51dUXbOvp7+JM2ynm
ldXg9+ZN6q8gP39a/fhy3vZy6Onp4dt/8zcIoki210ssFsNus9Ha0sJXv/Y1CguLcDozC2sxMDAw
MDB4r5jS6qqhs5a6/jN8cdWXaBtu4bnG58lXdarXfQTJkrIAq6vup/PNfycRHsLiyaNgw8OXbFO5
iAeApqYWwQsW1KTq9cZik4QQUbh8THJXVzdmiwW73Y7VasVsNqetnslkktOnTzM8PMJtt96Mw2HH
bDZjsZhxOt92Ey4pLpp2oqZIOALo7D+4D13TaGtup7yimKLiAiRJQlFUerp7OdfUzo03bmZwaIRg
cJQ8xX9JS0lffz9nz57l4x//GGVlZTQ0NBAYGKC7u5ufPv4zjhw+zLJly/jsZz/D9x/9AatWruTE
yZOsW7uGP7z0Ml955MtUV1fzu6ef5oXnX2DFyhV84fOf58knn8Jqs9LX18cXv/AFfvOb37Jt+3YK
Cwr44he/kLaujoyMMDw8zFceeQSv18vAwACqqvKv//oYFRUVPPHLJ7jl5lv40IceQFEU/vqv/x+G
hof56Ec+zNatWzl9+jT/95//GU3T+fKXvsiSJUvYvn07T/3619x9190Zn99XX30Nn8+Xjrm8Upwv
kMXjCU6fPk0kEkGWZCoqyt8+NoP2fv/SH4nHE2PJzwRGgkHWrFmJoiocPXqUWCxOPJ5AdLsYHR3l
hRf/wF0f/ABu98yVAFaLBVVVGRgY5MTJOmKxGG1t7YwEgwDs2bOPkpISqqoqWL1qJR63G0VRpqQE
W1BTw9mzTfj9frzZ2axbu5ZnnnmWnp4eao/Vcvttt/Hi73/P6tWr6Whv5xdPPEGuP5fjJ05w/31v
K5Fee+01mpqa2LplC0/88leTFAA1NQvYsWMnf/Ptb3Pd5utYu3YNBQUF/Otjj1FSUoIvJ4dt27ex
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

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://0.gravatar.com/avatar/81f09cc504f020d122b3a71e783abcac?s=32&d=http%3A%2F%2F0.gravatar.com%2Favatar%2Fad516503a11cd5ca435acc9bb6523536%3Fs%3D32&r=G

iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAB3UlEQVRYhe2WTY+qMBiFT6lVECKh
Bo18GFiSsPD/7/0N7oxsmuAKA4nRBJnFjTdzBy+2iJlMMmcJ7TlP31L6ku122+AbpX1n+C/Azwdg
jGE8Hr8EMFKdYJomPM+D4zgYjf5Mr+saRVFACIGyLN8HEAQBwjAEIeSf55RSzOdzcM4hhECWZdKe
0lsQBAHW63Ur/LMIIfB9H1EUDQtgmibCMJQ2Xa1WmM1mwwF4nte58q+6V2IwAMdxpMPvsm0bmvbc
/ukIxtjfr11FmqZhMpm8DqBS+j56CnC9XlHXtbJx0zS4XC6vAwBAURTKAKfTCbfbbRgAIQSaRq1t
EEJIjZMCKMtS2hAA8jyXrpr0nzDLMqlK5HmO/X4va6t2G+Z5jqqq/vu+qirl7ZI64JRSRFGExWLR
eSwty8Jms8HxeMThcJA6PU8BDMNAkiTQdV2GFYQQLJdL2LaN3W6H8/ncOb5zCwzDQJqm0uGfpes6
0jSFYRj9ACilSJIEjDHl8LsYY0iSBJRSdYA4jnut/Kt0XUccx2oAlmXBdd2Xw+9yXReWZckD+L4/
6CXU1R+0ABhj4JwPFn4X5/zh99QC4Jy/5QomhDxcWAtAtpfro0feLYDpdPo2gEfeLQCZNqqvHnl/
AA5xdGTRpnHZAAAAAElFTkSuQmCC

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: base64
Content-Location: http://gameclay.com/wp-includes/images/smilies/icon_smile.gif

R0lGODlhDwAPALMOAP/qAEVFRQAAAP/OAP/JAP+0AP6dAP/+k//9E///////xzMzM///6//lAAAA
AAAAACH5BAEAAA4ALAAAAAAPAA8AAARb0EkZap3YVabOGRcWcAgCnIMRTEEnCCfwpqt2mHEOagoO
nz+CKnADxoKFyiHHBBCSAdOiCVg8KwPZa7sVrgJZQWI8FhB2msGgwTXTWGqCXP4WBQr4wjDDstQm
EQA7

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/onepress/op-layout.css

HTML {
	BACKGROUND: #fff; COLOR: #000
}
BODY {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DIV {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
DD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
OL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
LI {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H1 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H2 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H3 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H4 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H5 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
H6 {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
PRE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
CODE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FORM {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
FIELDSET {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
LEGEND {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
INPUT {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TEXTAREA {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
P {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
BLOCKQUOTE {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TH {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TD {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; PADDING-TOP: 0px
}
TABLE {
	BORDER-SPACING: 0; BORDER-COLLAPSE: collapse
}
FIELDSET {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
IMG {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
ADDRESS {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
CAPTION {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
CITE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
CODE {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
DFN {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
EM {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
STRONG {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
TH {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
VAR {
	FONT-STYLE: normal; FONT-WEIGHT: normal
}
LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
CAPTION {
	TEXT-ALIGN: left
}
TH {
	TEXT-ALIGN: left
}
H1 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
H2 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
H3 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
H4 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
H5 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
H6 {
	FONT-SIZE: 100%; FONT-WEIGHT: normal
}
Q:before {
	CONTENT: ''
}
Q:after {
	CONTENT: ''
}
ABBR {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; FONT-VARIANT: normal; BORDER-TOP: =
0px; BORDER-RIGHT: 0px
}
ACRONYM {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; FONT-VARIANT: normal; BORDER-TOP: =
0px; BORDER-RIGHT: 0px
}
SUP {
	VERTICAL-ALIGN: text-top
}
SUB {
	VERTICAL-ALIGN: text-bottom
}
INPUT {
	FONT-FAMILY: inherit; FONT-SIZE: inherit; FONT-WEIGHT: inherit
}
TEXTAREA {
	FONT-FAMILY: inherit; FONT-SIZE: inherit; FONT-WEIGHT: inherit
}
SELECT {
	FONT-FAMILY: inherit; FONT-SIZE: inherit; FONT-WEIGHT: inherit
}
INPUT {
	FONT-SIZE: 100%
}
TEXTAREA {
	FONT-SIZE: 100%
}
SELECT {
	FONT-SIZE: 100%
}
LEGEND {
	COLOR: #000
}
BODY {
	FONT: small sans-serif
}
TABLE {
	FONT: 100% sans-serif
}
PRE {
	LINE-HEIGHT: 100%; FONT-FAMILY: monospace; FONT-SIZE: 108%
}
CODE {
	LINE-HEIGHT: 100%; FONT-FAMILY: monospace; FONT-SIZE: 108%
}
KBD {
	LINE-HEIGHT: 100%; FONT-FAMILY: monospace; FONT-SIZE: 108%
}
SAMP {
	LINE-HEIGHT: 100%; FONT-FAMILY: monospace; FONT-SIZE: 108%
}
TT {
	LINE-HEIGHT: 100%; FONT-FAMILY: monospace; FONT-SIZE: 108%
}
H1 {
	FONT-SIZE: 138.5%
}
H2 {
	FONT-SIZE: 123.1%
}
H3 {
	FONT-SIZE: 108%
}
H4 {
	FONT-SIZE: 93%
}
H5 {
	FONT-SIZE: 85%
}
H6 {
	FONT-SIZE: 77%
}
H1 {
	MARGIN: 1em 0px
}
H2 {
	MARGIN: 1em 0px
}
H3 {
	MARGIN: 1em 0px
}
H1 {
	FONT-WEIGHT: bold
}
H2 {
	FONT-WEIGHT: bold
}
H3 {
	FONT-WEIGHT: bold
}
H4 {
	FONT-WEIGHT: bold
}
H5 {
	FONT-WEIGHT: bold
}
H6 {
	FONT-WEIGHT: bold
}
STRONG {
	FONT-WEIGHT: bold
}
ABBR {
	BORDER-BOTTOM: #000 1px dotted; CURSOR: help
}
ACRONYM {
	BORDER-BOTTOM: #000 1px dotted; CURSOR: help
}
EM {
	FONT-STYLE: italic
}
BLOCKQUOTE {
	MARGIN: 1em
}
UL {
	MARGIN: 1em
}
OL {
	MARGIN: 1em
}
DL {
	MARGIN: 1em
}
OL {
	MARGIN-LEFT: 2em
}
UL {
	MARGIN-LEFT: 2em
}
DL {
	MARGIN-LEFT: 2em
}
OL LI {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: decimal
}
UL LI {
	LIST-STYLE-POSITION: outside; LIST-STYLE-TYPE: disc
}
DL DD {
	MARGIN-LEFT: 1em
}
TH {
	BORDER-BOTTOM: #000 1px solid; BORDER-LEFT: #000 1px solid; =
PADDING-BOTTOM: 0.5em; PADDING-LEFT: 0.5em; PADDING-RIGHT: 0.5em; =
BORDER-TOP: #000 1px solid; BORDER-RIGHT: #000 1px solid; PADDING-TOP: =
0.5em
}
TD {
	BORDER-BOTTOM: #000 1px solid; BORDER-LEFT: #000 1px solid; =
PADDING-BOTTOM: 0.5em; PADDING-LEFT: 0.5em; PADDING-RIGHT: 0.5em; =
BORDER-TOP: #000 1px solid; BORDER-RIGHT: #000 1px solid; PADDING-TOP: =
0.5em
}
TH {
	TEXT-ALIGN: center; FONT-WEIGHT: bold
}
CAPTION {
	TEXT-ALIGN: center; MARGIN-BOTTOM: 0.5em
}
P {
	MARGIN-BOTTOM: 1em
}
FIELDSET {
	MARGIN-BOTTOM: 1em
}
TABLE {
	MARGIN-BOTTOM: 1em
}
PRE {
	MARGIN-BOTTOM: 1em
}
INPUT[type=3Dtext] {
	WIDTH: 11.9em
}
INPUT[type=3Dpassword] {
	WIDTH: 11.9em
}
TEXTAREA {
	WIDTH: 11.9em
}
#wrap {
	MARGIN: 0px auto; WIDTH: 960px
}
HTML {
	HEIGHT: 100%
}
BODY {
	TEXT-ALIGN: left; HEIGHT: 100%
}
HR {
	DISPLAY: none; CLEAR: both
}
DIV#page {
	POSITION: relative; MARGIN: 0px auto; MIN-HEIGHT: 100%; WIDTH: 960px
}
DIV#headerimg H1 {
	PADDING-BOTTOM: 0px; LINE-HEIGHT: 1em; MARGIN: 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; FONT-SIZE: 276.9%; PADDING-TOP: 0px
}
DIV#headerimg DIV.description {
	FONT-SIZE: 108%
}
DIV#welcome {
	POSITION: absolute; FONT-SIZE: 85%; TOP: 6px; RIGHT: 6px
}
DIV#content {
	TEXT-ALIGN: left; CLEAR: both
}
DIV#main_wrap {
	FLOAT: left; OVERFLOW: hidden
}
DIV.layout1#main_wrap DIV#main {
	WIDTH: 960px
}
DIV.layout2#main_wrap DIV#main {
	WIDTH: 670px
}
DIV.layout3#main_wrap DIV#main {
	WIDTH: 670px
}
DIV.layout4#main_wrap DIV#main {
	WIDTH: 797px
}
DIV.layout5#main_wrap DIV#main {
	WIDTH: 797px
}
DIV.layout6#main_wrap DIV#main {
	WIDTH: 507px
}
DIV.layout7#main_wrap DIV#main {
	WIDTH: 507px
}
DIV.layout8#main_wrap DIV#main {
	WIDTH: 507px
}
DIV.layout9#main_wrap DIV#main {
	WIDTH: 507px
}
DIV.layout10#main_wrap DIV#main {
	WIDTH: 507px
}
DIV.layout11#main_wrap DIV#main {
	WIDTH: 507px
}
DIV#sidebar {
	WIDTH: 280px
}
DIV#sidebar2 {
	WIDTH: 153px
}
DIV.layout2#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout3#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 10px
}
DIV.layout4#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout5#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 10px
}
DIV.layout6#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout6#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 10px
}
DIV.layout7#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 10px
}
DIV.layout7#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout8#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout8#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 10px
}
DIV.layout9#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 10px
}
DIV.layout9#main_wrap DIV#main {
	PADDING-LEFT: 10px
}
DIV.layout10#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 10px
}
DIV.layout10#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 10px
}
DIV.layout11#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 10px
}
DIV.layout11#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 10px
}
DIV#sidebar_wrap {
	FLOAT: left
}
DIV#sidebar2_wrap {
	FLOAT: left
}
.widgettitle H2 {
	MARGIN: 6px 0px 0px; FONT-FAMILY: Verdana; LETTER-SPACING: 0.5px; =
FONT-WEIGHT: normal; TEXT-DECORATION: none
}
.widgettitle H2 A {
	MARGIN: 6px 0px 0px; FONT-FAMILY: Verdana; LETTER-SPACING: 0.5px; =
FONT-WEIGHT: normal; TEXT-DECORATION: none
}
A.tagsz-1 {
	FONT-SIZE: 77%
}
A.tagsz-2 {
	FONT-SIZE: 93%
}
A.tagsz-3 {
	FONT-SIZE: 108%
}
A.tagsz-4 {
	FONT-SIZE: 123.1%
}
A.tagsz-5 {
	FONT-SIZE: 138.5%
}
#searchform INPUT {
	FONT-FAMILY: Verdana; FONT-SIZE: 77%
}
#searchform INPUT.submit {
	MARGIN-LEFT: 5px
}
#footer {
	POSITION: absolute; TEXT-ALIGN: left; WIDTH: 960px; BOTTOM: 0px; CLEAR: =
both
}
DIV.layout1#column_wrap DIV.column {
	WIDTH: 960px
}
DIV.layout2#column_wrap DIV.column {
	WIDTH: 480px
}
DIV.layout3#column_wrap DIV.column {
	WIDTH: 313px
}
DIV#column_wrap DIV.column {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; FLOAT: =
left; PADDING-TOP: 5px
}
#footer P.signature {
	TEXT-ALIGN: center; PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; MARGIN-BOTTOM: 0px; FONT-SIZE: 85%; PADDING-TOP: 5px
}
#footer P.debug {
	TEXT-ALIGN: center; PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; MARGIN-BOTTOM: 0px; FONT-SIZE: 85%; PADDING-TOP: 5px
}
.forclear {
	DISPLAY: block; CLEAR: both
}
.aligncenter {
	DISPLAY: block; MARGIN-LEFT: auto; CLEAR: both; MARGIN-RIGHT: auto
}
DIV.aligncenter {
	DISPLAY: block; MARGIN-LEFT: auto; CLEAR: both; MARGIN-RIGHT: auto
}
.alignleft {
	FLOAT: left
}
.alignright {
	FLOAT: right
}
.wp-caption {
	BORDER-BOTTOM: #fb0 1px solid; TEXT-ALIGN: center; BORDER-LEFT: #fb0 =
1px solid; BACKGROUND-COLOR: #38230c; MARGIN: 10px; BORDER-TOP: #fb0 1px =
solid; BORDER-RIGHT: #fb0 1px solid; PADDING-TOP: 4px; =
-moz-border-radius: 3px; -khtml-border-radius: 3px; =
-webkit-border-radius: 3px; border-radius: 3px
}
.wp-caption IMG {
	BORDER-BOTTOM: #000000 0px; BORDER-LEFT: #000000 0px; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; BORDER-TOP: =
#000000 0px; BORDER-RIGHT: #000000 0px; PADDING-TOP: 0px
}
.wp-caption P.wp-caption-text {
	PADDING-BOTTOM: 5px; LINE-HEIGHT: 17px; MARGIN: 0px; PADDING-LEFT: 4px; =
PADDING-RIGHT: 4px; FONT-SIZE: 11px; PADDING-TOP: 0px
}
DIV.comment {
	MARGIN: 10px
}
UL.commentlist LI {
	PADDING-BOTTOM: 3px; LIST-STYLE-TYPE: none; MARGIN: 2px 0px; =
PADDING-LEFT: 3px; PADDING-RIGHT: 3px; BACKGROUND: #eee; BORDER-TOP: =
#ccc 1px solid; LIST-STYLE-IMAGE: none; PADDING-TOP: 3px
}
UL.commentlist LI.is_author {
	BACKGROUND: #ccc
}
UL.commentlist LI IMG {
	PADDING-BOTTOM: 2px; MARGIN: 0px 0px 5px 5px; PADDING-LEFT: 2px; =
PADDING-RIGHT: 2px; FLOAT: right; PADDING-TOP: 2px
}
UL.commentlist LI DIV.comment-author {
	FONT-WEIGHT: bold
}
UL.commentlist LI DIV.comment-meta {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; FONT-SIZE: =
80%; PADDING-TOP: 3px
}
UL.commentlist LI P {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; =
PADDING-TOP: 2px
}
UL.commentlist LI DIV.reply {
	TEXT-ALIGN: right; FONT-SIZE: 90%
}
UL.children {
	PADDING-BOTTOM: 0px; MARGIN-TOP: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; MARGIN-RIGHT: 0px; PADDING-TOP: 0px
}
UL.children LI {
	LIST-STYLE-TYPE: circle
}
FORM P {
	MARGIN-BOTTOM: 0.2em
}
FORM INPUT {
	MARGIN-BOTTOM: 0.5em
}
FORM SELECT {
	MARGIN-BOTTOM: 0.5em
}
FORM TEXTAREA {
	MARGIN-BOTTOM: 0.5em
}
DIV#respond {
	PADDING-BOTTOM: 15px; PADDING-LEFT: 15px; PADDING-RIGHT: 15px; =
PADDING-TOP: 15px
}
DIV#cancel-comment-reply {
	TEXT-ALIGN: right
}
TEXTAREA#comment {
	WIDTH: 80%
}
TH {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
TD {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/documentation/navigation.css

DIV#op_navigation {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: =
0px; BACKGROUND: #0d0800; PADDING-TOP: 0px
}
#op_navigation A {
	LINE-HEIGHT: 1.7em; COLOR: #12c9ff; FONT-SIZE: 93%
}
#op_navigation A:visited {
	LINE-HEIGHT: 1.7em; COLOR: #12c9ff; FONT-SIZE: 93%
}
#op_navigation A:hover {
	LINE-HEIGHT: 1.7em; COLOR: #12c9ff; FONT-SIZE: 93%
}
#op_navigation A:active {
	COLOR: #ffbc00
}
DIV#op_navigation LI {
	LIST-STYLE-TYPE: none
}
DIV#op_navigation UL {
	LIST-STYLE-TYPE: none; MARGIN: 0px 0px 0px 14px; WIDTH: 946px; =
LIST-STYLE-IMAGE: none
}
DIV#op_navigation UL LI {
	Z-INDEX: 100; POSITION: relative; FLOAT: left
}
DIV#op_navigation UL LI A {
	PADDING-BOTTOM: 4px; PADDING-LEFT: 10px; WIDTH: auto; PADDING-RIGHT: =
10px; DISPLAY: block; FONT-WEIGHT: bold; PADDING-TOP: 4px
}
DIV#op_navigation UL LI A:hover {
	BORDER-BOTTOM: 2px solid; PADDING-BOTTOM: 2px; COLOR: #12c9ff
}
DIV#op_navigation UL LI UL {
	BORDER-BOTTOM: #6f502e 1px solid; POSITION: absolute; BORDER-LEFT: =
#6f502e 1px solid; BACKGROUND-COLOR: #241707 !important; =
LIST-STYLE-TYPE: none; MARGIN: 0px; WIDTH: 10em; BORDER-TOP: #6f502e 1px =
solid; TOP: 100%; LIST-STYLE-IMAGE: none; BORDER-RIGHT: #6f502e 1px =
solid; LEFT: -9999px
}
DIV#op_navigation UL LI.display UL {
	POSITION: absolute; DISPLAY: block; LEFT: auto
}
DIV#op_navigation UL LI UL LI {
	TEXT-ALIGN: left; WIDTH: 10em; FLOAT: left
}
DIV#op_navigation UL LI UL LI A {
	BORDER-BOTTOM: medium none; POSITION: relative; BORDER-LEFT: medium =
none; PADDING-BOTTOM: 2px; PADDING-LEFT: 10px; WIDTH: auto; =
PADDING-RIGHT: 2px; DISPLAY: block; FONT-SIZE: 93%; BORDER-TOP: medium =
none; FONT-WEIGHT: normal; BORDER-RIGHT: medium none; PADDING-TOP: 2px
}
DIV#op_navigation UL LI UL LI A:hover {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; PADDING-BOTTOM: =
2px; BACKGROUND: #38220c; BORDER-TOP: medium none; BORDER-RIGHT: medium =
none
}
DIV#op_navigation UL LI UL LI UL LI {
	DISPLAY: none
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/documentation/widgets.css

DIV.widget_op_feature_carousel {
	POSITION: relative; WIDTH: auto
}
DIV.widget_op_feature_carousel DIV.op_feature_carousel_features {
	BORDER-BOTTOM: #dddddd 1px solid; BORDER-LEFT: #dddddd 1px solid; =
PADDING-BOTTOM: 4px; BACKGROUND-COLOR: #f3f3f3; PADDING-LEFT: 4px; =
PADDING-RIGHT: 4px; BORDER-TOP: #dddddd 1px solid; BORDER-RIGHT: #dddddd =
1px solid; PADDING-TOP: 4px; -moz-border-radius-bottomleft: 3px; =
-moz-border-radius-bottomright: 3px; -moz-border-radius-topleft: 3px; =
-moz-border-radius-topright: 3px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features {
	POSITION: relative; PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; HEIGHT: 200px; =
OVERFLOW: hidden; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI {
	Z-INDEX: 0; POSITION: relative; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; DISPLAY: block; =
FONT-FAMILY: Arial; BACKGROUND: #eee; FLOAT: left; HEIGHT: 200px; =
FONT-SIZE: 93%; PADDING-TOP: 0px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI H2 {
	POSITION: relative; PADDING-BOTTOM: 2px; BACKGROUND-COLOR: transparent; =
MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; FONT-SIZE: 200%; =
FONT-WEIGHT: bold; PADDING-TOP: 2px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features H2 A {
	DISPLAY: block; COLOR: #333; TEXT-DECORATION: none
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI SPAN.image {
	Z-INDEX: 0; PADDING-BOTTOM: 0px; MARGIN: 10px 10px 0px; PADDING-LEFT: =
0px; WIDTH: 240px; PADDING-RIGHT: 0px; DISPLAY: block; FLOAT: right; =
HEIGHT: 180px; OVERFLOW: hidden; PADDING-TOP: 0px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI SPAN.image IMG {
	WIDTH: auto; HEIGHT: 180px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI P {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; COLOR: =
#333; PADDING-TOP: 5px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links {
	Z-INDEX: 4; POSITION: absolute; PADDING-BOTTOM: 3px; BACKGROUND-COLOR: =
transparent; MARGIN: 0px auto; PADDING-LEFT: 3px; BOTTOM: 20px; =
PADDING-RIGHT: 3px; WHITE-SPACE: nowrap; PADDING-TOP: 3px; LEFT: 20px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links =
DIV.title {
	MARGIN: 3px 3px 0px 0px; FLOAT: left; COLOR: white; FONT-SIZE: 93%
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
{
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; DISPLAY: inline; PADDING-TOP: 0px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI {
	BORDER-BOTTOM: #fff 1px solid; BORDER-LEFT: #fff 1px solid; MARGIN: 0px =
0px 0px 2px; DISPLAY: inline; FONT-FAMILY: Arial; BACKGROUND: #999; =
FLOAT: left; FONT-SIZE: 77%; BORDER-TOP: #fff 1px solid; BORDER-RIGHT: =
#fff 1px solid
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI.selected {
	BACKGROUND: #ae0b20
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI A {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; DISPLAY: =
block; COLOR: #fff; PADDING-TOP: 3px
}
DIV.default.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI A:hover {
	BACKGROUND: #666
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features {
	POSITION: relative; PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: =
0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; HEIGHT: 200px; =
OVERFLOW: hidden; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI {
	Z-INDEX: 0; POSITION: relative; TEXT-ALIGN: justify; PADDING-BOTTOM: =
0px; MARGIN: 0px; PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; =
DISPLAY: block; FONT-FAMILY: Arial; BACKGROUND: #eee; FLOAT: left; =
HEIGHT: 200px; FONT-SIZE: 93%; PADDING-TOP: 0px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI H2 {
	POSITION: relative; PADDING-BOTTOM: 2px; BACKGROUND-COLOR: transparent; =
MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; LETTER-SPACING: 1px; =
FONT-SIZE: 200%; TOP: 6px; FONT-WEIGHT: bold; PADDING-TOP: 2px; LEFT: =
6px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features H2 A {
	POSITION: absolute; DISPLAY: block; COLOR: #fff; TOP: 0px; =
TEXT-DECORATION: none
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI SPAN.image {
	Z-INDEX: 0; POSITION: absolute; PADDING-BOTTOM: 0px; MARGIN: 0px; =
PADDING-LEFT: 0px; WIDTH: 100%; PADDING-RIGHT: 0px; DISPLAY: block; =
BACKGROUND: #727272; HEIGHT: 100%; OVERFLOW: hidden; TOP: 0px; =
PADDING-TOP: 0px; LEFT: 0px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI SPAN.image IMG {
	MARGIN: 0px auto; WIDTH: auto; DISPLAY: block; HEIGHT: 200px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI DIV.p_wrap {
	Z-INDEX: 2; POSITION: absolute; FILTER: alpha(opacity=3D70); =
PADDING-BOTTOM: 5px; BACKGROUND-COLOR: #000; MARGIN: 0px; PADDING-LEFT: =
3px; BOTTOM: 0px; PADDING-RIGHT: 3px; DISPLAY: block; PADDING-TOP: 5px; =
LEFT: 0px; opacity: .70; -moz-opacity: .70
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_features =
UL.features LI P {
	COLOR: #fff; FONT-WEIGHT: 400
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links {
	Z-INDEX: 4; POSITION: absolute; PADDING-BOTTOM: 3px; BACKGROUND-COLOR: =
transparent; MARGIN: 0px auto; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; =
WHITE-SPACE: nowrap; TOP: 24px; RIGHT: 32px; PADDING-TOP: 3px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links =
DIV.title {
	MARGIN: 3px 3px 0px 0px; FLOAT: left; COLOR: white; FONT-SIZE: 93%
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; DISPLAY: inline; PADDING-TOP: 0px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL LI =
{
	BORDER-BOTTOM: #fff 1px solid; BORDER-LEFT: #fff 1px solid; MARGIN: 0px =
0px 0px 2px; DISPLAY: inline; FONT-FAMILY: Arial; BACKGROUND: #999; =
FLOAT: left; FONT-SIZE: 77%; BORDER-TOP: #fff 1px solid; BORDER-RIGHT: =
#fff 1px solid
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI.selected {
	BACKGROUND: #ae0b20
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL =
LI.selected A:hover {
	COLOR: #fff
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL LI =
A {
	PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; DISPLAY: =
block; COLOR: #fff; PADDING-TOP: 3px
}
DIV.photo.widget_op_feature_carousel DIV.op_feature_carousel_links UL LI =
A:hover {
	BACKGROUND: #666
}
DIV.widget_op_featurette_tabs H2 {
	PADDING-BOTTOM: 3px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: =
3px; PADDING-TOP: 3px
}
DIV.op_featurette_tabs {
	BORDER-BOTTOM: #dddddd 1px solid; BORDER-LEFT: #dddddd 1px solid; =
PADDING-BOTTOM: 4px; PADDING-LEFT: 4px; PADDING-RIGHT: 4px; BACKGROUND: =
#fefeff; BORDER-TOP: #dddddd 1px solid; BORDER-RIGHT: #dddddd 1px solid; =
PADDING-TOP: 4px; -moz-border-radius-bottomleft: 3px; =
-moz-border-radius-bottomright: 3px; -moz-border-radius-topleft: 3px; =
-moz-border-radius-topright: 3px
}
DIV.op_featurette_tabs_tabs {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FLOAT: left; HEIGHT: 35px; PADDING-TOP: 0px
}
DIV.op_featurette_tabs_tabs UL {
	BACKGROUND: none transparent scroll repeat 0% 0%
}
DIV.op_featurette_tabs_tabs UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.op_featurette_tabs_tabs LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.op_featurette_tabs_tabs UL LI {
	MARGIN: 3px 2px; FLOAT: left
}
DIV.op_featurette_tabs_tabs UL LI A {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: =
block; BACKGROUND: #eee; LETTER-SPACING: 0.1em; COLOR: #6d6d6d; =
FONT-SIZE: 85%; TEXT-DECORATION: none; PADDING-TOP: 7px
}
DIV.op_featurette_tabs_tabs UL LI A:hover {
	BACKGROUND: #cbcbcb
}
DIV.op_featurette_tabs_tabs UL LI.selected A {
	BACKGROUND: #ae0b20; COLOR: #fff
}
DIV.op_featurette_datasets {
	POSITION: relative; VISIBILITY: visible; OVERFLOW: hidden
}
DIV.op_featurette_datasets DIV {
	POSITION: absolute
}
DIV.op_featurette_datasets DIV.tabbed_dataset-1 {
	POSITION: relative
}
DIV.op_featurette_datasets DIV DIV {
	POSITION: relative
}
DIV.op_featurette_datasets DIV.hide {
	VISIBILITY: hidden
}
DIV.op_featurette_datasets SPAN.inside_content {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; PADDING-RIGHT: 2px; DISPLAY: =
block; PADDING-TOP: 2px
}
DIV.op_featurette_datasets SPAN.inside_content H3 {
	MARGIN: 3px 0px 0px; FONT-SIZE: 90%
}
DIV.op_featurette_datasets SPAN.inside_content H3 A {
	MARGIN: 0px; FONT-WEIGHT: bold; TEXT-DECORATION: none
}
DIV.op_featurette_datasets SPAN.inside_content P {
	TEXT-ALIGN: left; FONT-SIZE: 84%
}
DIV.op_featurette_datasets DIV.oneup {
	DISPLAY: block
}
DIV.op_featurette_datasets DIV.oneup IMG {
	WIDTH: 240px
}
DIV.op_featurette_datasets DIV.twoup {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 2px; WIDTH: 115px; PADDING-RIGHT: =
2px; FLOAT: left; PADDING-TOP: 2px
}
DIV.op_featurette_datasets DIV.twoup IMG {
	WIDTH: 115px
}
A.op_featurette_tabs_control {
	Z-INDEX: 101; MARGIN: 7px 5px; WIDTH: 16px; DISPLAY: block; BACKGROUND: =
url(images/featurette_tabs_play.gif) no-repeat -16px 0px; FLOAT: right; =
HEIGHT: 16px
}
A.paused.op_featurette_tabs_control {
	BACKGROUND-POSITION: 0px 0px
}
DIV.widget_op_tabbedcontent {
	HEIGHT: 100%
}
DIV.widget_op_tabbedcontent H2 {
	PADDING-BOTTOM: 3px; MARGIN: 0px; PADDING-LEFT: 3px; PADDING-RIGHT: =
3px; COLOR: #3b5e8e; FONT-SIZE: 100%; FONT-WEIGHT: bold; PADDING-TOP: =
3px
}
DIV.op_tabbed_content {
	BORDER-BOTTOM: #cbcbcb 1px solid; BORDER-LEFT: #cbcbcb 1px solid; =
PADDING-BOTTOM: 1px; PADDING-LEFT: 1px; PADDING-RIGHT: 1px; BACKGROUND: =
#fefeff; BORDER-TOP: #cbcbcb 1px solid; BORDER-RIGHT: #cbcbcb 1px solid; =
PADDING-TOP: 1px
}
DIV.op_tabbed_tabs {
	PADDING-BOTTOM: 0px; MARGIN: 0px; PADDING-LEFT: 0px; PADDING-RIGHT: =
0px; FLOAT: left; HEIGHT: 35px; PADDING-TOP: 0px
}
DIV.op_tabbed_tabs UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.op_tabbed_tabs LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 0px; PADDING-LEFT: =
0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; PADDING-TOP: 0px
}
DIV.op_tabbed_tabs UL LI {
	MARGIN: 3px 2px; FLOAT: left
}
DIV.op_tabbed_tabs UL LI A {
	PADDING-BOTTOM: 7px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; DISPLAY: =
block; BACKGROUND: #eee; LETTER-SPACING: 0.1em; COLOR: #6d6d6d; =
FONT-SIZE: 85%; TEXT-DECORATION: none; PADDING-TOP: 7px
}
DIV.op_tabbed_tabs UL LI A:hover {
	BACKGROUND: #cbcbcb
}
DIV.op_tabbed_tabs UL LI.selected A {
	BACKGROUND: #ae0b20; COLOR: #fff
}
DIV.op_tabbed_content DIV.op_tabbed_datasets {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
PADDING-TOP: 10px
}
DIV.op_tabbed_datasets DIV.hide {
	DISPLAY: none
}
DIV.op_tabbed_datasets UL {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 2px 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
DIV.op_tabbed_datasets LI {
	PADDING-BOTTOM: 0px; LIST-STYLE-TYPE: none; MARGIN: 2px 0px; =
PADDING-LEFT: 0px; PADDING-RIGHT: 0px; LIST-STYLE-IMAGE: none; =
PADDING-TOP: 0px
}
DIV.widget_multi_search {
	BORDER-BOTTOM: #cbcbcb 1px solid; BORDER-LEFT: #cbcbcb 1px solid; =
PADDING-BOTTOM: 3px; PADDING-LEFT: 3px; PADDING-RIGHT: 3px; BACKGROUND: =
#eee; BORDER-TOP: #cbcbcb 1px solid; BORDER-RIGHT: #cbcbcb 1px solid; =
PADDING-TOP: 3px
}
DIV.widget_multi_search INPUT[type=3D'text'] {
	WIDTH: 180px
}
DIV.widget_multi_search INPUT[type=3D'submit'] {
	TEXT-ALIGN: right; PADDING-BOTTOM: 0px; PADDING-LEFT: 3px; =
PADDING-RIGHT: 3px; PADDING-TOP: 0px
}
DIV.widget_op_op_pagination {
	TEXT-ALIGN: center
}
DIV.widget_op_op_pagination SPAN {
	BORDER-BOTTOM: #666 1px solid; BORDER-LEFT: #666 1px solid; =
PADDING-BOTTOM: 2px; MARGIN: 0px 3px; PADDING-LEFT: 3px; PADDING-RIGHT: =
3px; BACKGROUND: #eee; COLOR: #666; BORDER-TOP: #666 1px solid; =
BORDER-RIGHT: #666 1px solid; PADDING-TOP: 2px
}
DIV.widget_op_op_pagination SPAN.current {
	BACKGROUND: #666; COLOR: white
}
DIV.widget_op_op_calendar TABLE {
	BORDER-BOTTOM: #000 1px solid; BORDER-LEFT: #000 1px solid; BORDER-TOP: =
#000 1px solid; BORDER-RIGHT: #000 1px solid
}
DIV.widget_op_op_calendar #prev A {
	FONT-SIZE: 9pt
}
DIV.widget_op_op_calendar #next A {
	FONT-SIZE: 9pt
}
DIV.widget_op_op_calendar A {
	TEXT-DECORATION: none
}
DIV.widget_op_op_calendar CAPTION {
	TEXT-ALIGN: center; FONT: bold 1.3em "Lucida Grande", Verdana, Arial, =
Sans-Serif
}
DIV.widget_op_op_calendar TH {
	TEXT-TRANSFORM: capitalize; FONT-STYLE: normal
}
DIV.widget_op_op_calendar TFOOT TD {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
DIV.widget_op_op_calendar TD.pad {
	BORDER-BOTTOM: medium none; BORDER-LEFT: medium none; BORDER-TOP: =
medium none; BORDER-RIGHT: medium none
}
DIV.widget_op_phpbb_content UL {
	MARGIN: 0px; COLOR: #333
}
DIV.widget_op_phpbb_content LI {
	PADDING-BOTTOM: 5px; LIST-STYLE-TYPE: none; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; LIST-STYLE-IMAGE: none; PADDING-TOP: 5px
}
DIV.widget_op_phpbb_content SPAN {
	PADDING-BOTTOM: 2px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; DISPLAY: =
block; FONT-SIZE: 88%; PADDING-TOP: 2px
}
DIV.widget_op_phpbb_content SPAN.avatar {
	MARGIN-TOP: 5px; WIDTH: 32px; FLOAT: right
}
DIV.widget_op_phpbb_content H3 {
	MARGIN: 0px
}
DIV.widget_op_phpbb_content H5 {
	COLOR: #666; FONT-SIZE: 88%; FONT-WEIGHT: normal
}
DIV.widget_op_phpbb_content SPAN.post_info {
	COLOR: #333
}
DIV.widget_op_phpbb_content SPAN.post_forum {
	COLOR: #666
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: text/css;
	charset="iso-8859-1"
Content-Transfer-Encoding: 7bit
Content-Location: http://gameclay.com/documentation/gameclay_twitter_pro.css

.widget_twitter LI {
	MARGIN-TOP: 30px; CLEAR: both
}
.widget_twitter LI IMG {
	MARGIN: 0px 5px 0px 0px; FLOAT: left
}
.widget_twitter LI .clear {
	CLEAR: both
}
.widget_twitter .entry-meta {
	MARGIN-TOP: 3px; FLOAT: right; FONT-SIZE: xx-small
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/themes/bullseye/style.css?ver=3.0.1

@import url( ../onepress/op-layout.css );
@import url( navigation.css );
@import url( widgets.css );
@import url( gameclay_twitter_pro.css );
DIV.layout2#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout3#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 0px
}
DIV.layout4#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout5#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 0px
}
DIV.layout6#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout6#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 0px
}
DIV.layout7#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 0px
}
DIV.layout7#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout8#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout8#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 0px
}
DIV.layout9#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 0px
}
DIV.layout9#main_wrap DIV#main {
	PADDING-LEFT: 0px
}
DIV.layout10#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 0px
}
DIV.layout10#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 0px
}
DIV.layout11#sidebar_wrap DIV#sidebar {
	PADDING-LEFT: 0px
}
DIV.layout11#sidebar2_wrap DIV#sidebar2 {
	PADDING-LEFT: 0px
}
DIV#sidebar {
	WIDTH: 285px
}
DIV#sidebar2 {
	WIDTH: 163px
}
DIV.layout6#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout7#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout8#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout9#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout10#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout11#main_wrap DIV#main {
	WIDTH: 502px; MARGIN-LEFT: 5px
}
DIV.layout2#main_wrap DIV#main {
	WIDTH: 665px; MARGIN-LEFT: 5px
}
DIV.layout3#main_wrap DIV#main {
	WIDTH: 665px; MARGIN-LEFT: 5px
}
A {
	TEXT-DECORATION: none
}
A:link {
	TEXT-DECORATION: none
}
A:visited {
	TEXT-DECORATION: none
}
A:hover {
	TEXT-DECORATION: none
}
A {
	COLOR: #22c9ff
}
HTML {
	BACKGROUND: #000; COLOR: #a1784a
}
DIV#page {
	BORDER-BOTTOM: #ffbb00 1px solid; BORDER-LEFT: #ffbb00 1px solid; =
PADDING-BOTTOM: 30px; MARGIN-BOTTOM: 30px; BACKGROUND: #39240d; HEIGHT: =
auto; BORDER-TOP: #000000 0px solid; BORDER-RIGHT: #ffbb00 1px solid
}
#header {
	POSITION: relative
}
#header .bd .c {
	WIDTH: 960px; BACKGROUND: #241707; HEIGHT: 185px
}
#headerimg {
	PADDING-BOTTOM: 0px; PADDING-LEFT: 20px; PADDING-RIGHT: 0px; =
PADDING-TOP: 25px
}
DIV#headerimg H1 {
	DISPLAY: none
}
.description {
	DISPLAY: none
}
#headerimg H1 A {
	COLOR: #fff
}
#headerimg H1 A:visited {
	COLOR: #fff
}
#headerimg H1 A:hover {
	COLOR: #fff
}
#headerlink {
	POSITION: absolute; WIDTH: 200px; ZOOM: 1; DISPLAY: block; BACKGROUND: =
url(images/logo.gif) no-repeat center top; HEIGHT: 160px; TOP: 10px; =
LEFT: 380px
}
#headerlink A {
	POSITION: relative; WIDTH: 200px; ZOOM: 1; DISPLAY: block; HEIGHT: =
160px
}
DIV#headerimg DIV.description {
	PADDING-LEFT: 5px; FONT-SIZE: 128%
}
DIV#welcome {
	PADDING-BOTTOM: 5px; PADDING-LEFT: 5px; PADDING-RIGHT: 5px; BACKGROUND: =
#ff0000 0px 0px; COLOR: #666; PADDING-TOP: 5px; opacity: 0.9
}
DIV#welcome A {
	COLOR: #333; TEXT-DECORATION: underline
}
DIV#welcome P {
	MARGIN-BOTTOM: 0px
}
DIV#op_navigation UL LI UL {
	WIDTH: 10em
}
DIV#op_navigation UL LI UL LI {
	WIDTH: 10em
}
DIV#sidebar {
	HEIGHT: 100%
}
DIV#sidebar2 {
	HEIGHT: 100%
}
DIV#feature {
	BACKGROUND: #e3e3e3
}
DIV#feature UL#features H2 A {
=09
}
.widgettitle {
	COLOR: #ffbd00
}
.widgettitle A {
	COLOR: #ffbd00
}
.widget {
	PADDING-BOTTOM: 0px; MARGIN: 10px 5px 0px; PADDING-LEFT: 0px; =
PADDING-RIGHT: 0px; PADDING-TOP: 0px
}
.widget .hd {
	HEIGHT: 6px
}
.widget .hd .hc {
	HEIGHT: 6px
}
.widget .ft {
	HEIGHT: 6px
}
.widget .ft .fc {
	HEIGHT: 6px
}
.widget .bd {
	LINE-HEIGHT: 1.25 !important; BACKGROUND: #241808
}
.widget .bd .bc {
	LINE-HEIGHT: 1.25 !important; BACKGROUND: #241808
}
.widget .hd {
	WIDTH: 100%; BACKGROUND-POSITION: right top
}
.widget .hd .hc {
	BACKGROUND-POSITION: left top; MARGIN-RIGHT: 6px
}
.widget .ft {
	WIDTH: 100%; BACKGROUND-POSITION: right bottom
}
.widget .ft .fc {
	BACKGROUND-POSITION: left bottom; MARGIN-RIGHT: 6px
}
.widget .bd {
	WIDTH: 100%; BACKGROUND-POSITION: right top
}
.widget .bd .bc {
	PADDING-BOTTOM: 1px; PADDING-LEFT: 20px; PADDING-RIGHT: 0px; =
MARGIN-RIGHT: 6px; PADDING-TOP: 1px
}
.widget .s {
	PADDING-BOTTOM: 1em; PADDING-LEFT: 0px; PADDING-RIGHT: 1em
}
H2 {
	COLOR: #ffbd00
}
H2 A {
	COLOR: #ffbd00
}
H3 {
	COLOR: #ffbd00
}
H3 A {
	COLOR: #ffbd00
}
CAPTION {
	COLOR: #ffbd00; FONT-SIZE: 130%; FONT-WEIGHT: bold
}
#wp-calendar {
	BORDER-BOTTOM: #73491a 1px solid; BORDER-LEFT: #73491a 0px solid; =
MARGIN: 0px auto 32px; WIDTH: 80%; BORDER-TOP: #73491a 0px solid; =
BORDER-RIGHT: #73491a 1px solid
}
#wp-calendar TD {
	BORDER-BOTTOM: #73491a 0px solid; TEXT-ALIGN: center; BORDER-LEFT: =
#73491a 1px solid; LINE-HEIGHT: 1 !important; BORDER-TOP: #73491a 1px =
solid; BORDER-RIGHT: #73491a 0px solid
}
#wp-calendar TH {
	BORDER-BOTTOM: #73491a 0px solid; TEXT-ALIGN: center; BORDER-LEFT: =
#73491a 1px solid; LINE-HEIGHT: 1 !important; BORDER-TOP: #73491a 1px =
solid; BORDER-RIGHT: #73491a 0px solid
}
#sidebar UL LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
#sidebar2 UL LI {
	LIST-STYLE-TYPE: none; LIST-STYLE-IMAGE: none
}
#sidebar UL {
	MARGIN-LEFT: 0px
}
#sidebar2 UL {
	MARGIN-LEFT: 0px
}
#email {
	BORDER-BOTTOM: #744818 1px solid; BORDER-LEFT: #744818 1px solid; =
BACKGROUND: #39230c; COLOR: #a1784a; BORDER-TOP: #744818 1px solid; =
BORDER-RIGHT: #744818 1px solid
}
#author {
	BORDER-BOTTOM: #744818 1px solid; BORDER-LEFT: #744818 1px solid; =
BACKGROUND: #39230c; COLOR: #a1784a; BORDER-TOP: #744818 1px solid; =
BORDER-RIGHT: #744818 1px solid
}
#url {
	BORDER-BOTTOM: #744818 1px solid; BORDER-LEFT: #744818 1px solid; =
BACKGROUND: #39230c; COLOR: #a1784a; BORDER-TOP: #744818 1px solid; =
BORDER-RIGHT: #744818 1px solid
}
TEXTAREA#comment {
	BORDER-BOTTOM: #744818 1px solid; BORDER-LEFT: #744818 1px solid; =
PADDING-BOTTOM: 5px; MARGIN: 15px 0px; PADDING-LEFT: 5px; PADDING-RIGHT: =
5px; BACKGROUND: #39230c; COLOR: #a1784a; BORDER-TOP: #744818 1px solid; =
BORDER-RIGHT: #744818 1px solid; PADDING-TOP: 5px
}
DIV#main H1 {
	COLOR: #fab700; FONT-SIZE: 160%
}
DIV#main H2 {
	COLOR: #fab700; FONT-SIZE: 160%
}
UL.commentlist {
	MARGIN-LEFT: 0px
}
UL.commentlist LI {
	PADDING-BOTTOM: 10px; PADDING-LEFT: 10px; PADDING-RIGHT: 10px; =
BACKGROUND: #39230c; MARGIN-LEFT: 0px; BORDER-TOP: #744818 1px solid; =
PADDING-TOP: 10px
}
DIV.comment {
	MARGIN: 10px 0px
}
DIV#respond {
	PADDING-BOTTOM: 15px; PADDING-LEFT: 0px; PADDING-RIGHT: 0px; =
PADDING-TOP: 15px
}
.devcodeblock {
	POSITION: relative; ZOOM: 1 !important
}
DIV .devcodeblock {
	MARGIN: 0px 15px 15px; COLOR: #a1784a
}
.devcodeblock TD {
	MARGIN-BOTTOM: 5px; COLOR: #a1784a
}
IMG.alignright {
	MARGIN: 0px 0px 15px 15px
}
IMG.alignleft {
	MARGIN: 0px 15px 15px 0px
}
DIV#_wrap {
	DISPLAY: none !important
}
DIV#main PRE.devcodeblock {
	WIDTH: 870px; OVERFLOW: scroll
}
DIV[id=3D'page'] DIV#main PRE.devcodeblock {
	WIDTH: inherit; OVERFLOW: inherit
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/plugins/devformatter/devfmt_reset.css?ver=2009.0.1.32

.devcodeblock {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 0px; =
OUTLINE-WIDTH: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent =
scroll repeat 0% 0%; FONT-SIZE: 100%; VERTICAL-ALIGN: baseline; =
OVERFLOW: visible; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
.devcodeblock * {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px; MARGIN: 0px; =
OUTLINE-STYLE: none; OUTLINE-COLOR: invert; PADDING-LEFT: 0px; =
OUTLINE-WIDTH: 0px; PADDING-RIGHT: 0px; BACKGROUND: none transparent =
scroll repeat 0% 0%; FONT-SIZE: 100%; VERTICAL-ALIGN: baseline; =
OVERFLOW: visible; BORDER-TOP: 0px; BORDER-RIGHT: 0px; PADDING-TOP: 0px
}
TABLE.devcodearea {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
MARGIN: 0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert =
!important; PADDING-LEFT: 0px !important; OUTLINE-WIDTH: 0px !important; =
WIDTH: 100%; PADDING-RIGHT: 0px !important; BORDER-COLLAPSE: collapse; =
FLOAT: none !important; HEIGHT: 16px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px !important
}
TABLE.devcodetools {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; PADDING-BOTTOM: 0px !important; =
MARGIN: 0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert =
!important; PADDING-LEFT: 0px !important; OUTLINE-WIDTH: 0px !important; =
WIDTH: 100%; PADDING-RIGHT: 0px !important; BORDER-COLLAPSE: collapse; =
FLOAT: none !important; HEIGHT: 16px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px; PADDING-TOP: 0px !important
}
TABLE.devcodetools TR TD {
	BORDER-BOTTOM: 0px; TEXT-ALIGN: left !important; BORDER-LEFT: 0px; =
PADDING-BOTTOM: 0px !important; LINE-HEIGHT: 16px; LIST-STYLE-TYPE: =
none; MARGIN: 0px; OUTLINE-STYLE: none !important; OUTLINE-COLOR: invert =
!important; PADDING-LEFT: 0px !important; OUTLINE-WIDTH: 0px !important; =
PADDING-RIGHT: 0px !important; BORDER-COLLAPSE: collapse; BORDER-TOP: =
0px; LIST-STYLE-IMAGE: none; BORDER-RIGHT: 0px; PADDING-TOP: 0px =
!important
}
TABLE.devcodearea TR TD {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px
}
.devcodeoverflow {
	BORDER-BOTTOM: #ccc 1px solid; BORDER-LEFT: #ccc 1px solid; =
PADDING-BOTTOM: 0px !important; MARGIN: 0px; OUTLINE-STYLE: none =
!important; OUTLINE-COLOR: invert !important; PADDING-LEFT: 0px =
!important; OUTLINE-WIDTH: 0px !important; PADDING-RIGHT: 0px =
!important; FLOAT: none !important; BORDER-TOP: #ccc 1px solid; =
BORDER-RIGHT: #ccc 1px solid; PADDING-TOP: 0px !important
}
.devcode {
	FONT-FAMILY: courier new; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
.devcodelines {
	FONT-FAMILY: courier new; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
.devcodeblock {
	FONT-FAMILY: courier new; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
.devcodetools {
	FONT-FAMILY: courier new; FONT-SIZE: 12px; FONT-WEIGHT: normal
}
.devcode {
	BORDER-BOTTOM: #5a9ac0 1px solid; TEXT-ALIGN: left !important; =
BORDER-LEFT: #5a9ac0 1px solid; PADDING-BOTTOM: 0px; PADDING-LEFT: 5px; =
PADDING-RIGHT: 5px; COLOR: #000; BORDER-TOP: #5a9ac0 1px solid; =
BORDER-RIGHT: #5a9ac0 1px solid; PADDING-TOP: 0px
}
.devcodeline {
	BORDER-BOTTOM: 0px; BORDER-LEFT: 0px; BORDER-TOP: 0px; BORDER-RIGHT: =
0px
}
.devcodeoverflow {
	OVERFLOW-X: auto; OVERFLOW-Y: auto; MARGIN: 1px; OVERFLOW: auto
}
.devcodelines {
	PADDING-LEFT: 5px; PADDING-RIGHT: 5px; BACKGROUND: #ccc; COLOR: #000; =
BORDER-RIGHT: #999 4px solid
}
.devcodelinesodd {
	BACKGROUND: #eee
}
.devcodelinesarea {
	BACKGROUND: #fff
}
.devcodelinesareaodd {
	BACKGROUND: #f0f0f0
}
.devcodetools {
	TEXT-ALIGN: left; BACKGROUND: none transparent scroll repeat 0% 0%; =
COLOR: #000
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/plugins/devformatter/devfmt_css.php?ver=2009.0.1.32

.devcode {
	PADDING-BOTTOM: 0px !important; MARGIN: 0px; PADDING-LEFT: 0px =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: courier new =
!important; FONT-SIZE: 12px !important; PADDING-TOP: 0px !important
}
.devcodelines {
	PADDING-BOTTOM: 0px !important; MARGIN: 0px; PADDING-LEFT: 0px =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: courier new =
!important; FONT-SIZE: 12px !important; PADDING-TOP: 0px !important
}
.devcodeblock {
	PADDING-BOTTOM: 0px !important; MARGIN: 0px; PADDING-LEFT: 0px =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: courier new =
!important; FONT-SIZE: 12px !important; PADDING-TOP: 0px !important
}
.devcodetools {
	PADDING-BOTTOM: 0px !important; MARGIN: 0px; PADDING-LEFT: 0px =
!important; PADDING-RIGHT: 0px !important; FONT-FAMILY: courier new =
!important; FONT-SIZE: 12px !important; PADDING-TOP: 0px !important
}
.devcode {
	BORDER-BOTTOM: #5a9ac0 1px solid; BORDER-LEFT: #5a9ac0 1px solid; =
PADDING-BOTTOM: 0px !important; PADDING-LEFT: 5px !important; =
PADDING-RIGHT: 5px !important; COLOR: #000 !important; BORDER-TOP: =
#5a9ac0 1px solid; BORDER-RIGHT: #5a9ac0 1px solid; PADDING-TOP: 0px =
!important
}
.devcodeline {
	BORDER-BOTTOM: #000000 0px solid; BORDER-LEFT: #000000 0px solid; =
BORDER-TOP: #000000 0px solid; BORDER-RIGHT: #000000 0px solid
}
.devcodeoverflow {
	BORDER-BOTTOM: #000000 1px; BORDER-LEFT: #000000 1px; OVERFLOW-X: auto =
!important; OVERFLOW-Y: auto !important; MARGIN: 1px; OVERFLOW: auto =
!important; BORDER-TOP: #000000 1px; BORDER-RIGHT: #000000 1px
}
.devcodelines {
	PADDING-LEFT: 5px !important; PADDING-RIGHT: 5px !important; =
BACKGROUND: #0c0700; COLOR: #974 !important; BORDER-RIGHT: #fb0 4px =
solid
}
.devcodelinesodd {
	BACKGROUND: #000000
}
.devcodelinesarea {
	BACKGROUND: #feb
}
.devcodelinesareaodd {
	BACKGROUND: #feb
}
.devcodetools {
	TEXT-ALIGN: left !important; BACKGROUND: none transparent scroll repeat =
0% 0%; COLOR: #000 !important
}
.devcodetools SPAN {
	CURSOR: pointer !important
}

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/prototype.js?ver=1.6.1

/*  Prototype JavaScript framework, version 1.6.1=0A=
 *  (c) 2005-2009 Sam Stephenson=0A=
 *=0A=
 *  Prototype is freely distributable under the terms of an MIT-style =
license.=0A=
 *  For details, see the Prototype web site: http://www.prototypejs.org/=0A=
 *=0A=
 =
*------------------------------------------------------------------------=
--*/=0A=
=0A=
var Prototype =3D {=0A=
  Version: '1.6.1',=0A=
=0A=
  Browser: (function(){=0A=
    var ua =3D navigator.userAgent;=0A=
    var isOpera =3D Object.prototype.toString.call(window.opera) =3D=3D =
'[object Opera]';=0A=
    return {=0A=
      IE:             !!window.attachEvent && !isOpera,=0A=
      Opera:          isOpera,=0A=
      WebKit:         ua.indexOf('AppleWebKit/') > -1,=0A=
      Gecko:          ua.indexOf('Gecko') > -1 && ua.indexOf('KHTML') =
=3D=3D=3D -1,=0A=
      MobileSafari:   /Apple.*Mobile.*Safari/.test(ua)=0A=
    }=0A=
  })(),=0A=
=0A=
  BrowserFeatures: {=0A=
    XPath: !!document.evaluate,=0A=
    SelectorsAPI: !!document.querySelector,=0A=
    ElementExtensions: (function() {=0A=
      var constructor =3D window.Element || window.HTMLElement;=0A=
      return !!(constructor && constructor.prototype);=0A=
    })(),=0A=
    SpecificElementExtensions: (function() {=0A=
      if (typeof window.HTMLDivElement !=3D=3D 'undefined')=0A=
        return true;=0A=
=0A=
      var div =3D document.createElement('div');=0A=
      var form =3D document.createElement('form');=0A=
      var isSupported =3D false;=0A=
=0A=
      if (div['__proto__'] && (div['__proto__'] !=3D=3D =
form['__proto__'])) {=0A=
        isSupported =3D true;=0A=
      }=0A=
=0A=
      div =3D form =3D null;=0A=
=0A=
      return isSupported;=0A=
    })()=0A=
  },=0A=
=0A=
  ScriptFragment: '<script[^>]*>([\\S\\s]*?)<\/script>',=0A=
  JSONFilter: /^\/\*-secure-([\s\S]*)\*\/\s*$/,=0A=
=0A=
  emptyFunction: function() { },=0A=
  K: function(x) { return x }=0A=
};=0A=
=0A=
if (Prototype.Browser.MobileSafari)=0A=
  Prototype.BrowserFeatures.SpecificElementExtensions =3D false;=0A=
=0A=
=0A=
var Abstract =3D { };=0A=
=0A=
=0A=
var Try =3D {=0A=
  these: function() {=0A=
    var returnValue;=0A=
=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      var lambda =3D arguments[i];=0A=
      try {=0A=
        returnValue =3D lambda();=0A=
        break;=0A=
      } catch (e) { }=0A=
    }=0A=
=0A=
    return returnValue;=0A=
  }=0A=
};=0A=
=0A=
/* Based on Alex Arnell's inheritance implementation. */=0A=
=0A=
var Class =3D (function() {=0A=
  function subclass() {};=0A=
  function create() {=0A=
    var parent =3D null, properties =3D $A(arguments);=0A=
    if (Object.isFunction(properties[0]))=0A=
      parent =3D properties.shift();=0A=
=0A=
    function klass() {=0A=
      this.initialize.apply(this, arguments);=0A=
    }=0A=
=0A=
    Object.extend(klass, Class.Methods);=0A=
    klass.superclass =3D parent;=0A=
    klass.subclasses =3D [];=0A=
=0A=
    if (parent) {=0A=
      subclass.prototype =3D parent.prototype;=0A=
      klass.prototype =3D new subclass;=0A=
      parent.subclasses.push(klass);=0A=
    }=0A=
=0A=
    for (var i =3D 0; i < properties.length; i++)=0A=
      klass.addMethods(properties[i]);=0A=
=0A=
    if (!klass.prototype.initialize)=0A=
      klass.prototype.initialize =3D Prototype.emptyFunction;=0A=
=0A=
    klass.prototype.constructor =3D klass;=0A=
    return klass;=0A=
  }=0A=
=0A=
  function addMethods(source) {=0A=
    var ancestor   =3D this.superclass && this.superclass.prototype;=0A=
    var properties =3D Object.keys(source);=0A=
=0A=
    if (!Object.keys({ toString: true }).length) {=0A=
      if (source.toString !=3D Object.prototype.toString)=0A=
        properties.push("toString");=0A=
      if (source.valueOf !=3D Object.prototype.valueOf)=0A=
        properties.push("valueOf");=0A=
    }=0A=
=0A=
    for (var i =3D 0, length =3D properties.length; i < length; i++) {=0A=
      var property =3D properties[i], value =3D source[property];=0A=
      if (ancestor && Object.isFunction(value) &&=0A=
          value.argumentNames().first() =3D=3D "$super") {=0A=
        var method =3D value;=0A=
        value =3D (function(m) {=0A=
          return function() { return ancestor[m].apply(this, arguments); =
};=0A=
        })(property).wrap(method);=0A=
=0A=
        value.valueOf =3D method.valueOf.bind(method);=0A=
        value.toString =3D method.toString.bind(method);=0A=
      }=0A=
      this.prototype[property] =3D value;=0A=
    }=0A=
=0A=
    return this;=0A=
  }=0A=
=0A=
  return {=0A=
    create: create,=0A=
    Methods: {=0A=
      addMethods: addMethods=0A=
    }=0A=
  };=0A=
})();=0A=
(function() {=0A=
=0A=
  var _toString =3D Object.prototype.toString;=0A=
=0A=
  function extend(destination, source) {=0A=
    for (var property in source)=0A=
      destination[property] =3D source[property];=0A=
    return destination;=0A=
  }=0A=
=0A=
  function inspect(object) {=0A=
    try {=0A=
      if (isUndefined(object)) return 'undefined';=0A=
      if (object =3D=3D=3D null) return 'null';=0A=
      return object.inspect ? object.inspect() : String(object);=0A=
    } catch (e) {=0A=
      if (e instanceof RangeError) return '...';=0A=
      throw e;=0A=
    }=0A=
  }=0A=
=0A=
  function toJSON(object) {=0A=
    var type =3D typeof object;=0A=
    switch (type) {=0A=
      case 'undefined':=0A=
      case 'function':=0A=
      case 'unknown': return;=0A=
      case 'boolean': return object.toString();=0A=
    }=0A=
=0A=
    if (object =3D=3D=3D null) return 'null';=0A=
    if (object.toJSON) return object.toJSON();=0A=
    if (isElement(object)) return;=0A=
=0A=
    var results =3D [];=0A=
    for (var property in object) {=0A=
      var value =3D toJSON(object[property]);=0A=
      if (!isUndefined(value))=0A=
        results.push(property.toJSON() + ': ' + value);=0A=
    }=0A=
=0A=
    return '{' + results.join(', ') + '}';=0A=
  }=0A=
=0A=
  function toQueryString(object) {=0A=
    return $H(object).toQueryString();=0A=
  }=0A=
=0A=
  function toHTML(object) {=0A=
    return object && object.toHTML ? object.toHTML() : =
String.interpret(object);=0A=
  }=0A=
=0A=
  function keys(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(property);=0A=
    return results;=0A=
  }=0A=
=0A=
  function values(object) {=0A=
    var results =3D [];=0A=
    for (var property in object)=0A=
      results.push(object[property]);=0A=
    return results;=0A=
  }=0A=
=0A=
  function clone(object) {=0A=
    return extend({ }, object);=0A=
  }=0A=
=0A=
  function isElement(object) {=0A=
    return !!(object && object.nodeType =3D=3D 1);=0A=
  }=0A=
=0A=
  function isArray(object) {=0A=
    return _toString.call(object) =3D=3D "[object Array]";=0A=
  }=0A=
=0A=
=0A=
  function isHash(object) {=0A=
    return object instanceof Hash;=0A=
  }=0A=
=0A=
  function isFunction(object) {=0A=
    return typeof object =3D=3D=3D "function";=0A=
  }=0A=
=0A=
  function isString(object) {=0A=
    return _toString.call(object) =3D=3D "[object String]";=0A=
  }=0A=
=0A=
  function isNumber(object) {=0A=
    return _toString.call(object) =3D=3D "[object Number]";=0A=
  }=0A=
=0A=
  function isUndefined(object) {=0A=
    return typeof object =3D=3D=3D "undefined";=0A=
  }=0A=
=0A=
  extend(Object, {=0A=
    extend:        extend,=0A=
    inspect:       inspect,=0A=
    toJSON:        toJSON,=0A=
    toQueryString: toQueryString,=0A=
    toHTML:        toHTML,=0A=
    keys:          keys,=0A=
    values:        values,=0A=
    clone:         clone,=0A=
    isElement:     isElement,=0A=
    isArray:       isArray,=0A=
    isHash:        isHash,=0A=
    isFunction:    isFunction,=0A=
    isString:      isString,=0A=
    isNumber:      isNumber,=0A=
    isUndefined:   isUndefined=0A=
  });=0A=
})();=0A=
Object.extend(Function.prototype, (function() {=0A=
  var slice =3D Array.prototype.slice;=0A=
=0A=
  function update(array, args) {=0A=
    var arrayLength =3D array.length, length =3D args.length;=0A=
    while (length--) array[arrayLength + length] =3D args[length];=0A=
    return array;=0A=
  }=0A=
=0A=
  function merge(array, args) {=0A=
    array =3D slice.call(array, 0);=0A=
    return update(array, args);=0A=
  }=0A=
=0A=
  function argumentNames() {=0A=
    var names =3D =
this.toString().match(/^[\s\(]*function[^(]*\(([^)]*)\)/)[1]=0A=
      .replace(/\/\/.*?[\r\n]|\/\*(?:.|[\r\n])*?\*\//g, '')=0A=
      .replace(/\s+/g, '').split(',');=0A=
    return names.length =3D=3D 1 && !names[0] ? [] : names;=0A=
  }=0A=
=0A=
  function bind(context) {=0A=
    if (arguments.length < 2 && Object.isUndefined(arguments[0])) return =
this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function bindAsEventListener(context) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    return function(event) {=0A=
      var a =3D update([event || window.event], args);=0A=
      return __method.apply(context, a);=0A=
    }=0A=
  }=0A=
=0A=
  function curry() {=0A=
    if (!arguments.length) return this;=0A=
    var __method =3D this, args =3D slice.call(arguments, 0);=0A=
    return function() {=0A=
      var a =3D merge(args, arguments);=0A=
      return __method.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function delay(timeout) {=0A=
    var __method =3D this, args =3D slice.call(arguments, 1);=0A=
    timeout =3D timeout * 1000=0A=
    return window.setTimeout(function() {=0A=
      return __method.apply(__method, args);=0A=
    }, timeout);=0A=
  }=0A=
=0A=
  function defer() {=0A=
    var args =3D update([0.01], arguments);=0A=
    return this.delay.apply(this, args);=0A=
  }=0A=
=0A=
  function wrap(wrapper) {=0A=
    var __method =3D this;=0A=
    return function() {=0A=
      var a =3D update([__method.bind(this)], arguments);=0A=
      return wrapper.apply(this, a);=0A=
    }=0A=
  }=0A=
=0A=
  function methodize() {=0A=
    if (this._methodized) return this._methodized;=0A=
    var __method =3D this;=0A=
    return this._methodized =3D function() {=0A=
      var a =3D update([this], arguments);=0A=
      return __method.apply(null, a);=0A=
    };=0A=
  }=0A=
=0A=
  return {=0A=
    argumentNames:       argumentNames,=0A=
    bind:                bind,=0A=
    bindAsEventListener: bindAsEventListener,=0A=
    curry:               curry,=0A=
    delay:               delay,=0A=
    defer:               defer,=0A=
    wrap:                wrap,=0A=
    methodize:           methodize=0A=
  }=0A=
})());=0A=
=0A=
=0A=
Date.prototype.toJSON =3D function() {=0A=
  return '"' + this.getUTCFullYear() + '-' +=0A=
    (this.getUTCMonth() + 1).toPaddedString(2) + '-' +=0A=
    this.getUTCDate().toPaddedString(2) + 'T' +=0A=
    this.getUTCHours().toPaddedString(2) + ':' +=0A=
    this.getUTCMinutes().toPaddedString(2) + ':' +=0A=
    this.getUTCSeconds().toPaddedString(2) + 'Z"';=0A=
};=0A=
=0A=
=0A=
RegExp.prototype.match =3D RegExp.prototype.test;=0A=
=0A=
RegExp.escape =3D function(str) {=0A=
  return String(str).replace(/([.*+?^=3D!:${}()|[\]\/\\])/g, '\\$1');=0A=
};=0A=
var PeriodicalExecuter =3D Class.create({=0A=
  initialize: function(callback, frequency) {=0A=
    this.callback =3D callback;=0A=
    this.frequency =3D frequency;=0A=
    this.currentlyExecuting =3D false;=0A=
=0A=
    this.registerCallback();=0A=
  },=0A=
=0A=
  registerCallback: function() {=0A=
    this.timer =3D setInterval(this.onTimerEvent.bind(this), =
this.frequency * 1000);=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    this.callback(this);=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    if (!this.timer) return;=0A=
    clearInterval(this.timer);=0A=
    this.timer =3D null;=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    if (!this.currentlyExecuting) {=0A=
      try {=0A=
        this.currentlyExecuting =3D true;=0A=
        this.execute();=0A=
        this.currentlyExecuting =3D false;=0A=
      } catch(e) {=0A=
        this.currentlyExecuting =3D false;=0A=
        throw e;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
Object.extend(String, {=0A=
  interpret: function(value) {=0A=
    return value =3D=3D null ? '' : String(value);=0A=
  },=0A=
  specialChar: {=0A=
    '\b': '\\b',=0A=
    '\t': '\\t',=0A=
    '\n': '\\n',=0A=
    '\f': '\\f',=0A=
    '\r': '\\r',=0A=
    '\\': '\\\\'=0A=
  }=0A=
});=0A=
=0A=
Object.extend(String.prototype, (function() {=0A=
=0A=
  function prepareReplacement(replacement) {=0A=
    if (Object.isFunction(replacement)) return replacement;=0A=
    var template =3D new Template(replacement);=0A=
    return function(match) { return template.evaluate(match) };=0A=
  }=0A=
=0A=
  function gsub(pattern, replacement) {=0A=
    var result =3D '', source =3D this, match;=0A=
    replacement =3D prepareReplacement(replacement);=0A=
=0A=
    if (Object.isString(pattern))=0A=
      pattern =3D RegExp.escape(pattern);=0A=
=0A=
    if (!(pattern.length || pattern.source)) {=0A=
      replacement =3D replacement('');=0A=
      return replacement + source.split('').join(replacement) + =
replacement;=0A=
    }=0A=
=0A=
    while (source.length > 0) {=0A=
      if (match =3D source.match(pattern)) {=0A=
        result +=3D source.slice(0, match.index);=0A=
        result +=3D String.interpret(replacement(match));=0A=
        source  =3D source.slice(match.index + match[0].length);=0A=
      } else {=0A=
        result +=3D source, source =3D '';=0A=
      }=0A=
    }=0A=
    return result;=0A=
  }=0A=
=0A=
  function sub(pattern, replacement, count) {=0A=
    replacement =3D prepareReplacement(replacement);=0A=
    count =3D Object.isUndefined(count) ? 1 : count;=0A=
=0A=
    return this.gsub(pattern, function(match) {=0A=
      if (--count < 0) return match[0];=0A=
      return replacement(match);=0A=
    });=0A=
  }=0A=
=0A=
  function scan(pattern, iterator) {=0A=
    this.gsub(pattern, iterator);=0A=
    return String(this);=0A=
  }=0A=
=0A=
  function truncate(length, truncation) {=0A=
    length =3D length || 30;=0A=
    truncation =3D Object.isUndefined(truncation) ? '...' : truncation;=0A=
    return this.length > length ?=0A=
      this.slice(0, length - truncation.length) + truncation : =
String(this);=0A=
  }=0A=
=0A=
  function strip() {=0A=
    return this.replace(/^\s+/, '').replace(/\s+$/, '');=0A=
  }=0A=
=0A=
  function stripTags() {=0A=
    return this.replace(/<\w+(\s+("[^"]*"|'[^']*'|[^>])+)?>|<\/\w+>/gi, =
'');=0A=
  }=0A=
=0A=
  function stripScripts() {=0A=
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');=0A=
  }=0A=
=0A=
  function extractScripts() {=0A=
    var matchAll =3D new RegExp(Prototype.ScriptFragment, 'img');=0A=
    var matchOne =3D new RegExp(Prototype.ScriptFragment, 'im');=0A=
    return (this.match(matchAll) || []).map(function(scriptTag) {=0A=
      return (scriptTag.match(matchOne) || ['', ''])[1];=0A=
    });=0A=
  }=0A=
=0A=
  function evalScripts() {=0A=
    return this.extractScripts().map(function(script) { return =
eval(script) });=0A=
  }=0A=
=0A=
  function escapeHTML() {=0A=
    return =
this.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;');=0A=
  }=0A=
=0A=
  function unescapeHTML() {=0A=
    return =
this.stripTags().replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;=
/g,'&');=0A=
  }=0A=
=0A=
=0A=
  function toQueryParams(separator) {=0A=
    var match =3D this.strip().match(/([^?#]*)(#.*)?$/);=0A=
    if (!match) return { };=0A=
=0A=
    return match[1].split(separator || '&').inject({ }, function(hash, =
pair) {=0A=
      if ((pair =3D pair.split('=3D'))[0]) {=0A=
        var key =3D decodeURIComponent(pair.shift());=0A=
        var value =3D pair.length > 1 ? pair.join('=3D') : pair[0];=0A=
        if (value !=3D undefined) value =3D decodeURIComponent(value);=0A=
=0A=
        if (key in hash) {=0A=
          if (!Object.isArray(hash[key])) hash[key] =3D [hash[key]];=0A=
          hash[key].push(value);=0A=
        }=0A=
        else hash[key] =3D value;=0A=
      }=0A=
      return hash;=0A=
    });=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.split('');=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this.slice(0, this.length - 1) +=0A=
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);=0A=
  }=0A=
=0A=
  function times(count) {=0A=
    return count < 1 ? '' : new Array(count + 1).join(this);=0A=
  }=0A=
=0A=
  function camelize() {=0A=
    var parts =3D this.split('-'), len =3D parts.length;=0A=
    if (len =3D=3D 1) return parts[0];=0A=
=0A=
    var camelized =3D this.charAt(0) =3D=3D '-'=0A=
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)=0A=
      : parts[0];=0A=
=0A=
    for (var i =3D 1; i < len; i++)=0A=
      camelized +=3D parts[i].charAt(0).toUpperCase() + =
parts[i].substring(1);=0A=
=0A=
    return camelized;=0A=
  }=0A=
=0A=
  function capitalize() {=0A=
    return this.charAt(0).toUpperCase() + =
this.substring(1).toLowerCase();=0A=
  }=0A=
=0A=
  function underscore() {=0A=
    return this.replace(/::/g, '/')=0A=
               .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')=0A=
               .replace(/([a-z\d])([A-Z])/g, '$1_$2')=0A=
               .replace(/-/g, '_')=0A=
               .toLowerCase();=0A=
  }=0A=
=0A=
  function dasherize() {=0A=
    return this.replace(/_/g, '-');=0A=
  }=0A=
=0A=
  function inspect(useDoubleQuotes) {=0A=
    var escapedString =3D this.replace(/[\x00-\x1f\\]/g, =
function(character) {=0A=
      if (character in String.specialChar) {=0A=
        return String.specialChar[character];=0A=
      }=0A=
      return '\\u00' + character.charCodeAt().toPaddedString(2, 16);=0A=
    });=0A=
    if (useDoubleQuotes) return '"' + escapedString.replace(/"/g, '\\"') =
+ '"';=0A=
    return "'" + escapedString.replace(/'/g, '\\\'') + "'";=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return this.inspect(true);=0A=
  }=0A=
=0A=
  function unfilterJSON(filter) {=0A=
    return this.replace(filter || Prototype.JSONFilter, '$1');=0A=
  }=0A=
=0A=
  function isJSON() {=0A=
    var str =3D this;=0A=
    if (str.blank()) return false;=0A=
    str =3D this.replace(/\\./g, '@').replace(/"[^"\\\n\r]*"/g, '');=0A=
    return (/^[,:{}\[\]0-9.\-+Eaeflnr-u \n\r\t]*$/).test(str);=0A=
  }=0A=
=0A=
  function evalJSON(sanitize) {=0A=
    var json =3D this.unfilterJSON();=0A=
    try {=0A=
      if (!sanitize || json.isJSON()) return eval('(' + json + ')');=0A=
    } catch (e) { }=0A=
    throw new SyntaxError('Badly formed JSON string: ' + this.inspect());=0A=
  }=0A=
=0A=
  function include(pattern) {=0A=
    return this.indexOf(pattern) > -1;=0A=
  }=0A=
=0A=
  function startsWith(pattern) {=0A=
    return this.indexOf(pattern) =3D=3D=3D 0;=0A=
  }=0A=
=0A=
  function endsWith(pattern) {=0A=
    var d =3D this.length - pattern.length;=0A=
    return d >=3D 0 && this.lastIndexOf(pattern) =3D=3D=3D d;=0A=
  }=0A=
=0A=
  function empty() {=0A=
    return this =3D=3D '';=0A=
  }=0A=
=0A=
  function blank() {=0A=
    return /^\s*$/.test(this);=0A=
  }=0A=
=0A=
  function interpolate(object, pattern) {=0A=
    return new Template(this, pattern).evaluate(object);=0A=
  }=0A=
=0A=
  return {=0A=
    gsub:           gsub,=0A=
    sub:            sub,=0A=
    scan:           scan,=0A=
    truncate:       truncate,=0A=
    strip:          String.prototype.trim ? String.prototype.trim : =
strip,=0A=
    stripTags:      stripTags,=0A=
    stripScripts:   stripScripts,=0A=
    extractScripts: extractScripts,=0A=
    evalScripts:    evalScripts,=0A=
    escapeHTML:     escapeHTML,=0A=
    unescapeHTML:   unescapeHTML,=0A=
    toQueryParams:  toQueryParams,=0A=
    parseQuery:     toQueryParams,=0A=
    toArray:        toArray,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    camelize:       camelize,=0A=
    capitalize:     capitalize,=0A=
    underscore:     underscore,=0A=
    dasherize:      dasherize,=0A=
    inspect:        inspect,=0A=
    toJSON:         toJSON,=0A=
    unfilterJSON:   unfilterJSON,=0A=
    isJSON:         isJSON,=0A=
    evalJSON:       evalJSON,=0A=
    include:        include,=0A=
    startsWith:     startsWith,=0A=
    endsWith:       endsWith,=0A=
    empty:          empty,=0A=
    blank:          blank,=0A=
    interpolate:    interpolate=0A=
  };=0A=
})());=0A=
=0A=
var Template =3D Class.create({=0A=
  initialize: function(template, pattern) {=0A=
    this.template =3D template.toString();=0A=
    this.pattern =3D pattern || Template.Pattern;=0A=
  },=0A=
=0A=
  evaluate: function(object) {=0A=
    if (object && Object.isFunction(object.toTemplateReplacements))=0A=
      object =3D object.toTemplateReplacements();=0A=
=0A=
    return this.template.gsub(this.pattern, function(match) {=0A=
      if (object =3D=3D null) return (match[1] + '');=0A=
=0A=
      var before =3D match[1] || '';=0A=
      if (before =3D=3D '\\') return match[2];=0A=
=0A=
      var ctx =3D object, expr =3D match[3];=0A=
      var pattern =3D /^([^.[]+|\[((?:.*?[^\\])?)\])(\.|\[|$)/;=0A=
      match =3D pattern.exec(expr);=0A=
      if (match =3D=3D null) return before;=0A=
=0A=
      while (match !=3D null) {=0A=
        var comp =3D match[1].startsWith('[') ? =
match[2].replace(/\\\\]/g, ']') : match[1];=0A=
        ctx =3D ctx[comp];=0A=
        if (null =3D=3D ctx || '' =3D=3D match[3]) break;=0A=
        expr =3D expr.substring('[' =3D=3D match[3] ? match[1].length : =
match[0].length);=0A=
        match =3D pattern.exec(expr);=0A=
      }=0A=
=0A=
      return before + String.interpret(ctx);=0A=
    });=0A=
  }=0A=
});=0A=
Template.Pattern =3D /(^|.|\r|\n)(#\{(.*?)\})/;=0A=
=0A=
var $break =3D { };=0A=
=0A=
var Enumerable =3D (function() {=0A=
  function each(iterator, context) {=0A=
    var index =3D 0;=0A=
    try {=0A=
      this._each(function(value) {=0A=
        iterator.call(context, value, index++);=0A=
      });=0A=
    } catch (e) {=0A=
      if (e !=3D $break) throw e;=0A=
    }=0A=
    return this;=0A=
  }=0A=
=0A=
  function eachSlice(number, iterator, context) {=0A=
    var index =3D -number, slices =3D [], array =3D this.toArray();=0A=
    if (number < 1) return array;=0A=
    while ((index +=3D number) < array.length)=0A=
      slices.push(array.slice(index, index+number));=0A=
    return slices.collect(iterator, context);=0A=
  }=0A=
=0A=
  function all(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D true;=0A=
    this.each(function(value, index) {=0A=
      result =3D result && !!iterator.call(context, value, index);=0A=
      if (!result) throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function any(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result =3D false;=0A=
    this.each(function(value, index) {=0A=
      if (result =3D !!iterator.call(context, value, index))=0A=
        throw $break;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function collect(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function detect(iterator, context) {=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index)) {=0A=
        result =3D value;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function findAll(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function grep(filter, iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var results =3D [];=0A=
=0A=
    if (Object.isString(filter))=0A=
      filter =3D new RegExp(RegExp.escape(filter));=0A=
=0A=
    this.each(function(value, index) {=0A=
      if (filter.match(value))=0A=
        results.push(iterator.call(context, value, index));=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function include(object) {=0A=
    if (Object.isFunction(this.indexOf))=0A=
      if (this.indexOf(object) !=3D -1) return true;=0A=
=0A=
    var found =3D false;=0A=
    this.each(function(value) {=0A=
      if (value =3D=3D object) {=0A=
        found =3D true;=0A=
        throw $break;=0A=
      }=0A=
    });=0A=
    return found;=0A=
  }=0A=
=0A=
  function inGroupsOf(number, fillWith) {=0A=
    fillWith =3D Object.isUndefined(fillWith) ? null : fillWith;=0A=
    return this.eachSlice(number, function(slice) {=0A=
      while(slice.length < number) slice.push(fillWith);=0A=
      return slice;=0A=
    });=0A=
  }=0A=
=0A=
  function inject(memo, iterator, context) {=0A=
    this.each(function(value, index) {=0A=
      memo =3D iterator.call(context, memo, value, index);=0A=
    });=0A=
    return memo;=0A=
  }=0A=
=0A=
  function invoke(method) {=0A=
    var args =3D $A(arguments).slice(1);=0A=
    return this.map(function(value) {=0A=
      return value[method].apply(value, args);=0A=
    });=0A=
  }=0A=
=0A=
  function max(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value >=3D result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function min(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var result;=0A=
    this.each(function(value, index) {=0A=
      value =3D iterator.call(context, value, index);=0A=
      if (result =3D=3D null || value < result)=0A=
        result =3D value;=0A=
    });=0A=
    return result;=0A=
  }=0A=
=0A=
  function partition(iterator, context) {=0A=
    iterator =3D iterator || Prototype.K;=0A=
    var trues =3D [], falses =3D [];=0A=
    this.each(function(value, index) {=0A=
      (iterator.call(context, value, index) ?=0A=
        trues : falses).push(value);=0A=
    });=0A=
    return [trues, falses];=0A=
  }=0A=
=0A=
  function pluck(property) {=0A=
    var results =3D [];=0A=
    this.each(function(value) {=0A=
      results.push(value[property]);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function reject(iterator, context) {=0A=
    var results =3D [];=0A=
    this.each(function(value, index) {=0A=
      if (!iterator.call(context, value, index))=0A=
        results.push(value);=0A=
    });=0A=
    return results;=0A=
  }=0A=
=0A=
  function sortBy(iterator, context) {=0A=
    return this.map(function(value, index) {=0A=
      return {=0A=
        value: value,=0A=
        criteria: iterator.call(context, value, index)=0A=
      };=0A=
    }).sort(function(left, right) {=0A=
      var a =3D left.criteria, b =3D right.criteria;=0A=
      return a < b ? -1 : a > b ? 1 : 0;=0A=
    }).pluck('value');=0A=
  }=0A=
=0A=
  function toArray() {=0A=
    return this.map();=0A=
  }=0A=
=0A=
  function zip() {=0A=
    var iterator =3D Prototype.K, args =3D $A(arguments);=0A=
    if (Object.isFunction(args.last()))=0A=
      iterator =3D args.pop();=0A=
=0A=
    var collections =3D [this].concat(args).map($A);=0A=
    return this.map(function(value, index) {=0A=
      return iterator(collections.pluck(index));=0A=
    });=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.toArray().length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Enumerable:' + this.toArray().inspect() + '>';=0A=
  }=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
  return {=0A=
    each:       each,=0A=
    eachSlice:  eachSlice,=0A=
    all:        all,=0A=
    every:      all,=0A=
    any:        any,=0A=
    some:       any,=0A=
    collect:    collect,=0A=
    map:        collect,=0A=
    detect:     detect,=0A=
    findAll:    findAll,=0A=
    select:     findAll,=0A=
    filter:     findAll,=0A=
    grep:       grep,=0A=
    include:    include,=0A=
    member:     include,=0A=
    inGroupsOf: inGroupsOf,=0A=
    inject:     inject,=0A=
    invoke:     invoke,=0A=
    max:        max,=0A=
    min:        min,=0A=
    partition:  partition,=0A=
    pluck:      pluck,=0A=
    reject:     reject,=0A=
    sortBy:     sortBy,=0A=
    toArray:    toArray,=0A=
    entries:    toArray,=0A=
    zip:        zip,=0A=
    size:       size,=0A=
    inspect:    inspect,=0A=
    find:       detect=0A=
  };=0A=
})();=0A=
function $A(iterable) {=0A=
  if (!iterable) return [];=0A=
  if ('toArray' in Object(iterable)) return iterable.toArray();=0A=
  var length =3D iterable.length || 0, results =3D new Array(length);=0A=
  while (length--) results[length] =3D iterable[length];=0A=
  return results;=0A=
}=0A=
=0A=
function $w(string) {=0A=
  if (!Object.isString(string)) return [];=0A=
  string =3D string.strip();=0A=
  return string ? string.split(/\s+/) : [];=0A=
}=0A=
=0A=
Array.from =3D $A;=0A=
=0A=
=0A=
(function() {=0A=
  var arrayProto =3D Array.prototype,=0A=
      slice =3D arrayProto.slice,=0A=
      _each =3D arrayProto.forEach; // use native browser JS 1.6 =
implementation if available=0A=
=0A=
  function each(iterator) {=0A=
    for (var i =3D 0, length =3D this.length; i < length; i++)=0A=
      iterator(this[i]);=0A=
  }=0A=
  if (!_each) _each =3D each;=0A=
=0A=
  function clear() {=0A=
    this.length =3D 0;=0A=
    return this;=0A=
  }=0A=
=0A=
  function first() {=0A=
    return this[0];=0A=
  }=0A=
=0A=
  function last() {=0A=
    return this[this.length - 1];=0A=
  }=0A=
=0A=
  function compact() {=0A=
    return this.select(function(value) {=0A=
      return value !=3D null;=0A=
    });=0A=
  }=0A=
=0A=
  function flatten() {=0A=
    return this.inject([], function(array, value) {=0A=
      if (Object.isArray(value))=0A=
        return array.concat(value.flatten());=0A=
      array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function without() {=0A=
    var values =3D slice.call(arguments, 0);=0A=
    return this.select(function(value) {=0A=
      return !values.include(value);=0A=
    });=0A=
  }=0A=
=0A=
  function reverse(inline) {=0A=
    return (inline !=3D=3D false ? this : this.toArray())._reverse();=0A=
  }=0A=
=0A=
  function uniq(sorted) {=0A=
    return this.inject([], function(array, value, index) {=0A=
      if (0 =3D=3D index || (sorted ? array.last() !=3D value : =
!array.include(value)))=0A=
        array.push(value);=0A=
      return array;=0A=
    });=0A=
  }=0A=
=0A=
  function intersect(array) {=0A=
    return this.uniq().findAll(function(item) {=0A=
      return array.detect(function(value) { return item =3D=3D=3D value =
});=0A=
    });=0A=
  }=0A=
=0A=
=0A=
  function clone() {=0A=
    return slice.call(this, 0);=0A=
  }=0A=
=0A=
  function size() {=0A=
    return this.length;=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '[' + this.map(Object.inspect).join(', ') + ']';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    var results =3D [];=0A=
    this.each(function(object) {=0A=
      var value =3D Object.toJSON(object);=0A=
      if (!Object.isUndefined(value)) results.push(value);=0A=
    });=0A=
    return '[' + results.join(', ') + ']';=0A=
  }=0A=
=0A=
  function indexOf(item, i) {=0A=
    i || (i =3D 0);=0A=
    var length =3D this.length;=0A=
    if (i < 0) i =3D length + i;=0A=
    for (; i < length; i++)=0A=
      if (this[i] =3D=3D=3D item) return i;=0A=
    return -1;=0A=
  }=0A=
=0A=
  function lastIndexOf(item, i) {=0A=
    i =3D isNaN(i) ? this.length : (i < 0 ? this.length + i : i) + 1;=0A=
    var n =3D this.slice(0, i).reverse().indexOf(item);=0A=
    return (n < 0) ? n : i - n - 1;=0A=
  }=0A=
=0A=
  function concat() {=0A=
    var array =3D slice.call(this, 0), item;=0A=
    for (var i =3D 0, length =3D arguments.length; i < length; i++) {=0A=
      item =3D arguments[i];=0A=
      if (Object.isArray(item) && !('callee' in item)) {=0A=
        for (var j =3D 0, arrayLength =3D item.length; j < arrayLength; =
j++)=0A=
          array.push(item[j]);=0A=
      } else {=0A=
        array.push(item);=0A=
      }=0A=
    }=0A=
    return array;=0A=
  }=0A=
=0A=
  Object.extend(arrayProto, Enumerable);=0A=
=0A=
  if (!arrayProto._reverse)=0A=
    arrayProto._reverse =3D arrayProto.reverse;=0A=
=0A=
  Object.extend(arrayProto, {=0A=
    _each:     _each,=0A=
    clear:     clear,=0A=
    first:     first,=0A=
    last:      last,=0A=
    compact:   compact,=0A=
    flatten:   flatten,=0A=
    without:   without,=0A=
    reverse:   reverse,=0A=
    uniq:      uniq,=0A=
    intersect: intersect,=0A=
    clone:     clone,=0A=
    toArray:   clone,=0A=
    size:      size,=0A=
    inspect:   inspect,=0A=
    toJSON:    toJSON=0A=
  });=0A=
=0A=
  var CONCAT_ARGUMENTS_BUGGY =3D (function() {=0A=
    return [].concat(arguments)[0][0] !=3D=3D 1;=0A=
  })(1,2)=0A=
=0A=
  if (CONCAT_ARGUMENTS_BUGGY) arrayProto.concat =3D concat;=0A=
=0A=
  if (!arrayProto.indexOf) arrayProto.indexOf =3D indexOf;=0A=
  if (!arrayProto.lastIndexOf) arrayProto.lastIndexOf =3D lastIndexOf;=0A=
})();=0A=
function $H(object) {=0A=
  return new Hash(object);=0A=
};=0A=
=0A=
var Hash =3D Class.create(Enumerable, (function() {=0A=
  function initialize(object) {=0A=
    this._object =3D Object.isHash(object) ? object.toObject() : =
Object.clone(object);=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    for (var key in this._object) {=0A=
      var value =3D this._object[key], pair =3D [key, value];=0A=
      pair.key =3D key;=0A=
      pair.value =3D value;=0A=
      iterator(pair);=0A=
    }=0A=
  }=0A=
=0A=
  function set(key, value) {=0A=
    return this._object[key] =3D value;=0A=
  }=0A=
=0A=
  function get(key) {=0A=
    if (this._object[key] !=3D=3D Object.prototype[key])=0A=
      return this._object[key];=0A=
  }=0A=
=0A=
  function unset(key) {=0A=
    var value =3D this._object[key];=0A=
    delete this._object[key];=0A=
    return value;=0A=
  }=0A=
=0A=
  function toObject() {=0A=
    return Object.clone(this._object);=0A=
  }=0A=
=0A=
  function keys() {=0A=
    return this.pluck('key');=0A=
  }=0A=
=0A=
  function values() {=0A=
    return this.pluck('value');=0A=
  }=0A=
=0A=
  function index(value) {=0A=
    var match =3D this.detect(function(pair) {=0A=
      return pair.value =3D=3D=3D value;=0A=
    });=0A=
    return match && match.key;=0A=
  }=0A=
=0A=
  function merge(object) {=0A=
    return this.clone().update(object);=0A=
  }=0A=
=0A=
  function update(object) {=0A=
    return new Hash(object).inject(this, function(result, pair) {=0A=
      result.set(pair.key, pair.value);=0A=
      return result;=0A=
    });=0A=
  }=0A=
=0A=
  function toQueryPair(key, value) {=0A=
    if (Object.isUndefined(value)) return key;=0A=
    return key + '=3D' + encodeURIComponent(String.interpret(value));=0A=
  }=0A=
=0A=
  function toQueryString() {=0A=
    return this.inject([], function(results, pair) {=0A=
      var key =3D encodeURIComponent(pair.key), values =3D pair.value;=0A=
=0A=
      if (values && typeof values =3D=3D 'object') {=0A=
        if (Object.isArray(values))=0A=
          return results.concat(values.map(toQueryPair.curry(key)));=0A=
      } else results.push(toQueryPair(key, values));=0A=
      return results;=0A=
    }).join('&');=0A=
  }=0A=
=0A=
  function inspect() {=0A=
    return '#<Hash:{' + this.map(function(pair) {=0A=
      return pair.map(Object.inspect).join(': ');=0A=
    }).join(', ') + '}>';=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return Object.toJSON(this.toObject());=0A=
  }=0A=
=0A=
  function clone() {=0A=
    return new Hash(this);=0A=
  }=0A=
=0A=
  return {=0A=
    initialize:             initialize,=0A=
    _each:                  _each,=0A=
    set:                    set,=0A=
    get:                    get,=0A=
    unset:                  unset,=0A=
    toObject:               toObject,=0A=
    toTemplateReplacements: toObject,=0A=
    keys:                   keys,=0A=
    values:                 values,=0A=
    index:                  index,=0A=
    merge:                  merge,=0A=
    update:                 update,=0A=
    toQueryString:          toQueryString,=0A=
    inspect:                inspect,=0A=
    toJSON:                 toJSON,=0A=
    clone:                  clone=0A=
  };=0A=
})());=0A=
=0A=
Hash.from =3D $H;=0A=
Object.extend(Number.prototype, (function() {=0A=
  function toColorPart() {=0A=
    return this.toPaddedString(2, 16);=0A=
  }=0A=
=0A=
  function succ() {=0A=
    return this + 1;=0A=
  }=0A=
=0A=
  function times(iterator, context) {=0A=
    $R(0, this, true).each(iterator, context);=0A=
    return this;=0A=
  }=0A=
=0A=
  function toPaddedString(length, radix) {=0A=
    var string =3D this.toString(radix || 10);=0A=
    return '0'.times(length - string.length) + string;=0A=
  }=0A=
=0A=
  function toJSON() {=0A=
    return isFinite(this) ? this.toString() : 'null';=0A=
  }=0A=
=0A=
  function abs() {=0A=
    return Math.abs(this);=0A=
  }=0A=
=0A=
  function round() {=0A=
    return Math.round(this);=0A=
  }=0A=
=0A=
  function ceil() {=0A=
    return Math.ceil(this);=0A=
  }=0A=
=0A=
  function floor() {=0A=
    return Math.floor(this);=0A=
  }=0A=
=0A=
  return {=0A=
    toColorPart:    toColorPart,=0A=
    succ:           succ,=0A=
    times:          times,=0A=
    toPaddedString: toPaddedString,=0A=
    toJSON:         toJSON,=0A=
    abs:            abs,=0A=
    round:          round,=0A=
    ceil:           ceil,=0A=
    floor:          floor=0A=
  };=0A=
})());=0A=
=0A=
function $R(start, end, exclusive) {=0A=
  return new ObjectRange(start, end, exclusive);=0A=
}=0A=
=0A=
var ObjectRange =3D Class.create(Enumerable, (function() {=0A=
  function initialize(start, end, exclusive) {=0A=
    this.start =3D start;=0A=
    this.end =3D end;=0A=
    this.exclusive =3D exclusive;=0A=
  }=0A=
=0A=
  function _each(iterator) {=0A=
    var value =3D this.start;=0A=
    while (this.include(value)) {=0A=
      iterator(value);=0A=
      value =3D value.succ();=0A=
    }=0A=
  }=0A=
=0A=
  function include(value) {=0A=
    if (value < this.start)=0A=
      return false;=0A=
    if (this.exclusive)=0A=
      return value < this.end;=0A=
    return value <=3D this.end;=0A=
  }=0A=
=0A=
  return {=0A=
    initialize: initialize,=0A=
    _each:      _each,=0A=
    include:    include=0A=
  };=0A=
})());=0A=
=0A=
=0A=
=0A=
var Ajax =3D {=0A=
  getTransport: function() {=0A=
    return Try.these(=0A=
      function() {return new XMLHttpRequest()},=0A=
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},=0A=
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}=0A=
    ) || false;=0A=
  },=0A=
=0A=
  activeRequestCount: 0=0A=
};=0A=
=0A=
Ajax.Responders =3D {=0A=
  responders: [],=0A=
=0A=
  _each: function(iterator) {=0A=
    this.responders._each(iterator);=0A=
  },=0A=
=0A=
  register: function(responder) {=0A=
    if (!this.include(responder))=0A=
      this.responders.push(responder);=0A=
  },=0A=
=0A=
  unregister: function(responder) {=0A=
    this.responders =3D this.responders.without(responder);=0A=
  },=0A=
=0A=
  dispatch: function(callback, request, transport, json) {=0A=
    this.each(function(responder) {=0A=
      if (Object.isFunction(responder[callback])) {=0A=
        try {=0A=
          responder[callback].apply(responder, [request, transport, =
json]);=0A=
        } catch (e) { }=0A=
      }=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Ajax.Responders, Enumerable);=0A=
=0A=
Ajax.Responders.register({=0A=
  onCreate:   function() { Ajax.activeRequestCount++ },=0A=
  onComplete: function() { Ajax.activeRequestCount-- }=0A=
});=0A=
Ajax.Base =3D Class.create({=0A=
  initialize: function(options) {=0A=
    this.options =3D {=0A=
      method:       'post',=0A=
      asynchronous: true,=0A=
      contentType:  'application/x-www-form-urlencoded',=0A=
      encoding:     'UTF-8',=0A=
      parameters:   '',=0A=
      evalJSON:     true,=0A=
      evalJS:       true=0A=
    };=0A=
    Object.extend(this.options, options || { });=0A=
=0A=
    this.options.method =3D this.options.method.toLowerCase();=0A=
=0A=
    if (Object.isString(this.options.parameters))=0A=
      this.options.parameters =3D =
this.options.parameters.toQueryParams();=0A=
    else if (Object.isHash(this.options.parameters))=0A=
      this.options.parameters =3D this.options.parameters.toObject();=0A=
  }=0A=
});=0A=
Ajax.Request =3D Class.create(Ajax.Base, {=0A=
  _complete: false,=0A=
=0A=
  initialize: function($super, url, options) {=0A=
    $super(options);=0A=
    this.transport =3D Ajax.getTransport();=0A=
    this.request(url);=0A=
  },=0A=
=0A=
  request: function(url) {=0A=
    this.url =3D url;=0A=
    this.method =3D this.options.method;=0A=
    var params =3D Object.clone(this.options.parameters);=0A=
=0A=
    if (!['get', 'post'].include(this.method)) {=0A=
      params['_method'] =3D this.method;=0A=
      this.method =3D 'post';=0A=
    }=0A=
=0A=
    this.parameters =3D params;=0A=
=0A=
    if (params =3D Object.toQueryString(params)) {=0A=
      if (this.method =3D=3D 'get')=0A=
        this.url +=3D (this.url.include('?') ? '&' : '?') + params;=0A=
      else if (/Konqueror|Safari|KHTML/.test(navigator.userAgent))=0A=
        params +=3D '&_=3D';=0A=
    }=0A=
=0A=
    try {=0A=
      var response =3D new Ajax.Response(this);=0A=
      if (this.options.onCreate) this.options.onCreate(response);=0A=
      Ajax.Responders.dispatch('onCreate', this, response);=0A=
=0A=
      this.transport.open(this.method.toUpperCase(), this.url,=0A=
        this.options.asynchronous);=0A=
=0A=
      if (this.options.asynchronous) =
this.respondToReadyState.bind(this).defer(1);=0A=
=0A=
      this.transport.onreadystatechange =3D =
this.onStateChange.bind(this);=0A=
      this.setRequestHeaders();=0A=
=0A=
      this.body =3D this.method =3D=3D 'post' ? (this.options.postBody =
|| params) : null;=0A=
      this.transport.send(this.body);=0A=
=0A=
      /* Force Firefox to handle ready state 4 for synchronous requests =
*/=0A=
      if (!this.options.asynchronous && this.transport.overrideMimeType)=0A=
        this.onStateChange();=0A=
=0A=
    }=0A=
    catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  onStateChange: function() {=0A=
    var readyState =3D this.transport.readyState;=0A=
    if (readyState > 1 && !((readyState =3D=3D 4) && this._complete))=0A=
      this.respondToReadyState(this.transport.readyState);=0A=
  },=0A=
=0A=
  setRequestHeaders: function() {=0A=
    var headers =3D {=0A=
      'X-Requested-With': 'XMLHttpRequest',=0A=
      'X-Prototype-Version': Prototype.Version,=0A=
      'Accept': 'text/javascript, text/html, application/xml, text/xml, =
*/*'=0A=
    };=0A=
=0A=
    if (this.method =3D=3D 'post') {=0A=
      headers['Content-type'] =3D this.options.contentType +=0A=
        (this.options.encoding ? '; charset=3D' + this.options.encoding =
: '');=0A=
=0A=
      /* Force "Connection: close" for older Mozilla browsers to work=0A=
       * around a bug where XMLHttpRequest sends an incorrect=0A=
       * Content-length header. See Mozilla Bugzilla #246651.=0A=
       */=0A=
      if (this.transport.overrideMimeType &&=0A=
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < =
2005)=0A=
            headers['Connection'] =3D 'close';=0A=
    }=0A=
=0A=
    if (typeof this.options.requestHeaders =3D=3D 'object') {=0A=
      var extras =3D this.options.requestHeaders;=0A=
=0A=
      if (Object.isFunction(extras.push))=0A=
        for (var i =3D 0, length =3D extras.length; i < length; i +=3D 2)=0A=
          headers[extras[i]] =3D extras[i+1];=0A=
      else=0A=
        $H(extras).each(function(pair) { headers[pair.key] =3D =
pair.value });=0A=
    }=0A=
=0A=
    for (var name in headers)=0A=
      this.transport.setRequestHeader(name, headers[name]);=0A=
  },=0A=
=0A=
  success: function() {=0A=
    var status =3D this.getStatus();=0A=
    return !status || (status >=3D 200 && status < 300);=0A=
  },=0A=
=0A=
  getStatus: function() {=0A=
    try {=0A=
      return this.transport.status || 0;=0A=
    } catch (e) { return 0 }=0A=
  },=0A=
=0A=
  respondToReadyState: function(readyState) {=0A=
    var state =3D Ajax.Request.Events[readyState], response =3D new =
Ajax.Response(this);=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      try {=0A=
        this._complete =3D true;=0A=
        (this.options['on' + response.status]=0A=
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]=0A=
         || Prototype.emptyFunction)(response, response.headerJSON);=0A=
      } catch (e) {=0A=
        this.dispatchException(e);=0A=
      }=0A=
=0A=
      var contentType =3D response.getHeader('Content-type');=0A=
      if (this.options.evalJS =3D=3D 'force'=0A=
          || (this.options.evalJS && this.isSameOrigin() && contentType=0A=
          && =
contentType.match(/^\s*(text|application)\/(x-)?(java|ecma)script(;.*)?\s=
*$/i)))=0A=
        this.evalResponse();=0A=
    }=0A=
=0A=
    try {=0A=
      (this.options['on' + state] || Prototype.emptyFunction)(response, =
response.headerJSON);=0A=
      Ajax.Responders.dispatch('on' + state, this, response, =
response.headerJSON);=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
=0A=
    if (state =3D=3D 'Complete') {=0A=
      this.transport.onreadystatechange =3D Prototype.emptyFunction;=0A=
    }=0A=
  },=0A=
=0A=
  isSameOrigin: function() {=0A=
    var m =3D this.url.match(/^\s*https?:\/\/[^\/]*/);=0A=
    return !m || (m[0] =3D=3D =
'#{protocol}//#{domain}#{port}'.interpolate({=0A=
      protocol: location.protocol,=0A=
      domain: document.domain,=0A=
      port: location.port ? ':' + location.port : ''=0A=
    }));=0A=
  },=0A=
=0A=
  getHeader: function(name) {=0A=
    try {=0A=
      return this.transport.getResponseHeader(name) || null;=0A=
    } catch (e) { return null; }=0A=
  },=0A=
=0A=
  evalResponse: function() {=0A=
    try {=0A=
      return eval((this.transport.responseText || '').unfilterJSON());=0A=
    } catch (e) {=0A=
      this.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  dispatchException: function(exception) {=0A=
    (this.options.onException || Prototype.emptyFunction)(this, =
exception);=0A=
    Ajax.Responders.dispatch('onException', this, exception);=0A=
  }=0A=
});=0A=
=0A=
Ajax.Request.Events =3D=0A=
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
=0A=
Ajax.Response =3D Class.create({=0A=
  initialize: function(request){=0A=
    this.request =3D request;=0A=
    var transport  =3D this.transport  =3D request.transport,=0A=
        readyState =3D this.readyState =3D transport.readyState;=0A=
=0A=
    if((readyState > 2 && !Prototype.Browser.IE) || readyState =3D=3D 4) =
{=0A=
      this.status       =3D this.getStatus();=0A=
      this.statusText   =3D this.getStatusText();=0A=
      this.responseText =3D String.interpret(transport.responseText);=0A=
      this.headerJSON   =3D this._getHeaderJSON();=0A=
    }=0A=
=0A=
    if(readyState =3D=3D 4) {=0A=
      var xml =3D transport.responseXML;=0A=
      this.responseXML  =3D Object.isUndefined(xml) ? null : xml;=0A=
      this.responseJSON =3D this._getResponseJSON();=0A=
    }=0A=
  },=0A=
=0A=
  status:      0,=0A=
=0A=
  statusText: '',=0A=
=0A=
  getStatus: Ajax.Request.prototype.getStatus,=0A=
=0A=
  getStatusText: function() {=0A=
    try {=0A=
      return this.transport.statusText || '';=0A=
    } catch (e) { return '' }=0A=
  },=0A=
=0A=
  getHeader: Ajax.Request.prototype.getHeader,=0A=
=0A=
  getAllHeaders: function() {=0A=
    try {=0A=
      return this.getAllResponseHeaders();=0A=
    } catch (e) { return null }=0A=
  },=0A=
=0A=
  getResponseHeader: function(name) {=0A=
    return this.transport.getResponseHeader(name);=0A=
  },=0A=
=0A=
  getAllResponseHeaders: function() {=0A=
    return this.transport.getAllResponseHeaders();=0A=
  },=0A=
=0A=
  _getHeaderJSON: function() {=0A=
    var json =3D this.getHeader('X-JSON');=0A=
    if (!json) return null;=0A=
    json =3D decodeURIComponent(escape(json));=0A=
    try {=0A=
      return json.evalJSON(this.request.options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  },=0A=
=0A=
  _getResponseJSON: function() {=0A=
    var options =3D this.request.options;=0A=
    if (!options.evalJSON || (options.evalJSON !=3D 'force' &&=0A=
      !(this.getHeader('Content-type') || =
'').include('application/json')) ||=0A=
        this.responseText.blank())=0A=
          return null;=0A=
    try {=0A=
      return this.responseText.evalJSON(options.sanitizeJSON ||=0A=
        !this.request.isSameOrigin());=0A=
    } catch (e) {=0A=
      this.request.dispatchException(e);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.Updater =3D Class.create(Ajax.Request, {=0A=
  initialize: function($super, container, url, options) {=0A=
    this.container =3D {=0A=
      success: (container.success || container),=0A=
      failure: (container.failure || (container.success ? null : =
container))=0A=
    };=0A=
=0A=
    options =3D Object.clone(options);=0A=
    var onComplete =3D options.onComplete;=0A=
    options.onComplete =3D (function(response, json) {=0A=
      this.updateContent(response.responseText);=0A=
      if (Object.isFunction(onComplete)) onComplete(response, json);=0A=
    }).bind(this);=0A=
=0A=
    $super(url, options);=0A=
  },=0A=
=0A=
  updateContent: function(responseText) {=0A=
    var receiver =3D this.container[this.success() ? 'success' : =
'failure'],=0A=
        options =3D this.options;=0A=
=0A=
    if (!options.evalScripts) responseText =3D =
responseText.stripScripts();=0A=
=0A=
    if (receiver =3D $(receiver)) {=0A=
      if (options.insertion) {=0A=
        if (Object.isString(options.insertion)) {=0A=
          var insertion =3D { }; insertion[options.insertion] =3D =
responseText;=0A=
          receiver.insert(insertion);=0A=
        }=0A=
        else options.insertion(receiver, responseText);=0A=
      }=0A=
      else receiver.update(responseText);=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Ajax.PeriodicalUpdater =3D Class.create(Ajax.Base, {=0A=
  initialize: function($super, container, url, options) {=0A=
    $super(options);=0A=
    this.onComplete =3D this.options.onComplete;=0A=
=0A=
    this.frequency =3D (this.options.frequency || 2);=0A=
    this.decay =3D (this.options.decay || 1);=0A=
=0A=
    this.updater =3D { };=0A=
    this.container =3D container;=0A=
    this.url =3D url;=0A=
=0A=
    this.start();=0A=
  },=0A=
=0A=
  start: function() {=0A=
    this.options.onComplete =3D this.updateComplete.bind(this);=0A=
    this.onTimerEvent();=0A=
  },=0A=
=0A=
  stop: function() {=0A=
    this.updater.options.onComplete =3D undefined;=0A=
    clearTimeout(this.timer);=0A=
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);=0A=
  },=0A=
=0A=
  updateComplete: function(response) {=0A=
    if (this.options.decay) {=0A=
      this.decay =3D (response.responseText =3D=3D this.lastText ?=0A=
        this.decay * this.options.decay : 1);=0A=
=0A=
      this.lastText =3D response.responseText;=0A=
    }=0A=
    this.timer =3D this.onTimerEvent.bind(this).delay(this.decay * =
this.frequency);=0A=
  },=0A=
=0A=
  onTimerEvent: function() {=0A=
    this.updater =3D new Ajax.Updater(this.container, this.url, =
this.options);=0A=
  }=0A=
});=0A=
=0A=
=0A=
=0A=
function $(element) {=0A=
  if (arguments.length > 1) {=0A=
    for (var i =3D 0, elements =3D [], length =3D arguments.length; i < =
length; i++)=0A=
      elements.push($(arguments[i]));=0A=
    return elements;=0A=
  }=0A=
  if (Object.isString(element))=0A=
    element =3D document.getElementById(element);=0A=
  return Element.extend(element);=0A=
}=0A=
=0A=
if (Prototype.BrowserFeatures.XPath) {=0A=
  document._getElementsByXPath =3D function(expression, parentElement) {=0A=
    var results =3D [];=0A=
    var query =3D document.evaluate(expression, $(parentElement) || =
document,=0A=
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
    for (var i =3D 0, length =3D query.snapshotLength; i < length; i++)=0A=
      results.push(Element.extend(query.snapshotItem(i)));=0A=
    return results;=0A=
  };=0A=
}=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!window.Node) var Node =3D { };=0A=
=0A=
if (!Node.ELEMENT_NODE) {=0A=
  Object.extend(Node, {=0A=
    ELEMENT_NODE: 1,=0A=
    ATTRIBUTE_NODE: 2,=0A=
    TEXT_NODE: 3,=0A=
    CDATA_SECTION_NODE: 4,=0A=
    ENTITY_REFERENCE_NODE: 5,=0A=
    ENTITY_NODE: 6,=0A=
    PROCESSING_INSTRUCTION_NODE: 7,=0A=
    COMMENT_NODE: 8,=0A=
    DOCUMENT_NODE: 9,=0A=
    DOCUMENT_TYPE_NODE: 10,=0A=
    DOCUMENT_FRAGMENT_NODE: 11,=0A=
    NOTATION_NODE: 12=0A=
  });=0A=
}=0A=
=0A=
=0A=
(function(global) {=0A=
=0A=
  var SETATTRIBUTE_IGNORES_NAME =3D (function(){=0A=
    var elForm =3D document.createElement("form");=0A=
    var elInput =3D document.createElement("input");=0A=
    var root =3D document.documentElement;=0A=
    elInput.setAttribute("name", "test");=0A=
    elForm.appendChild(elInput);=0A=
    root.appendChild(elForm);=0A=
    var isBuggy =3D elForm.elements=0A=
      ? (typeof elForm.elements.test =3D=3D "undefined")=0A=
      : null;=0A=
    root.removeChild(elForm);=0A=
    elForm =3D elInput =3D null;=0A=
    return isBuggy;=0A=
  })();=0A=
=0A=
  var element =3D global.Element;=0A=
  global.Element =3D function(tagName, attributes) {=0A=
    attributes =3D attributes || { };=0A=
    tagName =3D tagName.toLowerCase();=0A=
    var cache =3D Element.cache;=0A=
    if (SETATTRIBUTE_IGNORES_NAME && attributes.name) {=0A=
      tagName =3D '<' + tagName + ' name=3D"' + attributes.name + '">';=0A=
      delete attributes.name;=0A=
      return Element.writeAttribute(document.createElement(tagName), =
attributes);=0A=
    }=0A=
    if (!cache[tagName]) cache[tagName] =3D =
Element.extend(document.createElement(tagName));=0A=
    return Element.writeAttribute(cache[tagName].cloneNode(false), =
attributes);=0A=
  };=0A=
  Object.extend(global.Element, element || { });=0A=
  if (element) global.Element.prototype =3D element.prototype;=0A=
})(this);=0A=
=0A=
Element.cache =3D { };=0A=
Element.idCounter =3D 1;=0A=
=0A=
Element.Methods =3D {=0A=
  visible: function(element) {=0A=
    return $(element).style.display !=3D 'none';=0A=
  },=0A=
=0A=
  toggle: function(element) {=0A=
    element =3D $(element);=0A=
    Element[Element.visible(element) ? 'hide' : 'show'](element);=0A=
    return element;=0A=
  },=0A=
=0A=
=0A=
  hide: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D 'none';=0A=
    return element;=0A=
  },=0A=
=0A=
  show: function(element) {=0A=
    element =3D $(element);=0A=
    element.style.display =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  remove: function(element) {=0A=
    element =3D $(element);=0A=
    element.parentNode.removeChild(element);=0A=
    return element;=0A=
  },=0A=
=0A=
  update: (function(){=0A=
=0A=
    var SELECT_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      var el =3D document.createElement("select"),=0A=
          isBuggy =3D true;=0A=
      el.innerHTML =3D "<option value=3D\"test\">test</option>";=0A=
      if (el.options && el.options[0]) {=0A=
        isBuggy =3D el.options[0].nodeName.toUpperCase() !=3D=3D =
"OPTION";=0A=
      }=0A=
      el =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    var TABLE_ELEMENT_INNERHTML_BUGGY =3D (function(){=0A=
      try {=0A=
        var el =3D document.createElement("table");=0A=
        if (el && el.tBodies) {=0A=
          el.innerHTML =3D "<tbody><tr><td>test</td></tr></tbody>";=0A=
          var isBuggy =3D typeof el.tBodies[0] =3D=3D "undefined";=0A=
          el =3D null;=0A=
          return isBuggy;=0A=
        }=0A=
      } catch (e) {=0A=
        return true;=0A=
      }=0A=
    })();=0A=
=0A=
    var SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING =3D (function () {=0A=
      var s =3D document.createElement("script"),=0A=
          isBuggy =3D false;=0A=
      try {=0A=
        s.appendChild(document.createTextNode(""));=0A=
        isBuggy =3D !s.firstChild ||=0A=
          s.firstChild && s.firstChild.nodeType !=3D=3D 3;=0A=
      } catch (e) {=0A=
        isBuggy =3D true;=0A=
      }=0A=
      s =3D null;=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    function update(element, content) {=0A=
      element =3D $(element);=0A=
=0A=
      if (content && content.toElement)=0A=
        content =3D content.toElement();=0A=
=0A=
      if (Object.isElement(content))=0A=
        return element.update().insert(content);=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      var tagName =3D element.tagName.toUpperCase();=0A=
=0A=
      if (tagName =3D=3D=3D 'SCRIPT' && =
SCRIPT_ELEMENT_REJECTS_TEXTNODE_APPENDING) {=0A=
        element.text =3D content;=0A=
        return element;=0A=
      }=0A=
=0A=
      if (SELECT_ELEMENT_INNERHTML_BUGGY || =
TABLE_ELEMENT_INNERHTML_BUGGY) {=0A=
        if (tagName in Element._insertionTranslations.tags) {=0A=
          while (element.firstChild) {=0A=
            element.removeChild(element.firstChild);=0A=
          }=0A=
          Element._getContentFromAnonymousElement(tagName, =
content.stripScripts())=0A=
            .each(function(node) {=0A=
              element.appendChild(node)=0A=
            });=0A=
        }=0A=
        else {=0A=
          element.innerHTML =3D content.stripScripts();=0A=
        }=0A=
      }=0A=
      else {=0A=
        element.innerHTML =3D content.stripScripts();=0A=
      }=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
      return element;=0A=
    }=0A=
=0A=
    return update;=0A=
  })(),=0A=
=0A=
  replace: function(element, content) {=0A=
    element =3D $(element);=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    else if (!Object.isElement(content)) {=0A=
      content =3D Object.toHTML(content);=0A=
      var range =3D element.ownerDocument.createRange();=0A=
      range.selectNode(element);=0A=
      content.evalScripts.bind(content).defer();=0A=
      content =3D range.createContextualFragment(content.stripScripts());=0A=
    }=0A=
    element.parentNode.replaceChild(content, element);=0A=
    return element;=0A=
  },=0A=
=0A=
  insert: function(element, insertions) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isString(insertions) || Object.isNumber(insertions) ||=0A=
        Object.isElement(insertions) || (insertions && =
(insertions.toElement || insertions.toHTML)))=0A=
          insertions =3D {bottom:insertions};=0A=
=0A=
    var content, insert, tagName, childNodes;=0A=
=0A=
    for (var position in insertions) {=0A=
      content  =3D insertions[position];=0A=
      position =3D position.toLowerCase();=0A=
      insert =3D Element._insertionTranslations[position];=0A=
=0A=
      if (content && content.toElement) content =3D content.toElement();=0A=
      if (Object.isElement(content)) {=0A=
        insert(element, content);=0A=
        continue;=0A=
      }=0A=
=0A=
      content =3D Object.toHTML(content);=0A=
=0A=
      tagName =3D ((position =3D=3D 'before' || position =3D=3D 'after')=0A=
        ? element.parentNode : element).tagName.toUpperCase();=0A=
=0A=
      childNodes =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
=0A=
      if (position =3D=3D 'top' || position =3D=3D 'after') =
childNodes.reverse();=0A=
      childNodes.each(insert.curry(element));=0A=
=0A=
      content.evalScripts.bind(content).defer();=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  wrap: function(element, wrapper, attributes) {=0A=
    element =3D $(element);=0A=
    if (Object.isElement(wrapper))=0A=
      $(wrapper).writeAttribute(attributes || { });=0A=
    else if (Object.isString(wrapper)) wrapper =3D new Element(wrapper, =
attributes);=0A=
    else wrapper =3D new Element('div', wrapper);=0A=
    if (element.parentNode)=0A=
      element.parentNode.replaceChild(wrapper, element);=0A=
    wrapper.appendChild(element);=0A=
    return wrapper;=0A=
  },=0A=
=0A=
  inspect: function(element) {=0A=
    element =3D $(element);=0A=
    var result =3D '<' + element.tagName.toLowerCase();=0A=
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {=0A=
      var property =3D pair.first(), attribute =3D pair.last();=0A=
      var value =3D (element[property] || '').toString();=0A=
      if (value) result +=3D ' ' + attribute + '=3D' + =
value.inspect(true);=0A=
    });=0A=
    return result + '>';=0A=
  },=0A=
=0A=
  recursivelyCollect: function(element, property) {=0A=
    element =3D $(element);=0A=
    var elements =3D [];=0A=
    while (element =3D element[property])=0A=
      if (element.nodeType =3D=3D 1)=0A=
        elements.push(Element.extend(element));=0A=
    return elements;=0A=
  },=0A=
=0A=
  ancestors: function(element) {=0A=
    return Element.recursivelyCollect(element, 'parentNode');=0A=
  },=0A=
=0A=
  descendants: function(element) {=0A=
    return Element.select(element, "*");=0A=
  },=0A=
=0A=
  firstDescendant: function(element) {=0A=
    element =3D $(element).firstChild;=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    return $(element);=0A=
  },=0A=
=0A=
  immediateDescendants: function(element) {=0A=
    if (!(element =3D $(element).firstChild)) return [];=0A=
    while (element && element.nodeType !=3D 1) element =3D =
element.nextSibling;=0A=
    if (element) return [element].concat($(element).nextSiblings());=0A=
    return [];=0A=
  },=0A=
=0A=
  previousSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'previousSibling');=0A=
  },=0A=
=0A=
  nextSiblings: function(element) {=0A=
    return Element.recursivelyCollect(element, 'nextSibling');=0A=
  },=0A=
=0A=
  siblings: function(element) {=0A=
    element =3D $(element);=0A=
    return Element.previousSiblings(element).reverse()=0A=
      .concat(Element.nextSiblings(element));=0A=
  },=0A=
=0A=
  match: function(element, selector) {=0A=
    if (Object.isString(selector))=0A=
      selector =3D new Selector(selector);=0A=
    return selector.match($(element));=0A=
  },=0A=
=0A=
  up: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return $(element.parentNode);=0A=
    var ancestors =3D Element.ancestors(element);=0A=
    return Object.isNumber(expression) ? ancestors[expression] :=0A=
      Selector.findElement(ancestors, expression, index);=0A=
  },=0A=
=0A=
  down: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
Element.firstDescendant(element);=0A=
    return Object.isNumber(expression) ? =
Element.descendants(element)[expression] :=0A=
      Element.select(element, expression)[index || 0];=0A=
  },=0A=
=0A=
  previous: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.previousElementSibling(element));=0A=
    var previousSiblings =3D Element.previousSiblings(element);=0A=
    return Object.isNumber(expression) ? previousSiblings[expression] :=0A=
      Selector.findElement(previousSiblings, expression, index);=0A=
  },=0A=
=0A=
  next: function(element, expression, index) {=0A=
    element =3D $(element);=0A=
    if (arguments.length =3D=3D 1) return =
$(Selector.handlers.nextElementSibling(element));=0A=
    var nextSiblings =3D Element.nextSiblings(element);=0A=
    return Object.isNumber(expression) ? nextSiblings[expression] :=0A=
      Selector.findElement(nextSiblings, expression, index);=0A=
  },=0A=
=0A=
=0A=
  select: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element, args);=0A=
  },=0A=
=0A=
  adjacent: function(element) {=0A=
    var args =3D Array.prototype.slice.call(arguments, 1);=0A=
    return Selector.findChildElements(element.parentNode, =
args).without(element);=0A=
  },=0A=
=0A=
  identify: function(element) {=0A=
    element =3D $(element);=0A=
    var id =3D Element.readAttribute(element, 'id');=0A=
    if (id) return id;=0A=
    do { id =3D 'anonymous_element_' + Element.idCounter++ } while =
($(id));=0A=
    Element.writeAttribute(element, 'id', id);=0A=
    return id;=0A=
  },=0A=
=0A=
  readAttribute: function(element, name) {=0A=
    element =3D $(element);=0A=
    if (Prototype.Browser.IE) {=0A=
      var t =3D Element._attributeTranslations.read;=0A=
      if (t.values[name]) return t.values[name](element, name);=0A=
      if (t.names[name]) name =3D t.names[name];=0A=
      if (name.include(':')) {=0A=
        return (!element.attributes || !element.attributes[name]) ? null =
:=0A=
         element.attributes[name].value;=0A=
      }=0A=
    }=0A=
    return element.getAttribute(name);=0A=
  },=0A=
=0A=
  writeAttribute: function(element, name, value) {=0A=
    element =3D $(element);=0A=
    var attributes =3D { }, t =3D Element._attributeTranslations.write;=0A=
=0A=
    if (typeof name =3D=3D 'object') attributes =3D name;=0A=
    else attributes[name] =3D Object.isUndefined(value) ? true : value;=0A=
=0A=
    for (var attr in attributes) {=0A=
      name =3D t.names[attr] || attr;=0A=
      value =3D attributes[attr];=0A=
      if (t.values[attr]) name =3D t.values[attr](element, value);=0A=
      if (value =3D=3D=3D false || value =3D=3D=3D null)=0A=
        element.removeAttribute(name);=0A=
      else if (value =3D=3D=3D true)=0A=
        element.setAttribute(name, name);=0A=
      else element.setAttribute(name, value);=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  getHeight: function(element) {=0A=
    return Element.getDimensions(element).height;=0A=
  },=0A=
=0A=
  getWidth: function(element) {=0A=
    return Element.getDimensions(element).width;=0A=
  },=0A=
=0A=
  classNames: function(element) {=0A=
    return new Element.ClassNames(element);=0A=
  },=0A=
=0A=
  hasClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var elementClassName =3D element.className;=0A=
    return (elementClassName.length > 0 && (elementClassName =3D=3D =
className ||=0A=
      new RegExp("(^|\\s)" + className + =
"(\\s|$)").test(elementClassName)));=0A=
  },=0A=
=0A=
  addClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    if (!Element.hasClassName(element, className))=0A=
      element.className +=3D (element.className ? ' ' : '') + className;=0A=
    return element;=0A=
  },=0A=
=0A=
  removeClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    element.className =3D element.className.replace(=0A=
      new RegExp("(^|\\s+)" + className + "(\\s+|$)"), ' ').strip();=0A=
    return element;=0A=
  },=0A=
=0A=
  toggleClassName: function(element, className) {=0A=
    if (!(element =3D $(element))) return;=0A=
    return Element[Element.hasClassName(element, className) ?=0A=
      'removeClassName' : 'addClassName'](element, className);=0A=
  },=0A=
=0A=
  cleanWhitespace: function(element) {=0A=
    element =3D $(element);=0A=
    var node =3D element.firstChild;=0A=
    while (node) {=0A=
      var nextNode =3D node.nextSibling;=0A=
      if (node.nodeType =3D=3D 3 && !/\S/.test(node.nodeValue))=0A=
        element.removeChild(node);=0A=
      node =3D nextNode;=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  empty: function(element) {=0A=
    return $(element).innerHTML.blank();=0A=
  },=0A=
=0A=
  descendantOf: function(element, ancestor) {=0A=
    element =3D $(element), ancestor =3D $(ancestor);=0A=
=0A=
    if (element.compareDocumentPosition)=0A=
      return (element.compareDocumentPosition(ancestor) & 8) =3D=3D=3D 8;=0A=
=0A=
    if (ancestor.contains)=0A=
      return ancestor.contains(element) && ancestor !=3D=3D element;=0A=
=0A=
    while (element =3D element.parentNode)=0A=
      if (element =3D=3D ancestor) return true;=0A=
=0A=
    return false;=0A=
  },=0A=
=0A=
  scrollTo: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.cumulativeOffset(element);=0A=
    window.scrollTo(pos[0], pos[1]);=0A=
    return element;=0A=
  },=0A=
=0A=
  getStyle: function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D style =3D=3D 'float' ? 'cssFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value || value =3D=3D 'auto') {=0A=
      var css =3D document.defaultView.getComputedStyle(element, null);=0A=
      value =3D css ? css[style] : null;=0A=
    }=0A=
    if (style =3D=3D 'opacity') return value ? parseFloat(value) : 1.0;=0A=
    return value =3D=3D 'auto' ? null : value;=0A=
  },=0A=
=0A=
  getOpacity: function(element) {=0A=
    return $(element).getStyle('opacity');=0A=
  },=0A=
=0A=
  setStyle: function(element, styles) {=0A=
    element =3D $(element);=0A=
    var elementStyle =3D element.style, match;=0A=
    if (Object.isString(styles)) {=0A=
      element.style.cssText +=3D ';' + styles;=0A=
      return styles.include('opacity') ?=0A=
        element.setOpacity(styles.match(/opacity:\s*(\d?\.?\d*)/)[1]) : =
element;=0A=
    }=0A=
    for (var property in styles)=0A=
      if (property =3D=3D 'opacity') =
element.setOpacity(styles[property]);=0A=
      else=0A=
        elementStyle[(property =3D=3D 'float' || property =3D=3D =
'cssFloat') ?=0A=
          (Object.isUndefined(elementStyle.styleFloat) ? 'cssFloat' : =
'styleFloat') :=0A=
            property] =3D styles[property];=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  setOpacity: function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  },=0A=
=0A=
  getDimensions: function(element) {=0A=
    element =3D $(element);=0A=
    var display =3D Element.getStyle(element, 'display');=0A=
    if (display !=3D 'none' && display !=3D null) // Safari bug=0A=
      return {width: element.offsetWidth, height: element.offsetHeight};=0A=
=0A=
    var els =3D element.style;=0A=
    var originalVisibility =3D els.visibility;=0A=
    var originalPosition =3D els.position;=0A=
    var originalDisplay =3D els.display;=0A=
    els.visibility =3D 'hidden';=0A=
    if (originalPosition !=3D 'fixed') // Switching fixed to absolute =
causes issues in Safari=0A=
      els.position =3D 'absolute';=0A=
    els.display =3D 'block';=0A=
    var originalWidth =3D element.clientWidth;=0A=
    var originalHeight =3D element.clientHeight;=0A=
    els.display =3D originalDisplay;=0A=
    els.position =3D originalPosition;=0A=
    els.visibility =3D originalVisibility;=0A=
    return {width: originalWidth, height: originalHeight};=0A=
  },=0A=
=0A=
  makePositioned: function(element) {=0A=
    element =3D $(element);=0A=
    var pos =3D Element.getStyle(element, 'position');=0A=
    if (pos =3D=3D 'static' || !pos) {=0A=
      element._madePositioned =3D true;=0A=
      element.style.position =3D 'relative';=0A=
      if (Prototype.Browser.Opera) {=0A=
        element.style.top =3D 0;=0A=
        element.style.left =3D 0;=0A=
      }=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  undoPositioned: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._madePositioned) {=0A=
      element._madePositioned =3D undefined;=0A=
      element.style.position =3D=0A=
        element.style.top =3D=0A=
        element.style.left =3D=0A=
        element.style.bottom =3D=0A=
        element.style.right =3D '';=0A=
    }=0A=
    return element;=0A=
  },=0A=
=0A=
  makeClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (element._overflow) return element;=0A=
    element._overflow =3D Element.getStyle(element, 'overflow') || =
'auto';=0A=
    if (element._overflow !=3D=3D 'hidden')=0A=
      element.style.overflow =3D 'hidden';=0A=
    return element;=0A=
  },=0A=
=0A=
  undoClipping: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element._overflow) return element;=0A=
    element.style.overflow =3D element._overflow =3D=3D 'auto' ? '' : =
element._overflow;=0A=
    element._overflow =3D null;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  positionedOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      element =3D element.offsetParent;=0A=
      if (element) {=0A=
        if (element.tagName.toUpperCase() =3D=3D 'BODY') break;=0A=
        var p =3D Element.getStyle(element, 'position');=0A=
        if (p !=3D=3D 'static') break;=0A=
      }=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  absolutize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') return =
element;=0A=
=0A=
    var offsets =3D Element.positionedOffset(element);=0A=
    var top     =3D offsets[1];=0A=
    var left    =3D offsets[0];=0A=
    var width   =3D element.clientWidth;=0A=
    var height  =3D element.clientHeight;=0A=
=0A=
    element._originalLeft   =3D left - parseFloat(element.style.left  || =
0);=0A=
    element._originalTop    =3D top  - parseFloat(element.style.top || =
0);=0A=
    element._originalWidth  =3D element.style.width;=0A=
    element._originalHeight =3D element.style.height;=0A=
=0A=
    element.style.position =3D 'absolute';=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.width  =3D width + 'px';=0A=
    element.style.height =3D height + 'px';=0A=
    return element;=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    element =3D $(element);=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'relative') return =
element;=0A=
=0A=
    element.style.position =3D 'relative';=0A=
    var top  =3D parseFloat(element.style.top  || 0) - =
(element._originalTop || 0);=0A=
    var left =3D parseFloat(element.style.left || 0) - =
(element._originalLeft || 0);=0A=
=0A=
    element.style.top    =3D top + 'px';=0A=
    element.style.left   =3D left + 'px';=0A=
    element.style.height =3D element._originalHeight;=0A=
    element.style.width  =3D element._originalWidth;=0A=
    return element;=0A=
  },=0A=
=0A=
  cumulativeScrollOffset: function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.scrollTop  || 0;=0A=
      valueL +=3D element.scrollLeft || 0;=0A=
      element =3D element.parentNode;=0A=
    } while (element);=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  getOffsetParent: function(element) {=0A=
    if (element.offsetParent) return $(element.offsetParent);=0A=
    if (element =3D=3D document.body) return $(element);=0A=
=0A=
    while ((element =3D element.parentNode) && element !=3D =
document.body)=0A=
      if (Element.getStyle(element, 'position') !=3D 'static')=0A=
        return $(element);=0A=
=0A=
    return $(document.body);=0A=
  },=0A=
=0A=
  viewportOffset: function(forElement) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
=0A=
    var element =3D forElement;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
=0A=
      if (element.offsetParent =3D=3D document.body &&=0A=
        Element.getStyle(element, 'position') =3D=3D 'absolute') break;=0A=
=0A=
    } while (element =3D element.offsetParent);=0A=
=0A=
    element =3D forElement;=0A=
    do {=0A=
      if (!Prototype.Browser.Opera || (element.tagName && =
(element.tagName.toUpperCase() =3D=3D 'BODY'))) {=0A=
        valueT -=3D element.scrollTop  || 0;=0A=
        valueL -=3D element.scrollLeft || 0;=0A=
      }=0A=
    } while (element =3D element.parentNode);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  },=0A=
=0A=
  clonePosition: function(element, source) {=0A=
    var options =3D Object.extend({=0A=
      setLeft:    true,=0A=
      setTop:     true,=0A=
      setWidth:   true,=0A=
      setHeight:  true,=0A=
      offsetTop:  0,=0A=
      offsetLeft: 0=0A=
    }, arguments[2] || { });=0A=
=0A=
    source =3D $(source);=0A=
    var p =3D Element.viewportOffset(source);=0A=
=0A=
    element =3D $(element);=0A=
    var delta =3D [0, 0];=0A=
    var parent =3D null;=0A=
    if (Element.getStyle(element, 'position') =3D=3D 'absolute') {=0A=
      parent =3D Element.getOffsetParent(element);=0A=
      delta =3D Element.viewportOffset(parent);=0A=
    }=0A=
=0A=
    if (parent =3D=3D document.body) {=0A=
      delta[0] -=3D document.body.offsetLeft;=0A=
      delta[1] -=3D document.body.offsetTop;=0A=
    }=0A=
=0A=
    if (options.setLeft)   element.style.left  =3D (p[0] - delta[0] + =
options.offsetLeft) + 'px';=0A=
    if (options.setTop)    element.style.top   =3D (p[1] - delta[1] + =
options.offsetTop) + 'px';=0A=
    if (options.setWidth)  element.style.width =3D source.offsetWidth + =
'px';=0A=
    if (options.setHeight) element.style.height =3D source.offsetHeight =
+ 'px';=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.Methods, {=0A=
  getElementsBySelector: Element.Methods.select,=0A=
=0A=
  childElements: Element.Methods.immediateDescendants=0A=
});=0A=
=0A=
Element._attributeTranslations =3D {=0A=
  write: {=0A=
    names: {=0A=
      className: 'class',=0A=
      htmlFor:   'for'=0A=
    },=0A=
    values: { }=0A=
  }=0A=
};=0A=
=0A=
if (Prototype.Browser.Opera) {=0A=
  Element.Methods.getStyle =3D Element.Methods.getStyle.wrap(=0A=
    function(proceed, element, style) {=0A=
      switch (style) {=0A=
        case 'left': case 'top': case 'right': case 'bottom':=0A=
          if (proceed(element, 'position') =3D=3D=3D 'static') return =
null;=0A=
        case 'height': case 'width':=0A=
          if (!Element.visible(element)) return null;=0A=
=0A=
          var dim =3D parseInt(proceed(element, style), 10);=0A=
=0A=
          if (dim !=3D=3D element['offset' + style.capitalize()])=0A=
            return dim + 'px';=0A=
=0A=
          var properties;=0A=
          if (style =3D=3D=3D 'height') {=0A=
            properties =3D ['border-top-width', 'padding-top',=0A=
             'padding-bottom', 'border-bottom-width'];=0A=
          }=0A=
          else {=0A=
            properties =3D ['border-left-width', 'padding-left',=0A=
             'padding-right', 'border-right-width'];=0A=
          }=0A=
          return properties.inject(dim, function(memo, property) {=0A=
            var val =3D proceed(element, property);=0A=
            return val =3D=3D=3D null ? memo : memo - parseInt(val, 10);=0A=
          }) + 'px';=0A=
        default: return proceed(element, style);=0A=
      }=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.readAttribute =3D Element.Methods.readAttribute.wrap(=0A=
    function(proceed, element, attribute) {=0A=
      if (attribute =3D=3D=3D 'title') return element.title;=0A=
      return proceed(element, attribute);=0A=
    }=0A=
  );=0A=
}=0A=
=0A=
else if (Prototype.Browser.IE) {=0A=
  Element.Methods.getOffsetParent =3D =
Element.Methods.getOffsetParent.wrap(=0A=
    function(proceed, element) {=0A=
      element =3D $(element);=0A=
      try { element.offsetParent }=0A=
      catch(e) { return $(document.body) }=0A=
      var position =3D element.getStyle('position');=0A=
      if (position !=3D=3D 'static') return proceed(element);=0A=
      element.setStyle({ position: 'relative' });=0A=
      var value =3D proceed(element);=0A=
      element.setStyle({ position: position });=0A=
      return value;=0A=
    }=0A=
  );=0A=
=0A=
  $w('positionedOffset viewportOffset').each(function(method) {=0A=
    Element.Methods[method] =3D Element.Methods[method].wrap(=0A=
      function(proceed, element) {=0A=
        element =3D $(element);=0A=
        try { element.offsetParent }=0A=
        catch(e) { return Element._returnOffset(0,0) }=0A=
        var position =3D element.getStyle('position');=0A=
        if (position !=3D=3D 'static') return proceed(element);=0A=
        var offsetParent =3D element.getOffsetParent();=0A=
        if (offsetParent && offsetParent.getStyle('position') =3D=3D=3D =
'fixed')=0A=
          offsetParent.setStyle({ zoom: 1 });=0A=
        element.setStyle({ position: 'relative' });=0A=
        var value =3D proceed(element);=0A=
        element.setStyle({ position: position });=0A=
        return value;=0A=
      }=0A=
    );=0A=
  });=0A=
=0A=
  Element.Methods.cumulativeOffset =3D =
Element.Methods.cumulativeOffset.wrap(=0A=
    function(proceed, element) {=0A=
      try { element.offsetParent }=0A=
      catch(e) { return Element._returnOffset(0,0) }=0A=
      return proceed(element);=0A=
    }=0A=
  );=0A=
=0A=
  Element.Methods.getStyle =3D function(element, style) {=0A=
    element =3D $(element);=0A=
    style =3D (style =3D=3D 'float' || style =3D=3D 'cssFloat') ? =
'styleFloat' : style.camelize();=0A=
    var value =3D element.style[style];=0A=
    if (!value && element.currentStyle) value =3D =
element.currentStyle[style];=0A=
=0A=
    if (style =3D=3D 'opacity') {=0A=
      if (value =3D (element.getStyle('filter') || =
'').match(/alpha\(opacity=3D(.*)\)/))=0A=
        if (value[1]) return parseFloat(value[1]) / 100;=0A=
      return 1.0;=0A=
    }=0A=
=0A=
    if (value =3D=3D 'auto') {=0A=
      if ((style =3D=3D 'width' || style =3D=3D 'height') && =
(element.getStyle('display') !=3D 'none'))=0A=
        return element['offset' + style.capitalize()] + 'px';=0A=
      return null;=0A=
    }=0A=
    return value;=0A=
  };=0A=
=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    function stripAlpha(filter){=0A=
      return filter.replace(/alpha\([^\)]*\)/gi,'');=0A=
    }=0A=
    element =3D $(element);=0A=
    var currentStyle =3D element.currentStyle;=0A=
    if ((currentStyle && !currentStyle.hasLayout) ||=0A=
      (!currentStyle && element.style.zoom =3D=3D 'normal'))=0A=
        element.style.zoom =3D 1;=0A=
=0A=
    var filter =3D element.getStyle('filter'), style =3D element.style;=0A=
    if (value =3D=3D 1 || value =3D=3D=3D '') {=0A=
      (filter =3D stripAlpha(filter)) ?=0A=
        style.filter =3D filter : style.removeAttribute('filter');=0A=
      return element;=0A=
    } else if (value < 0.00001) value =3D 0;=0A=
    style.filter =3D stripAlpha(filter) +=0A=
      'alpha(opacity=3D' + (value * 100) + ')';=0A=
    return element;=0A=
  };=0A=
=0A=
  Element._attributeTranslations =3D (function(){=0A=
=0A=
    var classProp =3D 'className';=0A=
    var forProp =3D 'for';=0A=
=0A=
    var el =3D document.createElement('div');=0A=
=0A=
    el.setAttribute(classProp, 'x');=0A=
=0A=
    if (el.className !=3D=3D 'x') {=0A=
      el.setAttribute('class', 'x');=0A=
      if (el.className =3D=3D=3D 'x') {=0A=
        classProp =3D 'class';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    el =3D document.createElement('label');=0A=
    el.setAttribute(forProp, 'x');=0A=
    if (el.htmlFor !=3D=3D 'x') {=0A=
      el.setAttribute('htmlFor', 'x');=0A=
      if (el.htmlFor =3D=3D=3D 'x') {=0A=
        forProp =3D 'htmlFor';=0A=
      }=0A=
    }=0A=
    el =3D null;=0A=
=0A=
    return {=0A=
      read: {=0A=
        names: {=0A=
          'class':      classProp,=0A=
          'className':  classProp,=0A=
          'for':        forProp,=0A=
          'htmlFor':    forProp=0A=
        },=0A=
        values: {=0A=
          _getAttr: function(element, attribute) {=0A=
            return element.getAttribute(attribute);=0A=
          },=0A=
          _getAttr2: function(element, attribute) {=0A=
            return element.getAttribute(attribute, 2);=0A=
          },=0A=
          _getAttrNode: function(element, attribute) {=0A=
            var node =3D element.getAttributeNode(attribute);=0A=
            return node ? node.value : "";=0A=
          },=0A=
          _getEv: (function(){=0A=
=0A=
            var el =3D document.createElement('div');=0A=
            el.onclick =3D Prototype.emptyFunction;=0A=
            var value =3D el.getAttribute('onclick');=0A=
            var f;=0A=
=0A=
            if (String(value).indexOf('{') > -1) {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                attribute =3D attribute.toString();=0A=
                attribute =3D attribute.split('{')[1];=0A=
                attribute =3D attribute.split('}')[0];=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            else if (value =3D=3D=3D '') {=0A=
              f =3D function(element, attribute) {=0A=
                attribute =3D element.getAttribute(attribute);=0A=
                if (!attribute) return null;=0A=
                return attribute.strip();=0A=
              };=0A=
            }=0A=
            el =3D null;=0A=
            return f;=0A=
          })(),=0A=
          _flag: function(element, attribute) {=0A=
            return $(element).hasAttribute(attribute) ? attribute : null;=0A=
          },=0A=
          style: function(element) {=0A=
            return element.style.cssText.toLowerCase();=0A=
          },=0A=
          title: function(element) {=0A=
            return element.title;=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
  })();=0A=
=0A=
  Element._attributeTranslations.write =3D {=0A=
    names: Object.extend({=0A=
      cellpadding: 'cellPadding',=0A=
      cellspacing: 'cellSpacing'=0A=
    }, Element._attributeTranslations.read.names),=0A=
    values: {=0A=
      checked: function(element, value) {=0A=
        element.checked =3D !!value;=0A=
      },=0A=
=0A=
      style: function(element, value) {=0A=
        element.style.cssText =3D value ? value : '';=0A=
      }=0A=
    }=0A=
  };=0A=
=0A=
  Element._attributeTranslations.has =3D {};=0A=
=0A=
  $w('colSpan rowSpan vAlign dateTime accessKey tabIndex ' +=0A=
      'encType maxLength readOnly longDesc =
frameBorder').each(function(attr) {=0A=
    Element._attributeTranslations.write.names[attr.toLowerCase()] =3D =
attr;=0A=
    Element._attributeTranslations.has[attr.toLowerCase()] =3D attr;=0A=
  });=0A=
=0A=
  (function(v) {=0A=
    Object.extend(v, {=0A=
      href:        v._getAttr2,=0A=
      src:         v._getAttr2,=0A=
      type:        v._getAttr,=0A=
      action:      v._getAttrNode,=0A=
      disabled:    v._flag,=0A=
      checked:     v._flag,=0A=
      readonly:    v._flag,=0A=
      multiple:    v._flag,=0A=
      onload:      v._getEv,=0A=
      onunload:    v._getEv,=0A=
      onclick:     v._getEv,=0A=
      ondblclick:  v._getEv,=0A=
      onmousedown: v._getEv,=0A=
      onmouseup:   v._getEv,=0A=
      onmouseover: v._getEv,=0A=
      onmousemove: v._getEv,=0A=
      onmouseout:  v._getEv,=0A=
      onfocus:     v._getEv,=0A=
      onblur:      v._getEv,=0A=
      onkeypress:  v._getEv,=0A=
      onkeydown:   v._getEv,=0A=
      onkeyup:     v._getEv,=0A=
      onsubmit:    v._getEv,=0A=
      onreset:     v._getEv,=0A=
      onselect:    v._getEv,=0A=
      onchange:    v._getEv=0A=
    });=0A=
  })(Element._attributeTranslations.read.values);=0A=
=0A=
  if (Prototype.BrowserFeatures.ElementExtensions) {=0A=
    (function() {=0A=
      function _descendants(element) {=0A=
        var nodes =3D element.getElementsByTagName('*'), results =3D [];=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName !=3D=3D "!") // Filter out comment nodes.=0A=
            results.push(node);=0A=
        return results;=0A=
      }=0A=
=0A=
      Element.Methods.down =3D function(element, expression, index) {=0A=
        element =3D $(element);=0A=
        if (arguments.length =3D=3D 1) return element.firstDescendant();=0A=
        return Object.isNumber(expression) ? =
_descendants(element)[expression] :=0A=
          Element.select(element, expression)[index || 0];=0A=
      }=0A=
    })();=0A=
  }=0A=
=0A=
}=0A=
=0A=
else if (Prototype.Browser.Gecko && =
/rv:1\.8\.0/.test(navigator.userAgent)) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1) ? 0.999999 :=0A=
      (value =3D=3D=3D '') ? '' : (value < 0.00001) ? 0 : value;=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
else if (Prototype.Browser.WebKit) {=0A=
  Element.Methods.setOpacity =3D function(element, value) {=0A=
    element =3D $(element);=0A=
    element.style.opacity =3D (value =3D=3D 1 || value =3D=3D=3D '') ? =
'' :=0A=
      (value < 0.00001) ? 0 : value;=0A=
=0A=
    if (value =3D=3D 1)=0A=
      if(element.tagName.toUpperCase() =3D=3D 'IMG' && element.width) {=0A=
        element.width++; element.width--;=0A=
      } else try {=0A=
        var n =3D document.createTextNode(' ');=0A=
        element.appendChild(n);=0A=
        element.removeChild(n);=0A=
      } catch (e) { }=0A=
=0A=
    return element;=0A=
  };=0A=
=0A=
  Element.Methods.cumulativeOffset =3D function(element) {=0A=
    var valueT =3D 0, valueL =3D 0;=0A=
    do {=0A=
      valueT +=3D element.offsetTop  || 0;=0A=
      valueL +=3D element.offsetLeft || 0;=0A=
      if (element.offsetParent =3D=3D document.body)=0A=
        if (Element.getStyle(element, 'position') =3D=3D 'absolute') =
break;=0A=
=0A=
      element =3D element.offsetParent;=0A=
    } while (element);=0A=
=0A=
    return Element._returnOffset(valueL, valueT);=0A=
  };=0A=
}=0A=
=0A=
if ('outerHTML' in document.documentElement) {=0A=
  Element.Methods.replace =3D function(element, content) {=0A=
    element =3D $(element);=0A=
=0A=
    if (content && content.toElement) content =3D content.toElement();=0A=
    if (Object.isElement(content)) {=0A=
      element.parentNode.replaceChild(content, element);=0A=
      return element;=0A=
    }=0A=
=0A=
    content =3D Object.toHTML(content);=0A=
    var parent =3D element.parentNode, tagName =3D =
parent.tagName.toUpperCase();=0A=
=0A=
    if (Element._insertionTranslations.tags[tagName]) {=0A=
      var nextSibling =3D element.next();=0A=
      var fragments =3D Element._getContentFromAnonymousElement(tagName, =
content.stripScripts());=0A=
      parent.removeChild(element);=0A=
      if (nextSibling)=0A=
        fragments.each(function(node) { parent.insertBefore(node, =
nextSibling) });=0A=
      else=0A=
        fragments.each(function(node) { parent.appendChild(node) });=0A=
    }=0A=
    else element.outerHTML =3D content.stripScripts();=0A=
=0A=
    content.evalScripts.bind(content).defer();=0A=
    return element;=0A=
  };=0A=
}=0A=
=0A=
Element._returnOffset =3D function(l, t) {=0A=
  var result =3D [l, t];=0A=
  result.left =3D l;=0A=
  result.top =3D t;=0A=
  return result;=0A=
};=0A=
=0A=
Element._getContentFromAnonymousElement =3D function(tagName, html) {=0A=
  var div =3D new Element('div'), t =3D =
Element._insertionTranslations.tags[tagName];=0A=
  if (t) {=0A=
    div.innerHTML =3D t[0] + html + t[1];=0A=
    t[2].times(function() { div =3D div.firstChild });=0A=
  } else div.innerHTML =3D html;=0A=
  return $A(div.childNodes);=0A=
};=0A=
=0A=
Element._insertionTranslations =3D {=0A=
  before: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element);=0A=
  },=0A=
  top: function(element, node) {=0A=
    element.insertBefore(node, element.firstChild);=0A=
  },=0A=
  bottom: function(element, node) {=0A=
    element.appendChild(node);=0A=
  },=0A=
  after: function(element, node) {=0A=
    element.parentNode.insertBefore(node, element.nextSibling);=0A=
  },=0A=
  tags: {=0A=
    TABLE:  ['<table>',                '</table>',                   1],=0A=
    TBODY:  ['<table><tbody>',         '</tbody></table>',           2],=0A=
    TR:     ['<table><tbody><tr>',     '</tr></tbody></table>',      3],=0A=
    TD:     ['<table><tbody><tr><td>', '</td></tr></tbody></table>', 4],=0A=
    SELECT: ['<select>',               '</select>',                  1]=0A=
  }=0A=
};=0A=
=0A=
(function() {=0A=
  var tags =3D Element._insertionTranslations.tags;=0A=
  Object.extend(tags, {=0A=
    THEAD: tags.TBODY,=0A=
    TFOOT: tags.TBODY,=0A=
    TH:    tags.TD=0A=
  });=0A=
})();=0A=
=0A=
Element.Methods.Simulated =3D {=0A=
  hasAttribute: function(element, attribute) {=0A=
    attribute =3D Element._attributeTranslations.has[attribute] || =
attribute;=0A=
    var node =3D $(element).getAttributeNode(attribute);=0A=
    return !!(node && node.specified);=0A=
  }=0A=
};=0A=
=0A=
Element.Methods.ByTag =3D { };=0A=
=0A=
Object.extend(Element, Element.Methods);=0A=
=0A=
(function(div) {=0A=
=0A=
  if (!Prototype.BrowserFeatures.ElementExtensions && div['__proto__']) {=0A=
    window.HTMLElement =3D { };=0A=
    window.HTMLElement.prototype =3D div['__proto__'];=0A=
    Prototype.BrowserFeatures.ElementExtensions =3D true;=0A=
  }=0A=
=0A=
  div =3D null;=0A=
=0A=
})(document.createElement('div'))=0A=
=0A=
Element.extend =3D (function() {=0A=
=0A=
  function checkDeficiency(tagName) {=0A=
    if (typeof window.Element !=3D 'undefined') {=0A=
      var proto =3D window.Element.prototype;=0A=
      if (proto) {=0A=
        var id =3D '_' + (Math.random()+'').slice(2);=0A=
        var el =3D document.createElement(tagName);=0A=
        proto[id] =3D 'x';=0A=
        var isBuggy =3D (el[id] !=3D=3D 'x');=0A=
        delete proto[id];=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      }=0A=
    }=0A=
    return false;=0A=
  }=0A=
=0A=
  function extendElementWith(element, methods) {=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (Object.isFunction(value) && !(property in element))=0A=
        element[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  var HTMLOBJECTELEMENT_PROTOTYPE_BUGGY =3D checkDeficiency('object');=0A=
=0A=
  if (Prototype.BrowserFeatures.SpecificElementExtensions) {=0A=
    if (HTMLOBJECTELEMENT_PROTOTYPE_BUGGY) {=0A=
      return function(element) {=0A=
        if (element && typeof element._extendedByPrototype =3D=3D =
'undefined') {=0A=
          var t =3D element.tagName;=0A=
          if (t && (/^(?:object|applet|embed)$/i.test(t))) {=0A=
            extendElementWith(element, Element.Methods);=0A=
            extendElementWith(element, Element.Methods.Simulated);=0A=
            extendElementWith(element, =
Element.Methods.ByTag[t.toUpperCase()]);=0A=
          }=0A=
        }=0A=
        return element;=0A=
      }=0A=
    }=0A=
    return Prototype.K;=0A=
  }=0A=
=0A=
  var Methods =3D { }, ByTag =3D Element.Methods.ByTag;=0A=
=0A=
  var extend =3D Object.extend(function(element) {=0A=
    if (!element || typeof element._extendedByPrototype !=3D 'undefined' =
||=0A=
        element.nodeType !=3D 1 || element =3D=3D window) return element;=0A=
=0A=
    var methods =3D Object.clone(Methods),=0A=
        tagName =3D element.tagName.toUpperCase();=0A=
=0A=
    if (ByTag[tagName]) Object.extend(methods, ByTag[tagName]);=0A=
=0A=
    extendElementWith(element, methods);=0A=
=0A=
    element._extendedByPrototype =3D Prototype.emptyFunction;=0A=
    return element;=0A=
=0A=
  }, {=0A=
    refresh: function() {=0A=
      if (!Prototype.BrowserFeatures.ElementExtensions) {=0A=
        Object.extend(Methods, Element.Methods);=0A=
        Object.extend(Methods, Element.Methods.Simulated);=0A=
      }=0A=
    }=0A=
  });=0A=
=0A=
  extend.refresh();=0A=
  return extend;=0A=
})();=0A=
=0A=
Element.hasAttribute =3D function(element, attribute) {=0A=
  if (element.hasAttribute) return element.hasAttribute(attribute);=0A=
  return Element.Methods.Simulated.hasAttribute(element, attribute);=0A=
};=0A=
=0A=
Element.addMethods =3D function(methods) {=0A=
  var F =3D Prototype.BrowserFeatures, T =3D Element.Methods.ByTag;=0A=
=0A=
  if (!methods) {=0A=
    Object.extend(Form, Form.Methods);=0A=
    Object.extend(Form.Element, Form.Element.Methods);=0A=
    Object.extend(Element.Methods.ByTag, {=0A=
      "FORM":     Object.clone(Form.Methods),=0A=
      "INPUT":    Object.clone(Form.Element.Methods),=0A=
      "SELECT":   Object.clone(Form.Element.Methods),=0A=
      "TEXTAREA": Object.clone(Form.Element.Methods)=0A=
    });=0A=
  }=0A=
=0A=
  if (arguments.length =3D=3D 2) {=0A=
    var tagName =3D methods;=0A=
    methods =3D arguments[1];=0A=
  }=0A=
=0A=
  if (!tagName) Object.extend(Element.Methods, methods || { });=0A=
  else {=0A=
    if (Object.isArray(tagName)) tagName.each(extend);=0A=
    else extend(tagName);=0A=
  }=0A=
=0A=
  function extend(tagName) {=0A=
    tagName =3D tagName.toUpperCase();=0A=
    if (!Element.Methods.ByTag[tagName])=0A=
      Element.Methods.ByTag[tagName] =3D { };=0A=
    Object.extend(Element.Methods.ByTag[tagName], methods);=0A=
  }=0A=
=0A=
  function copy(methods, destination, onlyIfAbsent) {=0A=
    onlyIfAbsent =3D onlyIfAbsent || false;=0A=
    for (var property in methods) {=0A=
      var value =3D methods[property];=0A=
      if (!Object.isFunction(value)) continue;=0A=
      if (!onlyIfAbsent || !(property in destination))=0A=
        destination[property] =3D value.methodize();=0A=
    }=0A=
  }=0A=
=0A=
  function findDOMClass(tagName) {=0A=
    var klass;=0A=
    var trans =3D {=0A=
      "OPTGROUP": "OptGroup", "TEXTAREA": "TextArea", "P": "Paragraph",=0A=
      "FIELDSET": "FieldSet", "UL": "UList", "OL": "OList", "DL": =
"DList",=0A=
      "DIR": "Directory", "H1": "Heading", "H2": "Heading", "H3": =
"Heading",=0A=
      "H4": "Heading", "H5": "Heading", "H6": "Heading", "Q": "Quote",=0A=
      "INS": "Mod", "DEL": "Mod", "A": "Anchor", "IMG": "Image", =
"CAPTION":=0A=
      "TableCaption", "COL": "TableCol", "COLGROUP": "TableCol", "THEAD":=0A=
      "TableSection", "TFOOT": "TableSection", "TBODY": "TableSection", =
"TR":=0A=
      "TableRow", "TH": "TableCell", "TD": "TableCell", "FRAMESET":=0A=
      "FrameSet", "IFRAME": "IFrame"=0A=
    };=0A=
    if (trans[tagName]) klass =3D 'HTML' + trans[tagName] + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
    klass =3D 'HTML' + tagName.capitalize() + 'Element';=0A=
    if (window[klass]) return window[klass];=0A=
=0A=
    var element =3D document.createElement(tagName);=0A=
    var proto =3D element['__proto__'] || element.constructor.prototype;=0A=
    element =3D null;=0A=
    return proto;=0A=
  }=0A=
=0A=
  var elementPrototype =3D window.HTMLElement ? HTMLElement.prototype :=0A=
   Element.prototype;=0A=
=0A=
  if (F.ElementExtensions) {=0A=
    copy(Element.Methods, elementPrototype);=0A=
    copy(Element.Methods.Simulated, elementPrototype, true);=0A=
  }=0A=
=0A=
  if (F.SpecificElementExtensions) {=0A=
    for (var tag in Element.Methods.ByTag) {=0A=
      var klass =3D findDOMClass(tag);=0A=
      if (Object.isUndefined(klass)) continue;=0A=
      copy(T[tag], klass.prototype);=0A=
    }=0A=
  }=0A=
=0A=
  Object.extend(Element, Element.Methods);=0A=
  delete Element.ByTag;=0A=
=0A=
  if (Element.extend.refresh) Element.extend.refresh();=0A=
  Element.cache =3D { };=0A=
};=0A=
=0A=
=0A=
document.viewport =3D {=0A=
=0A=
  getDimensions: function() {=0A=
    return { width: this.getWidth(), height: this.getHeight() };=0A=
  },=0A=
=0A=
  getScrollOffsets: function() {=0A=
    return Element._returnOffset(=0A=
      window.pageXOffset || document.documentElement.scrollLeft || =
document.body.scrollLeft,=0A=
      window.pageYOffset || document.documentElement.scrollTop  || =
document.body.scrollTop);=0A=
  }=0A=
};=0A=
=0A=
(function(viewport) {=0A=
  var B =3D Prototype.Browser, doc =3D document, element, property =3D =
{};=0A=
=0A=
  function getRootElement() {=0A=
    if (B.WebKit && !doc.evaluate)=0A=
      return document;=0A=
=0A=
    if (B.Opera && window.parseFloat(window.opera.version()) < 9.5)=0A=
      return document.body;=0A=
=0A=
    return document.documentElement;=0A=
  }=0A=
=0A=
  function define(D) {=0A=
    if (!element) element =3D getRootElement();=0A=
=0A=
    property[D] =3D 'client' + D;=0A=
=0A=
    viewport['get' + D] =3D function() { return element[property[D]] };=0A=
    return viewport['get' + D]();=0A=
  }=0A=
=0A=
  viewport.getWidth  =3D define.curry('Width');=0A=
=0A=
  viewport.getHeight =3D define.curry('Height');=0A=
})(document.viewport);=0A=
=0A=
=0A=
Element.Storage =3D {=0A=
  UID: 1=0A=
};=0A=
=0A=
Element.addMethods({=0A=
  getStorage: function(element) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    var uid;=0A=
    if (element =3D=3D=3D window) {=0A=
      uid =3D 0;=0A=
    } else {=0A=
      if (typeof element._prototypeUID =3D=3D=3D "undefined")=0A=
        element._prototypeUID =3D [Element.Storage.UID++];=0A=
      uid =3D element._prototypeUID[0];=0A=
    }=0A=
=0A=
    if (!Element.Storage[uid])=0A=
      Element.Storage[uid] =3D $H();=0A=
=0A=
    return Element.Storage[uid];=0A=
  },=0A=
=0A=
  store: function(element, key, value) {=0A=
    if (!(element =3D $(element))) return;=0A=
=0A=
    if (arguments.length =3D=3D=3D 2) {=0A=
      Element.getStorage(element).update(key);=0A=
    } else {=0A=
      Element.getStorage(element).set(key, value);=0A=
    }=0A=
=0A=
    return element;=0A=
  },=0A=
=0A=
  retrieve: function(element, key, defaultValue) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var hash =3D Element.getStorage(element), value =3D hash.get(key);=0A=
=0A=
    if (Object.isUndefined(value)) {=0A=
      hash.set(key, defaultValue);=0A=
      value =3D defaultValue;=0A=
    }=0A=
=0A=
    return value;=0A=
  },=0A=
=0A=
  clone: function(element, deep) {=0A=
    if (!(element =3D $(element))) return;=0A=
    var clone =3D element.cloneNode(deep);=0A=
    clone._prototypeUID =3D void 0;=0A=
    if (deep) {=0A=
      var descendants =3D Element.select(clone, '*'),=0A=
          i =3D descendants.length;=0A=
      while (i--) {=0A=
        descendants[i]._prototypeUID =3D void 0;=0A=
      }=0A=
    }=0A=
    return Element.extend(clone);=0A=
  }=0A=
});=0A=
/* Portions of the Selector class are derived from Jack Slocum's =
DomQuery,=0A=
 * part of YUI-Ext version 0.40, distributed under the terms of an =
MIT-style=0A=
 * license.  Please see http://www.yui-ext.com/ for more information. */=0A=
=0A=
var Selector =3D Class.create({=0A=
  initialize: function(expression) {=0A=
    this.expression =3D expression.strip();=0A=
=0A=
    if (this.shouldUseSelectorsAPI()) {=0A=
      this.mode =3D 'selectorsAPI';=0A=
    } else if (this.shouldUseXPath()) {=0A=
      this.mode =3D 'xpath';=0A=
      this.compileXPathMatcher();=0A=
    } else {=0A=
      this.mode =3D "normal";=0A=
      this.compileMatcher();=0A=
    }=0A=
=0A=
  },=0A=
=0A=
  shouldUseXPath: (function() {=0A=
=0A=
    var IS_DESCENDANT_SELECTOR_BUGGY =3D (function(){=0A=
      var isBuggy =3D false;=0A=
      if (document.evaluate && window.XPathResult) {=0A=
        var el =3D document.createElement('div');=0A=
        el.innerHTML =3D =
'<ul><li></li></ul><div><ul><li></li></ul></div>';=0A=
=0A=
        var xpath =3D ".//*[local-name()=3D'ul' or local-name()=3D'UL']" =
+=0A=
          "//*[local-name()=3D'li' or local-name()=3D'LI']";=0A=
=0A=
        var result =3D document.evaluate(xpath, el, null,=0A=
          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);=0A=
=0A=
        isBuggy =3D (result.snapshotLength !=3D=3D 2);=0A=
        el =3D null;=0A=
      }=0A=
      return isBuggy;=0A=
    })();=0A=
=0A=
    return function() {=0A=
      if (!Prototype.BrowserFeatures.XPath) return false;=0A=
=0A=
      var e =3D this.expression;=0A=
=0A=
      if (Prototype.Browser.WebKit &&=0A=
       (e.include("-of-type") || e.include(":empty")))=0A=
        return false;=0A=
=0A=
      if ((/(\[[\w-]*?:|:checked)/).test(e))=0A=
        return false;=0A=
=0A=
      if (IS_DESCENDANT_SELECTOR_BUGGY) return false;=0A=
=0A=
      return true;=0A=
    }=0A=
=0A=
  })(),=0A=
=0A=
  shouldUseSelectorsAPI: function() {=0A=
    if (!Prototype.BrowserFeatures.SelectorsAPI) return false;=0A=
=0A=
    if (Selector.CASE_INSENSITIVE_CLASS_NAMES) return false;=0A=
=0A=
    if (!Selector._div) Selector._div =3D new Element('div');=0A=
=0A=
    try {=0A=
      Selector._div.querySelector(this.expression);=0A=
    } catch(e) {=0A=
      return false;=0A=
    }=0A=
=0A=
    return true;=0A=
  },=0A=
=0A=
  compileMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns, h =3D =
Selector.handlers,=0A=
        c =3D Selector.criteria, le, p, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.matcher =3D Selector._cache[e];=0A=
      return;=0A=
    }=0A=
=0A=
    this.matcher =3D ["this.matcher =3D function(root) {",=0A=
                    "var r =3D root, h =3D Selector.handlers, c =3D =
false, n;"];=0A=
=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          this.matcher.push(Object.isFunction(c[name]) ? c[name](m) :=0A=
            new Template(c[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.matcher.push("return h.unique(n);\n}");=0A=
    eval(this.matcher.join('\n'));=0A=
    Selector._cache[this.expression] =3D this.matcher;=0A=
  },=0A=
=0A=
  compileXPathMatcher: function() {=0A=
    var e =3D this.expression, ps =3D Selector.patterns,=0A=
        x =3D Selector.xpath, le, m, len =3D ps.length, name;=0A=
=0A=
    if (Selector._cache[e]) {=0A=
      this.xpath =3D Selector._cache[e]; return;=0A=
    }=0A=
=0A=
    this.matcher =3D ['.//*'];=0A=
    while (e && le !=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(ps[i].re)) {=0A=
          this.matcher.push(Object.isFunction(x[name]) ? x[name](m) :=0A=
            new Template(x[name]).evaluate(m));=0A=
          e =3D e.replace(m[0], '');=0A=
          break;=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    this.xpath =3D this.matcher.join('');=0A=
    Selector._cache[this.expression] =3D this.xpath;=0A=
  },=0A=
=0A=
  findElements: function(root) {=0A=
    root =3D root || document;=0A=
    var e =3D this.expression, results;=0A=
=0A=
    switch (this.mode) {=0A=
      case 'selectorsAPI':=0A=
        if (root !=3D=3D document) {=0A=
          var oldId =3D root.id, id =3D $(root).identify();=0A=
          id =3D id.replace(/([\.:])/g, "\\$1");=0A=
          e =3D "#" + id + " " + e;=0A=
        }=0A=
=0A=
        results =3D $A(root.querySelectorAll(e)).map(Element.extend);=0A=
        root.id =3D oldId;=0A=
=0A=
        return results;=0A=
      case 'xpath':=0A=
        return document._getElementsByXPath(this.xpath, root);=0A=
      default:=0A=
       return this.matcher(root);=0A=
    }=0A=
  },=0A=
=0A=
  match: function(element) {=0A=
    this.tokens =3D [];=0A=
=0A=
    var e =3D this.expression, ps =3D Selector.patterns, as =3D =
Selector.assertions;=0A=
    var le, p, m, len =3D ps.length, name;=0A=
=0A=
    while (e && le !=3D=3D e && (/\S/).test(e)) {=0A=
      le =3D e;=0A=
      for (var i =3D 0; i<len; i++) {=0A=
        p =3D ps[i].re;=0A=
        name =3D ps[i].name;=0A=
        if (m =3D e.match(p)) {=0A=
          if (as[name]) {=0A=
            this.tokens.push([name, Object.clone(m)]);=0A=
            e =3D e.replace(m[0], '');=0A=
          } else {=0A=
            return this.findElements(document).include(element);=0A=
          }=0A=
        }=0A=
      }=0A=
    }=0A=
=0A=
    var match =3D true, name, matches;=0A=
    for (var i =3D 0, token; token =3D this.tokens[i]; i++) {=0A=
      name =3D token[0], matches =3D token[1];=0A=
      if (!Selector.assertions[name](element, matches)) {=0A=
        match =3D false; break;=0A=
      }=0A=
    }=0A=
=0A=
    return match;=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return this.expression;=0A=
  },=0A=
=0A=
  inspect: function() {=0A=
    return "#<Selector:" + this.expression.inspect() + ">";=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.BrowserFeatures.SelectorsAPI &&=0A=
 document.compatMode =3D=3D=3D 'BackCompat') {=0A=
  Selector.CASE_INSENSITIVE_CLASS_NAMES =3D (function(){=0A=
    var div =3D document.createElement('div'),=0A=
     span =3D document.createElement('span');=0A=
=0A=
    div.id =3D "prototype_test_id";=0A=
    span.className =3D 'Test';=0A=
    div.appendChild(span);=0A=
    var isIgnored =3D (div.querySelector('#prototype_test_id .test') =
!=3D=3D null);=0A=
    div =3D span =3D null;=0A=
    return isIgnored;=0A=
  })();=0A=
}=0A=
=0A=
Object.extend(Selector, {=0A=
  _cache: { },=0A=
=0A=
  xpath: {=0A=
    descendant:   "//*",=0A=
    child:        "/*",=0A=
    adjacent:     "/following-sibling::*[1]",=0A=
    laterSibling: '/following-sibling::*',=0A=
    tagName:      function(m) {=0A=
      if (m[1] =3D=3D '*') return '';=0A=
      return "[local-name()=3D'" + m[1].toLowerCase() +=0A=
             "' or local-name()=3D'" + m[1].toUpperCase() + "']";=0A=
    },=0A=
    className:    "[contains(concat(' ', @class, ' '), ' #{1} ')]",=0A=
    id:           "[@id=3D'#{1}']",=0A=
    attrPresence: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      return new Template("[@#{1}]").evaluate(m);=0A=
    },=0A=
    attr: function(m) {=0A=
      m[1] =3D m[1].toLowerCase();=0A=
      m[3] =3D m[5] || m[6];=0A=
      return new Template(Selector.xpath.operators[m[2]]).evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      var h =3D Selector.xpath.pseudos[m[1]];=0A=
      if (!h) return '';=0A=
      if (Object.isFunction(h)) return h(m);=0A=
      return new Template(Selector.xpath.pseudos[m[1]]).evaluate(m);=0A=
    },=0A=
    operators: {=0A=
      '=3D':  "[@#{1}=3D'#{3}']",=0A=
      '!=3D': "[@#{1}!=3D'#{3}']",=0A=
      '^=3D': "[starts-with(@#{1}, '#{3}')]",=0A=
      '$=3D': "[substring(@#{1}, (string-length(@#{1}) - =
string-length('#{3}') + 1))=3D'#{3}']",=0A=
      '*=3D': "[contains(@#{1}, '#{3}')]",=0A=
      '~=3D': "[contains(concat(' ', @#{1}, ' '), ' #{3} ')]",=0A=
      '|=3D': "[contains(concat('-', @#{1}, '-'), '-#{3}-')]"=0A=
    },=0A=
    pseudos: {=0A=
      'first-child': '[not(preceding-sibling::*)]',=0A=
      'last-child':  '[not(following-sibling::*)]',=0A=
      'only-child':  '[not(preceding-sibling::* or =
following-sibling::*)]',=0A=
      'empty':       "[count(*) =3D 0 and (count(text()) =3D 0)]",=0A=
      'checked':     "[@checked]",=0A=
      'disabled':    "[(@disabled) and (@type!=3D'hidden')]",=0A=
      'enabled':     "[not(@disabled) and (@type!=3D'hidden')]",=0A=
      'not': function(m) {=0A=
        var e =3D m[6], p =3D Selector.patterns,=0A=
            x =3D Selector.xpath, le, v, len =3D p.length, name;=0A=
=0A=
        var exclusion =3D [];=0A=
        while (e && le !=3D e && (/\S/).test(e)) {=0A=
          le =3D e;=0A=
          for (var i =3D 0; i<len; i++) {=0A=
            name =3D p[i].name=0A=
            if (m =3D e.match(p[i].re)) {=0A=
              v =3D Object.isFunction(x[name]) ? x[name](m) : new =
Template(x[name]).evaluate(m);=0A=
              exclusion.push("(" + v.substring(1, v.length - 1) + ")");=0A=
              e =3D e.replace(m[0], '');=0A=
              break;=0A=
            }=0A=
          }=0A=
        }=0A=
        return "[not(" + exclusion.join(" and ") + ")]";=0A=
      },=0A=
      'nth-child':      function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./preceding-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-last-child': function(m) {=0A=
        return =
Selector.xpath.pseudos.nth("(count(./following-sibling::*) + 1) ", m);=0A=
      },=0A=
      'nth-of-type':    function(m) {=0A=
        return Selector.xpath.pseudos.nth("position() ", m);=0A=
      },=0A=
      'nth-last-of-type': function(m) {=0A=
        return Selector.xpath.pseudos.nth("(last() + 1 - position()) ", =
m);=0A=
      },=0A=
      'first-of-type':  function(m) {=0A=
        m[6] =3D "1"; return Selector.xpath.pseudos['nth-of-type'](m);=0A=
      },=0A=
      'last-of-type':   function(m) {=0A=
        m[6] =3D "1"; return =
Selector.xpath.pseudos['nth-last-of-type'](m);=0A=
      },=0A=
      'only-of-type':   function(m) {=0A=
        var p =3D Selector.xpath.pseudos; return p['first-of-type'](m) + =
p['last-of-type'](m);=0A=
      },=0A=
      nth: function(fragment, m) {=0A=
        var mm, formula =3D m[6], predicate;=0A=
        if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
        if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
        if (mm =3D formula.match(/^(\d+)$/)) // digit only=0A=
          return '[' + fragment + "=3D " + mm[1] + ']';=0A=
        if (mm =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // an+b=0A=
          if (mm[1] =3D=3D "-") mm[1] =3D -1;=0A=
          var a =3D mm[1] ? Number(mm[1]) : 1;=0A=
          var b =3D mm[2] ? Number(mm[2]) : 0;=0A=
          predicate =3D "[((#{fragment} - #{b}) mod #{a} =3D 0) and " +=0A=
          "((#{fragment} - #{b}) div #{a} >=3D 0)]";=0A=
          return new Template(predicate).evaluate({=0A=
            fragment: fragment, a: a, b: b });=0A=
        }=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  criteria: {=0A=
    tagName:      'n =3D h.tagName(n, r, "#{1}", c);      c =3D false;',=0A=
    className:    'n =3D h.className(n, r, "#{1}", c);    c =3D false;',=0A=
    id:           'n =3D h.id(n, r, "#{1}", c);           c =3D false;',=0A=
    attrPresence: 'n =3D h.attrPresence(n, r, "#{1}", c); c =3D false;',=0A=
    attr: function(m) {=0A=
      m[3] =3D (m[5] || m[6]);=0A=
      return new Template('n =3D h.attr(n, r, "#{1}", "#{3}", "#{2}", =
c); c =3D false;').evaluate(m);=0A=
    },=0A=
    pseudo: function(m) {=0A=
      if (m[6]) m[6] =3D m[6].replace(/"/g, '\\"');=0A=
      return new Template('n =3D h.pseudo(n, "#{1}", "#{6}", r, c); c =
=3D false;').evaluate(m);=0A=
    },=0A=
    descendant:   'c =3D "descendant";',=0A=
    child:        'c =3D "child";',=0A=
    adjacent:     'c =3D "adjacent";',=0A=
    laterSibling: 'c =3D "laterSibling";'=0A=
  },=0A=
=0A=
  patterns: [=0A=
    { name: 'laterSibling', re: /^\s*~\s*/ },=0A=
    { name: 'child',        re: /^\s*>\s*/ },=0A=
    { name: 'adjacent',     re: /^\s*\+\s*/ },=0A=
    { name: 'descendant',   re: /^\s/ },=0A=
=0A=
    { name: 'tagName',      re: /^\s*(\*|[\w\-]+)(\b|$)?/ },=0A=
    { name: 'id',           re: /^#([\w\-\*]+)(\b|$)/ },=0A=
    { name: 'className',    re: /^\.([\w\-\*]+)(\b|$)/ },=0A=
    { name: 'pseudo',       re: =
/^:((first|last|nth|nth-last|only)(-child|-of-type)|empty|checked|(en|dis=
)abled|not)(\((.*?)\))?(\b|$|(?=3D\s|[:+~>]))/ },=0A=
    { name: 'attrPresence', re: /^\[((?:[\w-]+:)?[\w-]+)\]/ },=0A=
    { name: 'attr',         re: =
/\[((?:[\w-]*:)?[\w-]+)\s*(?:([!^$*~|]?=3D)\s*((['"])([^\4]*?)\4|([^'"][^=
\]]*?)))?\]/ }=0A=
  ],=0A=
=0A=
  assertions: {=0A=
    tagName: function(element, matches) {=0A=
      return matches[1].toUpperCase() =3D=3D =
element.tagName.toUpperCase();=0A=
    },=0A=
=0A=
    className: function(element, matches) {=0A=
      return Element.hasClassName(element, matches[1]);=0A=
    },=0A=
=0A=
    id: function(element, matches) {=0A=
      return element.id =3D=3D=3D matches[1];=0A=
    },=0A=
=0A=
    attrPresence: function(element, matches) {=0A=
      return Element.hasAttribute(element, matches[1]);=0A=
    },=0A=
=0A=
    attr: function(element, matches) {=0A=
      var nodeValue =3D Element.readAttribute(element, matches[1]);=0A=
      return nodeValue && Selector.operators[matches[2]](nodeValue, =
matches[5] || matches[6]);=0A=
    }=0A=
  },=0A=
=0A=
  handlers: {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        a.push(node);=0A=
      return a;=0A=
    },=0A=
=0A=
    mark: function(nodes) {=0A=
      var _true =3D Prototype.emptyFunction;=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        node._countedByPrototype =3D _true;=0A=
      return nodes;=0A=
    },=0A=
=0A=
    unmark: (function(){=0A=
=0A=
      var PROPERTIES_ATTRIBUTES_MAP =3D (function(){=0A=
        var el =3D document.createElement('div'),=0A=
            isBuggy =3D false,=0A=
            propName =3D '_countedByPrototype',=0A=
            value =3D 'x'=0A=
        el[propName] =3D value;=0A=
        isBuggy =3D (el.getAttribute(propName) =3D=3D=3D value);=0A=
        el =3D null;=0A=
        return isBuggy;=0A=
      })();=0A=
=0A=
      return PROPERTIES_ATTRIBUTES_MAP ?=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node.removeAttribute('_countedByPrototype');=0A=
          return nodes;=0A=
        } :=0A=
        function(nodes) {=0A=
          for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
            node._countedByPrototype =3D void 0;=0A=
          return nodes;=0A=
        }=0A=
    })(),=0A=
=0A=
    index: function(parentNode, reverse, ofType) {=0A=
      parentNode._countedByPrototype =3D Prototype.emptyFunction;=0A=
      if (reverse) {=0A=
        for (var nodes =3D parentNode.childNodes, i =3D nodes.length - =
1, j =3D 1; i >=3D 0; i--) {=0A=
          var node =3D nodes[i];=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
        }=0A=
      } else {=0A=
        for (var i =3D 0, j =3D 1, nodes =3D parentNode.childNodes; node =
=3D nodes[i]; i++)=0A=
          if (node.nodeType =3D=3D 1 && (!ofType || =
node._countedByPrototype)) node.nodeIndex =3D j++;=0A=
      }=0A=
    },=0A=
=0A=
    unique: function(nodes) {=0A=
      if (nodes.length =3D=3D 0) return nodes;=0A=
      var results =3D [], n;=0A=
      for (var i =3D 0, l =3D nodes.length; i < l; i++)=0A=
        if (typeof (n =3D nodes[i])._countedByPrototype =3D=3D =
'undefined') {=0A=
          n._countedByPrototype =3D Prototype.emptyFunction;=0A=
          results.push(Element.extend(n));=0A=
        }=0A=
      return Selector.handlers.unmark(results);=0A=
    },=0A=
=0A=
    descendant: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, node.getElementsByTagName('*'));=0A=
      return results;=0A=
    },=0A=
=0A=
    child: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        for (var j =3D 0, child; child =3D node.childNodes[j]; j++)=0A=
          if (child.nodeType =3D=3D 1 && child.tagName !=3D '!') =
results.push(child);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    adjacent: function(nodes) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        var next =3D this.nextElementSibling(node);=0A=
        if (next) results.push(next);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    laterSibling: function(nodes) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        h.concat(results, Element.nextSiblings(node));=0A=
      return results;=0A=
    },=0A=
=0A=
    nextElementSibling: function(node) {=0A=
      while (node =3D node.nextSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    previousElementSibling: function(node) {=0A=
      while (node =3D node.previousSibling)=0A=
        if (node.nodeType =3D=3D 1) return node;=0A=
      return null;=0A=
    },=0A=
=0A=
    tagName: function(nodes, root, tagName, combinator) {=0A=
      var uTagName =3D tagName.toUpperCase();=0A=
      var results =3D [], h =3D Selector.handlers;=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D "descendant") {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              h.concat(results, node.getElementsByTagName(tagName));=0A=
            return results;=0A=
          } else nodes =3D this[combinator](nodes);=0A=
          if (tagName =3D=3D "*") return nodes;=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.tagName.toUpperCase() =3D=3D=3D uTagName) =
results.push(node);=0A=
        return results;=0A=
      } else return root.getElementsByTagName(tagName);=0A=
    },=0A=
=0A=
    id: function(nodes, root, id, combinator) {=0A=
      var targetNode =3D $(id), h =3D Selector.handlers;=0A=
=0A=
      if (root =3D=3D document) {=0A=
        if (!targetNode) return [];=0A=
        if (!nodes) return [targetNode];=0A=
      } else {=0A=
        if (!root.sourceIndex || root.sourceIndex < 1) {=0A=
          var nodes =3D root.getElementsByTagName('*');=0A=
          for (var j =3D 0, node; node =3D nodes[j]; j++) {=0A=
            if (node.id =3D=3D=3D id) return [node];=0A=
          }=0A=
        }=0A=
      }=0A=
=0A=
      if (nodes) {=0A=
        if (combinator) {=0A=
          if (combinator =3D=3D 'child') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (targetNode.parentNode =3D=3D node) return [targetNode];=0A=
          } else if (combinator =3D=3D 'descendant') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Element.descendantOf(targetNode, node)) return =
[targetNode];=0A=
          } else if (combinator =3D=3D 'adjacent') {=0A=
            for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
              if (Selector.handlers.previousElementSibling(targetNode) =
=3D=3D node)=0A=
                return [targetNode];=0A=
          } else nodes =3D h[combinator](nodes);=0A=
        }=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node =3D=3D targetNode) return [targetNode];=0A=
        return [];=0A=
      }=0A=
      return (targetNode && Element.descendantOf(targetNode, root)) ? =
[targetNode] : [];=0A=
    },=0A=
=0A=
    className: function(nodes, root, className, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      return Selector.handlers.byClassName(nodes, root, className);=0A=
    },=0A=
=0A=
    byClassName: function(nodes, root, className) {=0A=
      if (!nodes) nodes =3D Selector.handlers.descendant([root]);=0A=
      var needle =3D ' ' + className + ' ';=0A=
      for (var i =3D 0, results =3D [], node, nodeClassName; node =3D =
nodes[i]; i++) {=0A=
        nodeClassName =3D node.className;=0A=
        if (nodeClassName.length =3D=3D 0) continue;=0A=
        if (nodeClassName =3D=3D className || (' ' + nodeClassName + ' =
').include(needle))=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    attrPresence: function(nodes, root, attr, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
        if (Element.hasAttribute(node, attr)) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    attr: function(nodes, root, attr, value, operator, combinator) {=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      var handler =3D Selector.operators[operator], results =3D [];=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        var nodeValue =3D Element.readAttribute(node, attr);=0A=
        if (nodeValue =3D=3D=3D null) continue;=0A=
        if (handler(nodeValue, value)) results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    pseudo: function(nodes, name, value, root, combinator) {=0A=
      if (nodes && combinator) nodes =3D this[combinator](nodes);=0A=
      if (!nodes) nodes =3D root.getElementsByTagName("*");=0A=
      return Selector.pseudos[name](nodes, value, root);=0A=
    }=0A=
  },=0A=
=0A=
  pseudos: {=0A=
    'first-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.previousElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'last-child': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (Selector.handlers.nextElementSibling(node)) continue;=0A=
          results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
    'only-child': function(nodes, value, root) {=0A=
      var h =3D Selector.handlers;=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!h.previousElementSibling(node) && =
!h.nextElementSibling(node))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
    'nth-child':        function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root);=0A=
    },=0A=
    'nth-last-child':   function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true);=0A=
    },=0A=
    'nth-of-type':      function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, false, true);=0A=
    },=0A=
    'nth-last-of-type': function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, formula, root, true, true);=0A=
    },=0A=
    'first-of-type':    function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, false, true);=0A=
    },=0A=
    'last-of-type':     function(nodes, formula, root) {=0A=
      return Selector.pseudos.nth(nodes, "1", root, true, true);=0A=
    },=0A=
    'only-of-type':     function(nodes, formula, root) {=0A=
      var p =3D Selector.pseudos;=0A=
      return p['last-of-type'](p['first-of-type'](nodes, formula, root), =
formula, root);=0A=
    },=0A=
=0A=
    getIndices: function(a, b, total) {=0A=
      if (a =3D=3D 0) return b > 0 ? [b] : [];=0A=
      return $R(1, total).inject([], function(memo, i) {=0A=
        if (0 =3D=3D (i - b) % a && (i - b) / a >=3D 0) memo.push(i);=0A=
        return memo;=0A=
      });=0A=
    },=0A=
=0A=
    nth: function(nodes, formula, root, reverse, ofType) {=0A=
      if (nodes.length =3D=3D 0) return [];=0A=
      if (formula =3D=3D 'even') formula =3D '2n+0';=0A=
      if (formula =3D=3D 'odd')  formula =3D '2n+1';=0A=
      var h =3D Selector.handlers, results =3D [], indexed =3D [], m;=0A=
      h.mark(nodes);=0A=
      for (var i =3D 0, node; node =3D nodes[i]; i++) {=0A=
        if (!node.parentNode._countedByPrototype) {=0A=
          h.index(node.parentNode, reverse, ofType);=0A=
          indexed.push(node.parentNode);=0A=
        }=0A=
      }=0A=
      if (formula.match(/^\d+$/)) { // just a number=0A=
        formula =3D Number(formula);=0A=
        for (var i =3D 0, node; node =3D nodes[i]; i++)=0A=
          if (node.nodeIndex =3D=3D formula) results.push(node);=0A=
      } else if (m =3D formula.match(/^(-?\d*)?n(([+-])(\d+))?/)) { // =
an+b=0A=
        if (m[1] =3D=3D "-") m[1] =3D -1;=0A=
        var a =3D m[1] ? Number(m[1]) : 1;=0A=
        var b =3D m[2] ? Number(m[2]) : 0;=0A=
        var indices =3D Selector.pseudos.getIndices(a, b, nodes.length);=0A=
        for (var i =3D 0, node, l =3D indices.length; node =3D nodes[i]; =
i++) {=0A=
          for (var j =3D 0; j < l; j++)=0A=
            if (node.nodeIndex =3D=3D indices[j]) results.push(node);=0A=
        }=0A=
      }=0A=
      h.unmark(nodes);=0A=
      h.unmark(indexed);=0A=
      return results;=0A=
    },=0A=
=0A=
    'empty': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++) {=0A=
        if (node.tagName =3D=3D '!' || node.firstChild) continue;=0A=
        results.push(node);=0A=
      }=0A=
      return results;=0A=
    },=0A=
=0A=
    'not': function(nodes, selector, root) {=0A=
      var h =3D Selector.handlers, selectorType, m;=0A=
      var exclusions =3D new Selector(selector).findElements(root);=0A=
      h.mark(exclusions);=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node._countedByPrototype) results.push(node);=0A=
      h.unmark(exclusions);=0A=
      return results;=0A=
    },=0A=
=0A=
    'enabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (!node.disabled && (!node.type || node.type !=3D=3D 'hidden'))=0A=
          results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'disabled': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.disabled) results.push(node);=0A=
      return results;=0A=
    },=0A=
=0A=
    'checked': function(nodes, value, root) {=0A=
      for (var i =3D 0, results =3D [], node; node =3D nodes[i]; i++)=0A=
        if (node.checked) results.push(node);=0A=
      return results;=0A=
    }=0A=
  },=0A=
=0A=
  operators: {=0A=
    '=3D':  function(nv, v) { return nv =3D=3D v; },=0A=
    '!=3D': function(nv, v) { return nv !=3D v; },=0A=
    '^=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.startsWith(v); },=0A=
    '$=3D': function(nv, v) { return nv =3D=3D v || nv && =
nv.endsWith(v); },=0A=
    '*=3D': function(nv, v) { return nv =3D=3D v || nv && nv.include(v); =
},=0A=
    '~=3D': function(nv, v) { return (' ' + nv + ' ').include(' ' + v + =
' '); },=0A=
    '|=3D': function(nv, v) { return ('-' + (nv || "").toUpperCase() +=0A=
     '-').include('-' + (v || "").toUpperCase() + '-'); }=0A=
  },=0A=
=0A=
  split: function(expression) {=0A=
    var expressions =3D [];=0A=
    expression.scan(/(([\w#:.~>+()\s-]+|\*|\[.*?\])+)\s*(,|$)/, =
function(m) {=0A=
      expressions.push(m[1].strip());=0A=
    });=0A=
    return expressions;=0A=
  },=0A=
=0A=
  matchElements: function(elements, expression) {=0A=
    var matches =3D $$(expression), h =3D Selector.handlers;=0A=
    h.mark(matches);=0A=
    for (var i =3D 0, results =3D [], element; element =3D elements[i]; =
i++)=0A=
      if (element._countedByPrototype) results.push(element);=0A=
    h.unmark(matches);=0A=
    return results;=0A=
  },=0A=
=0A=
  findElement: function(elements, expression, index) {=0A=
    if (Object.isNumber(expression)) {=0A=
      index =3D expression; expression =3D false;=0A=
    }=0A=
    return Selector.matchElements(elements, expression || '*')[index || =
0];=0A=
  },=0A=
=0A=
  findChildElements: function(element, expressions) {=0A=
    expressions =3D Selector.split(expressions.join(','));=0A=
    var results =3D [], h =3D Selector.handlers;=0A=
    for (var i =3D 0, l =3D expressions.length, selector; i < l; i++) {=0A=
      selector =3D new Selector(expressions[i].strip());=0A=
      h.concat(results, selector.findElements(element));=0A=
    }=0A=
    return (l > 1) ? h.unique(results) : results;=0A=
  }=0A=
});=0A=
=0A=
if (Prototype.Browser.IE) {=0A=
  Object.extend(Selector.handlers, {=0A=
    concat: function(a, b) {=0A=
      for (var i =3D 0, node; node =3D b[i]; i++)=0A=
        if (node.tagName !=3D=3D "!") a.push(node);=0A=
      return a;=0A=
    }=0A=
  });=0A=
}=0A=
=0A=
function $$() {=0A=
  return Selector.findChildElements(document, $A(arguments));=0A=
}=0A=
=0A=
var Form =3D {=0A=
  reset: function(form) {=0A=
    form =3D $(form);=0A=
    form.reset();=0A=
    return form;=0A=
  },=0A=
=0A=
  serializeElements: function(elements, options) {=0A=
    if (typeof options !=3D 'object') options =3D { hash: !!options };=0A=
    else if (Object.isUndefined(options.hash)) options.hash =3D true;=0A=
    var key, value, submitted =3D false, submit =3D options.submit;=0A=
=0A=
    var data =3D elements.inject({ }, function(result, element) {=0A=
      if (!element.disabled && element.name) {=0A=
        key =3D element.name; value =3D $(element).getValue();=0A=
        if (value !=3D null && element.type !=3D 'file' && (element.type =
!=3D 'submit' || (!submitted &&=0A=
            submit !=3D=3D false && (!submit || key =3D=3D submit) && =
(submitted =3D true)))) {=0A=
          if (key in result) {=0A=
            if (!Object.isArray(result[key])) result[key] =3D =
[result[key]];=0A=
            result[key].push(value);=0A=
          }=0A=
          else result[key] =3D value;=0A=
        }=0A=
      }=0A=
      return result;=0A=
    });=0A=
=0A=
    return options.hash ? data : Object.toQueryString(data);=0A=
  }=0A=
};=0A=
=0A=
Form.Methods =3D {=0A=
  serialize: function(form, options) {=0A=
    return Form.serializeElements(Form.getElements(form), options);=0A=
  },=0A=
=0A=
  getElements: function(form) {=0A=
    var elements =3D $(form).getElementsByTagName('*'),=0A=
        element,=0A=
        arr =3D [ ],=0A=
        serializers =3D Form.Element.Serializers;=0A=
    for (var i =3D 0; element =3D elements[i]; i++) {=0A=
      arr.push(element);=0A=
    }=0A=
    return arr.inject([], function(elements, child) {=0A=
      if (serializers[child.tagName.toLowerCase()])=0A=
        elements.push(Element.extend(child));=0A=
      return elements;=0A=
    })=0A=
  },=0A=
=0A=
  getInputs: function(form, typeName, name) {=0A=
    form =3D $(form);=0A=
    var inputs =3D form.getElementsByTagName('input');=0A=
=0A=
    if (!typeName && !name) return $A(inputs).map(Element.extend);=0A=
=0A=
    for (var i =3D 0, matchingInputs =3D [], length =3D inputs.length; i =
< length; i++) {=0A=
      var input =3D inputs[i];=0A=
      if ((typeName && input.type !=3D typeName) || (name && input.name =
!=3D name))=0A=
        continue;=0A=
      matchingInputs.push(Element.extend(input));=0A=
    }=0A=
=0A=
    return matchingInputs;=0A=
  },=0A=
=0A=
  disable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('disable');=0A=
    return form;=0A=
  },=0A=
=0A=
  enable: function(form) {=0A=
    form =3D $(form);=0A=
    Form.getElements(form).invoke('enable');=0A=
    return form;=0A=
  },=0A=
=0A=
  findFirstElement: function(form) {=0A=
    var elements =3D $(form).getElements().findAll(function(element) {=0A=
      return 'hidden' !=3D element.type && !element.disabled;=0A=
    });=0A=
    var firstByIndex =3D elements.findAll(function(element) {=0A=
      return element.hasAttribute('tabIndex') && element.tabIndex >=3D 0;=0A=
    }).sortBy(function(element) { return element.tabIndex }).first();=0A=
=0A=
    return firstByIndex ? firstByIndex : elements.find(function(element) =
{=0A=
      return /^(?:input|select|textarea)$/i.test(element.tagName);=0A=
    });=0A=
  },=0A=
=0A=
  focusFirstElement: function(form) {=0A=
    form =3D $(form);=0A=
    form.findFirstElement().activate();=0A=
    return form;=0A=
  },=0A=
=0A=
  request: function(form, options) {=0A=
    form =3D $(form), options =3D Object.clone(options || { });=0A=
=0A=
    var params =3D options.parameters, action =3D =
form.readAttribute('action') || '';=0A=
    if (action.blank()) action =3D window.location.href;=0A=
    options.parameters =3D form.serialize(true);=0A=
=0A=
    if (params) {=0A=
      if (Object.isString(params)) params =3D params.toQueryParams();=0A=
      Object.extend(options.parameters, params);=0A=
    }=0A=
=0A=
    if (form.hasAttribute('method') && !options.method)=0A=
      options.method =3D form.method;=0A=
=0A=
    return new Ajax.Request(action, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Form.Element =3D {=0A=
  focus: function(element) {=0A=
    $(element).focus();=0A=
    return element;=0A=
  },=0A=
=0A=
  select: function(element) {=0A=
    $(element).select();=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
Form.Element.Methods =3D {=0A=
=0A=
  serialize: function(element) {=0A=
    element =3D $(element);=0A=
    if (!element.disabled && element.name) {=0A=
      var value =3D element.getValue();=0A=
      if (value !=3D undefined) {=0A=
        var pair =3D { };=0A=
        pair[element.name] =3D value;=0A=
        return Object.toQueryString(pair);=0A=
      }=0A=
    }=0A=
    return '';=0A=
  },=0A=
=0A=
  getValue: function(element) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    return Form.Element.Serializers[method](element);=0A=
  },=0A=
=0A=
  setValue: function(element, value) {=0A=
    element =3D $(element);=0A=
    var method =3D element.tagName.toLowerCase();=0A=
    Form.Element.Serializers[method](element, value);=0A=
    return element;=0A=
  },=0A=
=0A=
  clear: function(element) {=0A=
    $(element).value =3D '';=0A=
    return element;=0A=
  },=0A=
=0A=
  present: function(element) {=0A=
    return $(element).value !=3D '';=0A=
  },=0A=
=0A=
  activate: function(element) {=0A=
    element =3D $(element);=0A=
    try {=0A=
      element.focus();=0A=
      if (element.select && (element.tagName.toLowerCase() !=3D 'input' =
||=0A=
          !(/^(?:button|reset|submit)$/i.test(element.type))))=0A=
        element.select();=0A=
    } catch (e) { }=0A=
    return element;=0A=
  },=0A=
=0A=
  disable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D true;=0A=
    return element;=0A=
  },=0A=
=0A=
  enable: function(element) {=0A=
    element =3D $(element);=0A=
    element.disabled =3D false;=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Field =3D Form.Element;=0A=
=0A=
var $F =3D Form.Element.Methods.getValue;=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Form.Element.Serializers =3D {=0A=
  input: function(element, value) {=0A=
    switch (element.type.toLowerCase()) {=0A=
      case 'checkbox':=0A=
      case 'radio':=0A=
        return Form.Element.Serializers.inputSelector(element, value);=0A=
      default:=0A=
        return Form.Element.Serializers.textarea(element, value);=0A=
    }=0A=
  },=0A=
=0A=
  inputSelector: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.checked ? =
element.value : null;=0A=
    else element.checked =3D !!value;=0A=
  },=0A=
=0A=
  textarea: function(element, value) {=0A=
    if (Object.isUndefined(value)) return element.value;=0A=
    else element.value =3D value;=0A=
  },=0A=
=0A=
  select: function(element, value) {=0A=
    if (Object.isUndefined(value))=0A=
      return this[element.type =3D=3D 'select-one' ?=0A=
        'selectOne' : 'selectMany'](element);=0A=
    else {=0A=
      var opt, currentValue, single =3D !Object.isArray(value);=0A=
      for (var i =3D 0, length =3D element.length; i < length; i++) {=0A=
        opt =3D element.options[i];=0A=
        currentValue =3D this.optionValue(opt);=0A=
        if (single) {=0A=
          if (currentValue =3D=3D value) {=0A=
            opt.selected =3D true;=0A=
            return;=0A=
          }=0A=
        }=0A=
        else opt.selected =3D value.include(currentValue);=0A=
      }=0A=
    }=0A=
  },=0A=
=0A=
  selectOne: function(element) {=0A=
    var index =3D element.selectedIndex;=0A=
    return index >=3D 0 ? this.optionValue(element.options[index]) : =
null;=0A=
  },=0A=
=0A=
  selectMany: function(element) {=0A=
    var values, length =3D element.length;=0A=
    if (!length) return null;=0A=
=0A=
    for (var i =3D 0, values =3D []; i < length; i++) {=0A=
      var opt =3D element.options[i];=0A=
      if (opt.selected) values.push(this.optionValue(opt));=0A=
    }=0A=
    return values;=0A=
  },=0A=
=0A=
  optionValue: function(opt) {=0A=
    return Element.extend(opt).hasAttribute('value') ? opt.value : =
opt.text;=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
=0A=
Abstract.TimedObserver =3D Class.create(PeriodicalExecuter, {=0A=
  initialize: function($super, element, frequency, callback) {=0A=
    $super(callback, frequency);=0A=
    this.element   =3D $(element);=0A=
    this.lastValue =3D this.getValue();=0A=
  },=0A=
=0A=
  execute: function() {=0A=
    var value =3D this.getValue();=0A=
    if (Object.isString(this.lastValue) && Object.isString(value) ?=0A=
        this.lastValue !=3D value : String(this.lastValue) !=3D =
String(value)) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.Observer =3D Class.create(Abstract.TimedObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Abstract.EventObserver =3D Class.create({=0A=
  initialize: function(element, callback) {=0A=
    this.element  =3D $(element);=0A=
    this.callback =3D callback;=0A=
=0A=
    this.lastValue =3D this.getValue();=0A=
    if (this.element.tagName.toLowerCase() =3D=3D 'form')=0A=
      this.registerFormCallbacks();=0A=
    else=0A=
      this.registerCallback(this.element);=0A=
  },=0A=
=0A=
  onElementEvent: function() {=0A=
    var value =3D this.getValue();=0A=
    if (this.lastValue !=3D value) {=0A=
      this.callback(this.element, value);=0A=
      this.lastValue =3D value;=0A=
    }=0A=
  },=0A=
=0A=
  registerFormCallbacks: function() {=0A=
    Form.getElements(this.element).each(this.registerCallback, this);=0A=
  },=0A=
=0A=
  registerCallback: function(element) {=0A=
    if (element.type) {=0A=
      switch (element.type.toLowerCase()) {=0A=
        case 'checkbox':=0A=
        case 'radio':=0A=
          Event.observe(element, 'click', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
        default:=0A=
          Event.observe(element, 'change', =
this.onElementEvent.bind(this));=0A=
          break;=0A=
      }=0A=
    }=0A=
  }=0A=
});=0A=
=0A=
Form.Element.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.Element.getValue(this.element);=0A=
  }=0A=
});=0A=
=0A=
Form.EventObserver =3D Class.create(Abstract.EventObserver, {=0A=
  getValue: function() {=0A=
    return Form.serialize(this.element);=0A=
  }=0A=
});=0A=
(function() {=0A=
=0A=
  var Event =3D {=0A=
    KEY_BACKSPACE: 8,=0A=
    KEY_TAB:       9,=0A=
    KEY_RETURN:   13,=0A=
    KEY_ESC:      27,=0A=
    KEY_LEFT:     37,=0A=
    KEY_UP:       38,=0A=
    KEY_RIGHT:    39,=0A=
    KEY_DOWN:     40,=0A=
    KEY_DELETE:   46,=0A=
    KEY_HOME:     36,=0A=
    KEY_END:      35,=0A=
    KEY_PAGEUP:   33,=0A=
    KEY_PAGEDOWN: 34,=0A=
    KEY_INSERT:   45,=0A=
=0A=
    cache: {}=0A=
  };=0A=
=0A=
  var docEl =3D document.documentElement;=0A=
  var MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED =3D 'onmouseenter' in docEl=0A=
    && 'onmouseleave' in docEl;=0A=
=0A=
  var _isButton;=0A=
  if (Prototype.Browser.IE) {=0A=
    var buttonMap =3D { 0: 1, 1: 4, 2: 2 };=0A=
    _isButton =3D function(event, code) {=0A=
      return event.button =3D=3D=3D buttonMap[code];=0A=
    };=0A=
  } else if (Prototype.Browser.WebKit) {=0A=
    _isButton =3D function(event, code) {=0A=
      switch (code) {=0A=
        case 0: return event.which =3D=3D 1 && !event.metaKey;=0A=
        case 1: return event.which =3D=3D 1 && event.metaKey;=0A=
        default: return false;=0A=
      }=0A=
    };=0A=
  } else {=0A=
    _isButton =3D function(event, code) {=0A=
      return event.which ? (event.which =3D=3D=3D code + 1) : =
(event.button =3D=3D=3D code);=0A=
    };=0A=
  }=0A=
=0A=
  function isLeftClick(event)   { return _isButton(event, 0) }=0A=
=0A=
  function isMiddleClick(event) { return _isButton(event, 1) }=0A=
=0A=
  function isRightClick(event)  { return _isButton(event, 2) }=0A=
=0A=
  function element(event) {=0A=
    event =3D Event.extend(event);=0A=
=0A=
    var node =3D event.target, type =3D event.type,=0A=
     currentTarget =3D event.currentTarget;=0A=
=0A=
    if (currentTarget && currentTarget.tagName) {=0A=
      if (type =3D=3D=3D 'load' || type =3D=3D=3D 'error' ||=0A=
        (type =3D=3D=3D 'click' && currentTarget.tagName.toLowerCase() =
=3D=3D=3D 'input'=0A=
          && currentTarget.type =3D=3D=3D 'radio'))=0A=
            node =3D currentTarget;=0A=
    }=0A=
=0A=
    if (node.nodeType =3D=3D Node.TEXT_NODE)=0A=
      node =3D node.parentNode;=0A=
=0A=
    return Element.extend(node);=0A=
  }=0A=
=0A=
  function findElement(event, expression) {=0A=
    var element =3D Event.element(event);=0A=
    if (!expression) return element;=0A=
    var elements =3D [element].concat(element.ancestors());=0A=
    return Selector.findElement(elements, expression, 0);=0A=
  }=0A=
=0A=
  function pointer(event) {=0A=
    return { x: pointerX(event), y: pointerY(event) };=0A=
  }=0A=
=0A=
  function pointerX(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || { scrollLeft: 0 };=0A=
=0A=
    return event.pageX || (event.clientX +=0A=
      (docElement.scrollLeft || body.scrollLeft) -=0A=
      (docElement.clientLeft || 0));=0A=
  }=0A=
=0A=
  function pointerY(event) {=0A=
    var docElement =3D document.documentElement,=0A=
     body =3D document.body || { scrollTop: 0 };=0A=
=0A=
    return  event.pageY || (event.clientY +=0A=
       (docElement.scrollTop || body.scrollTop) -=0A=
       (docElement.clientTop || 0));=0A=
  }=0A=
=0A=
=0A=
  function stop(event) {=0A=
    Event.extend(event);=0A=
    event.preventDefault();=0A=
    event.stopPropagation();=0A=
=0A=
    event.stopped =3D true;=0A=
  }=0A=
=0A=
  Event.Methods =3D {=0A=
    isLeftClick: isLeftClick,=0A=
    isMiddleClick: isMiddleClick,=0A=
    isRightClick: isRightClick,=0A=
=0A=
    element: element,=0A=
    findElement: findElement,=0A=
=0A=
    pointer: pointer,=0A=
    pointerX: pointerX,=0A=
    pointerY: pointerY,=0A=
=0A=
    stop: stop=0A=
  };=0A=
=0A=
=0A=
  var methods =3D Object.keys(Event.Methods).inject({ }, function(m, =
name) {=0A=
    m[name] =3D Event.Methods[name].methodize();=0A=
    return m;=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE) {=0A=
    function _relatedTarget(event) {=0A=
      var element;=0A=
      switch (event.type) {=0A=
        case 'mouseover': element =3D event.fromElement; break;=0A=
        case 'mouseout':  element =3D event.toElement;   break;=0A=
        default: return null;=0A=
      }=0A=
      return Element.extend(element);=0A=
    }=0A=
=0A=
    Object.extend(methods, {=0A=
      stopPropagation: function() { this.cancelBubble =3D true },=0A=
      preventDefault:  function() { this.returnValue =3D false },=0A=
      inspect: function() { return '[object Event]' }=0A=
    });=0A=
=0A=
    Event.extend =3D function(event, element) {=0A=
      if (!event) return false;=0A=
      if (event._extendedByPrototype) return event;=0A=
=0A=
      event._extendedByPrototype =3D Prototype.emptyFunction;=0A=
      var pointer =3D Event.pointer(event);=0A=
=0A=
      Object.extend(event, {=0A=
        target: event.srcElement || element,=0A=
        relatedTarget: _relatedTarget(event),=0A=
        pageX:  pointer.x,=0A=
        pageY:  pointer.y=0A=
      });=0A=
=0A=
      return Object.extend(event, methods);=0A=
    };=0A=
  } else {=0A=
    Event.prototype =3D window.Event.prototype || =
document.createEvent('HTMLEvents').__proto__;=0A=
    Object.extend(Event.prototype, methods);=0A=
    Event.extend =3D Prototype.K;=0A=
  }=0A=
=0A=
  function _createResponder(element, eventName, handler) {=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) {=0A=
      CACHE.push(element);=0A=
      registry =3D Element.retrieve(element, 'prototype_event_registry', =
$H());=0A=
    }=0A=
=0A=
    var respondersForEvent =3D registry.get(eventName);=0A=
    if (Object.isUndefined(respondersForEvent)) {=0A=
      respondersForEvent =3D [];=0A=
      registry.set(eventName, respondersForEvent);=0A=
    }=0A=
=0A=
    if (respondersForEvent.pluck('handler').include(handler)) return =
false;=0A=
=0A=
    var responder;=0A=
    if (eventName.include(":")) {=0A=
      responder =3D function(event) {=0A=
        if (Object.isUndefined(event.eventName))=0A=
          return false;=0A=
=0A=
        if (event.eventName !=3D=3D eventName)=0A=
          return false;=0A=
=0A=
        Event.extend(event, element);=0A=
        handler.call(element, event);=0A=
      };=0A=
    } else {=0A=
      if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED &&=0A=
       (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave")) {=0A=
        if (eventName =3D=3D=3D "mouseenter" || eventName =3D=3D=3D =
"mouseleave") {=0A=
          responder =3D function(event) {=0A=
            Event.extend(event, element);=0A=
=0A=
            var parent =3D event.relatedTarget;=0A=
            while (parent && parent !=3D=3D element) {=0A=
              try { parent =3D parent.parentNode; }=0A=
              catch(e) { parent =3D element; }=0A=
            }=0A=
=0A=
            if (parent =3D=3D=3D element) return;=0A=
=0A=
            handler.call(element, event);=0A=
          };=0A=
        }=0A=
      } else {=0A=
        responder =3D function(event) {=0A=
          Event.extend(event, element);=0A=
          handler.call(element, event);=0A=
        };=0A=
      }=0A=
    }=0A=
=0A=
    responder.handler =3D handler;=0A=
    respondersForEvent.push(responder);=0A=
    return responder;=0A=
  }=0A=
=0A=
  function _destroyCache() {=0A=
    for (var i =3D 0, length =3D CACHE.length; i < length; i++) {=0A=
      Event.stopObserving(CACHE[i]);=0A=
      CACHE[i] =3D null;=0A=
    }=0A=
  }=0A=
=0A=
  var CACHE =3D [];=0A=
=0A=
  if (Prototype.Browser.IE)=0A=
    window.attachEvent('onunload', _destroyCache);=0A=
=0A=
  if (Prototype.Browser.WebKit)=0A=
    window.addEventListener('unload', Prototype.emptyFunction, false);=0A=
=0A=
=0A=
  var _getDOMEventName =3D Prototype.K;=0A=
=0A=
  if (!MOUSEENTER_MOUSELEAVE_EVENTS_SUPPORTED) {=0A=
    _getDOMEventName =3D function(eventName) {=0A=
      var translations =3D { mouseenter: "mouseover", mouseleave: =
"mouseout" };=0A=
      return eventName in translations ? translations[eventName] : =
eventName;=0A=
    };=0A=
  }=0A=
=0A=
  function observe(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var responder =3D _createResponder(element, eventName, handler);=0A=
=0A=
    if (!responder) return element;=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.addEventListener)=0A=
        element.addEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.attachEvent("ondataavailable", responder);=0A=
        element.attachEvent("onfilterchange", responder);=0A=
      }=0A=
    } else {=0A=
      var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
      if (element.addEventListener)=0A=
        element.addEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.attachEvent("on" + actualEventName, responder);=0A=
    }=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function stopObserving(element, eventName, handler) {=0A=
    element =3D $(element);=0A=
=0A=
    var registry =3D Element.retrieve(element, =
'prototype_event_registry');=0A=
=0A=
    if (Object.isUndefined(registry)) return element;=0A=
=0A=
    if (eventName && !handler) {=0A=
      var responders =3D registry.get(eventName);=0A=
=0A=
      if (Object.isUndefined(responders)) return element;=0A=
=0A=
      responders.each( function(r) {=0A=
        Element.stopObserving(element, eventName, r.handler);=0A=
      });=0A=
      return element;=0A=
    } else if (!eventName) {=0A=
      registry.each( function(pair) {=0A=
        var eventName =3D pair.key, responders =3D pair.value;=0A=
=0A=
        responders.each( function(r) {=0A=
          Element.stopObserving(element, eventName, r.handler);=0A=
        });=0A=
      });=0A=
      return element;=0A=
    }=0A=
=0A=
    var responders =3D registry.get(eventName);=0A=
=0A=
    if (!responders) return;=0A=
=0A=
    var responder =3D responders.find( function(r) { return r.handler =
=3D=3D=3D handler; });=0A=
    if (!responder) return element;=0A=
=0A=
    var actualEventName =3D _getDOMEventName(eventName);=0A=
=0A=
    if (eventName.include(':')) {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener("dataavailable", responder, false);=0A=
      else {=0A=
        element.detachEvent("ondataavailable", responder);=0A=
        element.detachEvent("onfilterchange",  responder);=0A=
      }=0A=
    } else {=0A=
      if (element.removeEventListener)=0A=
        element.removeEventListener(actualEventName, responder, false);=0A=
      else=0A=
        element.detachEvent('on' + actualEventName, responder);=0A=
    }=0A=
=0A=
    registry.set(eventName, responders.without(responder));=0A=
=0A=
    return element;=0A=
  }=0A=
=0A=
  function fire(element, eventName, memo, bubble) {=0A=
    element =3D $(element);=0A=
=0A=
    if (Object.isUndefined(bubble))=0A=
      bubble =3D true;=0A=
=0A=
    if (element =3D=3D document && document.createEvent && =
!element.dispatchEvent)=0A=
      element =3D document.documentElement;=0A=
=0A=
    var event;=0A=
    if (document.createEvent) {=0A=
      event =3D document.createEvent('HTMLEvents');=0A=
      event.initEvent('dataavailable', true, true);=0A=
    } else {=0A=
      event =3D document.createEventObject();=0A=
      event.eventType =3D bubble ? 'ondataavailable' : 'onfilterchange';=0A=
    }=0A=
=0A=
    event.eventName =3D eventName;=0A=
    event.memo =3D memo || { };=0A=
=0A=
    if (document.createEvent)=0A=
      element.dispatchEvent(event);=0A=
    else=0A=
      element.fireEvent(event.eventType, event);=0A=
=0A=
    return Event.extend(event);=0A=
  }=0A=
=0A=
=0A=
  Object.extend(Event, Event.Methods);=0A=
=0A=
  Object.extend(Event, {=0A=
    fire:          fire,=0A=
    observe:       observe,=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Element.addMethods({=0A=
    fire:          fire,=0A=
=0A=
    observe:       observe,=0A=
=0A=
    stopObserving: stopObserving=0A=
  });=0A=
=0A=
  Object.extend(document, {=0A=
    fire:          fire.methodize(),=0A=
=0A=
    observe:       observe.methodize(),=0A=
=0A=
    stopObserving: stopObserving.methodize(),=0A=
=0A=
    loaded:        false=0A=
  });=0A=
=0A=
  if (window.Event) Object.extend(window.Event, Event);=0A=
  else window.Event =3D Event;=0A=
})();=0A=
=0A=
(function() {=0A=
  /* Support for the DOMContentLoaded event is based on work by Dan Webb,=0A=
     Matthias Miller, Dean Edwards, John Resig, and Diego Perini. */=0A=
=0A=
  var timer;=0A=
=0A=
  function fireContentLoadedEvent() {=0A=
    if (document.loaded) return;=0A=
    if (timer) window.clearTimeout(timer);=0A=
    document.loaded =3D true;=0A=
    document.fire('dom:loaded');=0A=
  }=0A=
=0A=
  function checkReadyState() {=0A=
    if (document.readyState =3D=3D=3D 'complete') {=0A=
      document.stopObserving('readystatechange', checkReadyState);=0A=
      fireContentLoadedEvent();=0A=
    }=0A=
  }=0A=
=0A=
  function pollDoScroll() {=0A=
    try { document.documentElement.doScroll('left'); }=0A=
    catch(e) {=0A=
      timer =3D pollDoScroll.defer();=0A=
      return;=0A=
    }=0A=
    fireContentLoadedEvent();=0A=
  }=0A=
=0A=
  if (document.addEventListener) {=0A=
    document.addEventListener('DOMContentLoaded', =
fireContentLoadedEvent, false);=0A=
  } else {=0A=
    document.observe('readystatechange', checkReadyState);=0A=
    if (window =3D=3D top)=0A=
      timer =3D pollDoScroll.defer();=0A=
  }=0A=
=0A=
  Event.observe(window, 'load', fireContentLoadedEvent);=0A=
})();=0A=
=0A=
Element.addMethods();=0A=
=0A=
/*------------------------------- DEPRECATED =
-------------------------------*/=0A=
=0A=
Hash.toQueryString =3D Object.toQueryString;=0A=
=0A=
var Toggle =3D { display: Element.toggle };=0A=
=0A=
Element.Methods.childOf =3D Element.Methods.descendantOf;=0A=
=0A=
var Insertion =3D {=0A=
  Before: function(element, content) {=0A=
    return Element.insert(element, {before:content});=0A=
  },=0A=
=0A=
  Top: function(element, content) {=0A=
    return Element.insert(element, {top:content});=0A=
  },=0A=
=0A=
  Bottom: function(element, content) {=0A=
    return Element.insert(element, {bottom:content});=0A=
  },=0A=
=0A=
  After: function(element, content) {=0A=
    return Element.insert(element, {after:content});=0A=
  }=0A=
};=0A=
=0A=
var $continue =3D new Error('"throw $continue" is deprecated, use =
"return" instead');=0A=
=0A=
var Position =3D {=0A=
  includeScrollOffsets: false,=0A=
=0A=
  prepare: function() {=0A=
    this.deltaX =3D  window.pageXOffset=0A=
                || document.documentElement.scrollLeft=0A=
                || document.body.scrollLeft=0A=
                || 0;=0A=
    this.deltaY =3D  window.pageYOffset=0A=
                || document.documentElement.scrollTop=0A=
                || document.body.scrollTop=0A=
                || 0;=0A=
  },=0A=
=0A=
  within: function(element, x, y) {=0A=
    if (this.includeScrollOffsets)=0A=
      return this.withinIncludingScrolloffsets(element, x, y);=0A=
    this.xcomp =3D x;=0A=
    this.ycomp =3D y;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (y >=3D this.offset[1] &&=0A=
            y <  this.offset[1] + element.offsetHeight &&=0A=
            x >=3D this.offset[0] &&=0A=
            x <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  withinIncludingScrolloffsets: function(element, x, y) {=0A=
    var offsetcache =3D Element.cumulativeScrollOffset(element);=0A=
=0A=
    this.xcomp =3D x + offsetcache[0] - this.deltaX;=0A=
    this.ycomp =3D y + offsetcache[1] - this.deltaY;=0A=
    this.offset =3D Element.cumulativeOffset(element);=0A=
=0A=
    return (this.ycomp >=3D this.offset[1] &&=0A=
            this.ycomp <  this.offset[1] + element.offsetHeight &&=0A=
            this.xcomp >=3D this.offset[0] &&=0A=
            this.xcomp <  this.offset[0] + element.offsetWidth);=0A=
  },=0A=
=0A=
  overlap: function(mode, element) {=0A=
    if (!mode) return 0;=0A=
    if (mode =3D=3D 'vertical')=0A=
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /=0A=
        element.offsetHeight;=0A=
    if (mode =3D=3D 'horizontal')=0A=
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /=0A=
        element.offsetWidth;=0A=
  },=0A=
=0A=
=0A=
  cumulativeOffset: Element.Methods.cumulativeOffset,=0A=
=0A=
  positionedOffset: Element.Methods.positionedOffset,=0A=
=0A=
  absolutize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.absolutize(element);=0A=
  },=0A=
=0A=
  relativize: function(element) {=0A=
    Position.prepare();=0A=
    return Element.relativize(element);=0A=
  },=0A=
=0A=
  realOffset: Element.Methods.cumulativeScrollOffset,=0A=
=0A=
  offsetParent: Element.Methods.getOffsetParent,=0A=
=0A=
  page: Element.Methods.viewportOffset,=0A=
=0A=
  clone: function(source, target, options) {=0A=
    options =3D options || { };=0A=
    return Element.clonePosition(target, source, options);=0A=
  }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
if (!document.getElementsByClassName) document.getElementsByClassName =
=3D function(instanceMethods){=0A=
  function iter(name) {=0A=
    return name.blank() ? null : "[contains(concat(' ', @class, ' '), ' =
" + name + " ')]";=0A=
  }=0A=
=0A=
  instanceMethods.getElementsByClassName =3D =
Prototype.BrowserFeatures.XPath ?=0A=
  function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var cond =3D /\s/.test(className) ? $w(className).map(iter).join('') =
: iter(className);=0A=
    return cond ? document._getElementsByXPath('.//*' + cond, element) : =
[];=0A=
  } : function(element, className) {=0A=
    className =3D className.toString().strip();=0A=
    var elements =3D [], classNames =3D (/\s/.test(className) ? =
$w(className) : null);=0A=
    if (!classNames && !className) return elements;=0A=
=0A=
    var nodes =3D $(element).getElementsByTagName('*');=0A=
    className =3D ' ' + className + ' ';=0A=
=0A=
    for (var i =3D 0, child, cn; child =3D nodes[i]; i++) {=0A=
      if (child.className && (cn =3D ' ' + child.className + ' ') && =
(cn.include(className) ||=0A=
          (classNames && classNames.all(function(name) {=0A=
            return !name.toString().blank() && cn.include(' ' + name + ' =
');=0A=
          }))))=0A=
        elements.push(Element.extend(child));=0A=
    }=0A=
    return elements;=0A=
  };=0A=
=0A=
  return function(className, parentElement) {=0A=
    return $(parentElement || =
document.body).getElementsByClassName(className);=0A=
  };=0A=
}(Element.Methods);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.ClassNames =3D Class.create();=0A=
Element.ClassNames.prototype =3D {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
  },=0A=
=0A=
  _each: function(iterator) {=0A=
    this.element.className.split(/\s+/).select(function(name) {=0A=
      return name.length > 0;=0A=
    })._each(iterator);=0A=
  },=0A=
=0A=
  set: function(className) {=0A=
    this.element.className =3D className;=0A=
  },=0A=
=0A=
  add: function(classNameToAdd) {=0A=
    if (this.include(classNameToAdd)) return;=0A=
    this.set($A(this).concat(classNameToAdd).join(' '));=0A=
  },=0A=
=0A=
  remove: function(classNameToRemove) {=0A=
    if (!this.include(classNameToRemove)) return;=0A=
    this.set($A(this).without(classNameToRemove).join(' '));=0A=
  },=0A=
=0A=
  toString: function() {=0A=
    return $A(this).join(' ');=0A=
  }=0A=
};=0A=
=0A=
Object.extend(Element.ClassNames.prototype, Enumerable);=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/scriptaculous/wp-scriptaculous.js?ver=1.8.3

// script.aculo.us scriptaculous.js v1.8.3, Thu Oct 08 11:23:33 +0200 =
2009=0A=
=0A=
// Copyright (c) 2005-2009 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
//=0A=
// Permission is hereby granted, free of charge, to any person obtaining=0A=
// a copy of this software and associated documentation files (the=0A=
// "Software"), to deal in the Software without restriction, including=0A=
// without limitation the rights to use, copy, modify, merge, publish,=0A=
// distribute, sublicense, and/or sell copies of the Software, and to=0A=
// permit persons to whom the Software is furnished to do so, subject to=0A=
// the following conditions:=0A=
//=0A=
// The above copyright notice and this permission notice shall be=0A=
// included in all copies or substantial portions of the Software.=0A=
//=0A=
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,=0A=
// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF=0A=
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND=0A=
// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE=0A=
// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION=0A=
// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION=0A=
// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.=0A=
//=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
var Scriptaculous =3D {=0A=
  Version: '1.8.3',=0A=
  require: function(libraryName) {=0A=
    try{=0A=
      // inserting via DOM fails in Safari 2.0, so brute force approach=0A=
      document.write('<script type=3D"text/javascript" =
src=3D"'+libraryName+'"><\/script>');=0A=
    } catch(e) {=0A=
      // for xhtml+xml served content, fall back to DOM methods=0A=
      var script =3D document.createElement('script');=0A=
      script.type =3D 'text/javascript';=0A=
      script.src =3D libraryName;=0A=
      document.getElementsByTagName('head')[0].appendChild(script);=0A=
    }=0A=
  },=0A=
  REQUIRED_PROTOTYPE: '1.6.0.3',=0A=
  load: function() {=0A=
    function convertVersionString(versionString) {=0A=
      var v =3D versionString.replace(/_.*|\./g, '');=0A=
      v =3D parseInt(v + '0'.times(4-v.length));=0A=
      return versionString.indexOf('_') > -1 ? v-1 : v;=0A=
    }=0A=
=0A=
    if((typeof Prototype=3D=3D'undefined') ||=0A=
       (typeof Element =3D=3D 'undefined') ||=0A=
       (typeof Element.Methods=3D=3D'undefined') ||=0A=
       (convertVersionString(Prototype.Version) <=0A=
        convertVersionString(Scriptaculous.REQUIRED_PROTOTYPE)))=0A=
       throw("script.aculo.us requires the Prototype JavaScript =
framework >=3D " +=0A=
        Scriptaculous.REQUIRED_PROTOTYPE);=0A=
=0A=
    var js =3D /scriptaculous\.js(\?.*)?$/;=0A=
    $$('head script[src]').findAll(function(s) {=0A=
      return s.src.match(js);=0A=
    }).each(function(s) {=0A=
		var path =3D s.src.replace(js, ''),=0A=
		includes =3D s.src.match(/\?.*load=3D([a-z,]*)/);=0A=
=0A=
		// Modified for WordPress to work with enqueue_script=0A=
		if ( includes ) {=0A=
			includes[1].split(',').each( function(include) {=0A=
				Scriptaculous.require(path+include+'.js')=0A=
			});=0A=
		}=0A=
    });=0A=
  }=0A=
};=0A=
=0A=
Scriptaculous.load();=0A=

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/scriptaculous/effects.js?ver=1.8.3

// script.aculo.us effects.js v1.8.3, Thu Oct 08 11:23:33 +0200 2009=0A=
=0A=
// Copyright (c) 2005-2009 Thomas Fuchs (http://script.aculo.us, =
http://mir.aculo.us)=0A=
// Contributors:=0A=
//  Justin Palmer (http://encytemedia.com/)=0A=
//  Mark Pilgrim (http://diveintomark.org/)=0A=
//  Martin Bialasinki=0A=
//=0A=
// script.aculo.us is freely distributable under the terms of an =
MIT-style license.=0A=
// For details, see the script.aculo.us web site: http://script.aculo.us/=0A=
=0A=
// converts rgb() and #xxx to #xxxxxx format,=0A=
// returns self (or first argument) if not convertable=0A=
String.prototype.parseColor =3D function() {=0A=
  var color =3D '#';=0A=
  if (this.slice(0,4) =3D=3D 'rgb(') {=0A=
    var cols =3D this.slice(4,this.length-1).split(',');=0A=
    var i=3D0; do { color +=3D parseInt(cols[i]).toColorPart() } while =
(++i<3);=0A=
  } else {=0A=
    if (this.slice(0,1) =3D=3D '#') {=0A=
      if (this.length=3D=3D4) for(var i=3D1;i<4;i++) color +=3D =
(this.charAt(i) + this.charAt(i)).toLowerCase();=0A=
      if (this.length=3D=3D7) color =3D this.toLowerCase();=0A=
    }=0A=
  }=0A=
  return (color.length=3D=3D7 ? color : (arguments[0] || this));=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
Element.collectTextNodes =3D function(element) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      (node.hasChildNodes() ? Element.collectTextNodes(node) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.collectTextNodesIgnoreClass =3D function(element, className) {=0A=
  return $A($(element).childNodes).collect( function(node) {=0A=
    return (node.nodeType=3D=3D3 ? node.nodeValue :=0A=
      ((node.hasChildNodes() && !Element.hasClassName(node,className)) ?=0A=
        Element.collectTextNodesIgnoreClass(node, className) : ''));=0A=
  }).flatten().join('');=0A=
};=0A=
=0A=
Element.setContentZoom =3D function(element, percent) {=0A=
  element =3D $(element);=0A=
  element.setStyle({fontSize: (percent/100) + 'em'});=0A=
  if (Prototype.Browser.WebKit) window.scrollBy(0,0);=0A=
  return element;=0A=
};=0A=
=0A=
Element.getInlineOpacity =3D function(element){=0A=
  return $(element).style.opacity || '';=0A=
};=0A=
=0A=
Element.forceRerendering =3D function(element) {=0A=
  try {=0A=
    element =3D $(element);=0A=
    var n =3D document.createTextNode(' ');=0A=
    element.appendChild(n);=0A=
    element.removeChild(n);=0A=
  } catch(e) { }=0A=
};=0A=
=0A=
/*-----------------------------------------------------------------------=
---*/=0A=
=0A=
var Effect =3D {=0A=
  _elementDoesNotExistError: {=0A=
    name: 'ElementDoesNotExistError',=0A=
    message: 'The specified DOM element does not exist, but is required =
for this effect to operate'=0A=
  },=0A=
  Transitions: {=0A=
    linear: Prototype.K,=0A=
    sinoidal: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI)/2) + .5;=0A=
    },=0A=
    reverse: function(pos) {=0A=
      return 1-pos;=0A=
    },=0A=
    flicker: function(pos) {=0A=
      var pos =3D ((-Math.cos(pos*Math.PI)/4) + .75) + Math.random()/4;=0A=
      return pos > 1 ? 1 : pos;=0A=
    },=0A=
    wobble: function(pos) {=0A=
      return (-Math.cos(pos*Math.PI*(9*pos))/2) + .5;=0A=
    },=0A=
    pulse: function(pos, pulses) {=0A=
      return (-Math.cos((pos*((pulses||5)-.5)*2)*Math.PI)/2) + .5;=0A=
    },=0A=
    spring: function(pos) {=0A=
      return 1 - (Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6));=0A=
    },=0A=
    none: function(pos) {=0A=
      return 0;=0A=
    },=0A=
    full: function(pos) {=0A=
      return 1;=0A=
    }=0A=
  },=0A=
  DefaultOptions: {=0A=
    duration:   1.0,   // seconds=0A=
    fps:        100,   // 100=3D assume 66fps max.=0A=
    sync:       false, // true for combining=0A=
    from:       0.0,=0A=
    to:         1.0,=0A=
    delay:      0.0,=0A=
    queue:      'parallel'=0A=
  },=0A=
  tagifyText: function(element) {=0A=
    var tagifyStyle =3D 'position:relative';=0A=
    if (Prototype.Browser.IE) tagifyStyle +=3D ';zoom:1';=0A=
=0A=
    element =3D $(element);=0A=
    $A(element.childNodes).each( function(child) {=0A=
      if (child.nodeType=3D=3D3) {=0A=
        child.nodeValue.toArray().each( function(character) {=0A=
          element.insertBefore(=0A=
            new Element('span', {style: tagifyStyle}).update(=0A=
              character =3D=3D ' ' ? String.fromCharCode(160) : =
character),=0A=
              child);=0A=
        });=0A=
        Element.remove(child);=0A=
      }=0A=
    });=0A=
  },=0A=
  multiple: function(element, effect) {=0A=
    var elements;=0A=
    if (((typeof element =3D=3D 'object') ||=0A=
        Object.isFunction(element)) &&=0A=
       (element.length))=0A=
      elements =3D element;=0A=
    else=0A=
      elements =3D $(element).childNodes;=0A=
=0A=
    var options =3D Object.extend({=0A=
      speed: 0.1,=0A=
      delay: 0.0=0A=
    }, arguments[2] || { });=0A=
    var masterDelay =3D options.delay;=0A=
=0A=
    $A(elements).each( function(element, index) {=0A=
      new effect(element, Object.extend(options, { delay: index * =
options.speed + masterDelay }));=0A=
    });=0A=
  },=0A=
  PAIRS: {=0A=
    'slide':  ['SlideDown','SlideUp'],=0A=
    'blind':  ['BlindDown','BlindUp'],=0A=
    'appear': ['Appear','Fade']=0A=
  },=0A=
  toggle: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    effect  =3D (effect || 'appear').toLowerCase();=0A=
    =0A=
    return Effect[ Effect.PAIRS[ effect ][ element.visible() ? 1 : 0 ] =
](element, Object.extend({=0A=
      queue: { position:'end', scope:(element.id || 'global'), limit: 1 }=0A=
    }, options || {}));=0A=
  }=0A=
};=0A=
=0A=
Effect.DefaultOptions.transition =3D Effect.Transitions.sinoidal;=0A=
=0A=
/* ------------- core effects ------------- */=0A=
=0A=
Effect.ScopedQueue =3D Class.create(Enumerable, {=0A=
  initialize: function() {=0A=
    this.effects  =3D [];=0A=
    this.interval =3D null;=0A=
  },=0A=
  _each: function(iterator) {=0A=
    this.effects._each(iterator);=0A=
  },=0A=
  add: function(effect) {=0A=
    var timestamp =3D new Date().getTime();=0A=
=0A=
    var position =3D Object.isString(effect.options.queue) ?=0A=
      effect.options.queue : effect.options.queue.position;=0A=
=0A=
    switch(position) {=0A=
      case 'front':=0A=
        // move unstarted effects after this effect=0A=
        this.effects.findAll(function(e){ return e.state=3D=3D'idle' =
}).each( function(e) {=0A=
            e.startOn  +=3D effect.finishOn;=0A=
            e.finishOn +=3D effect.finishOn;=0A=
          });=0A=
        break;=0A=
      case 'with-last':=0A=
        timestamp =3D this.effects.pluck('startOn').max() || timestamp;=0A=
        break;=0A=
      case 'end':=0A=
        // start effect after last queued effect has finished=0A=
        timestamp =3D this.effects.pluck('finishOn').max() || timestamp;=0A=
        break;=0A=
    }=0A=
=0A=
    effect.startOn  +=3D timestamp;=0A=
    effect.finishOn +=3D timestamp;=0A=
=0A=
    if (!effect.options.queue.limit || (this.effects.length < =
effect.options.queue.limit))=0A=
      this.effects.push(effect);=0A=
=0A=
    if (!this.interval)=0A=
      this.interval =3D setInterval(this.loop.bind(this), 15);=0A=
  },=0A=
  remove: function(effect) {=0A=
    this.effects =3D this.effects.reject(function(e) { return =
e=3D=3Deffect });=0A=
    if (this.effects.length =3D=3D 0) {=0A=
      clearInterval(this.interval);=0A=
      this.interval =3D null;=0A=
    }=0A=
  },=0A=
  loop: function() {=0A=
    var timePos =3D new Date().getTime();=0A=
    for(var i=3D0, len=3Dthis.effects.length;i<len;i++)=0A=
      this.effects[i] && this.effects[i].loop(timePos);=0A=
  }=0A=
});=0A=
=0A=
Effect.Queues =3D {=0A=
  instances: $H(),=0A=
  get: function(queueName) {=0A=
    if (!Object.isString(queueName)) return queueName;=0A=
=0A=
    return this.instances.get(queueName) ||=0A=
      this.instances.set(queueName, new Effect.ScopedQueue());=0A=
  }=0A=
};=0A=
Effect.Queue =3D Effect.Queues.get('global');=0A=
=0A=
Effect.Base =3D Class.create({=0A=
  position: null,=0A=
  start: function(options) {=0A=
    if (options && options.transition =3D=3D=3D false) =
options.transition =3D Effect.Transitions.linear;=0A=
    this.options      =3D Object.extend(Object.extend({ =
},Effect.DefaultOptions), options || { });=0A=
    this.currentFrame =3D 0;=0A=
    this.state        =3D 'idle';=0A=
    this.startOn      =3D this.options.delay*1000;=0A=
    this.finishOn     =3D this.startOn+(this.options.duration*1000);=0A=
    this.fromToDelta  =3D this.options.to-this.options.from;=0A=
    this.totalTime    =3D this.finishOn-this.startOn;=0A=
    this.totalFrames  =3D this.options.fps*this.options.duration;=0A=
=0A=
    this.render =3D (function() {=0A=
      function dispatch(effect, eventName) {=0A=
        if (effect.options[eventName + 'Internal'])=0A=
          effect.options[eventName + 'Internal'](effect);=0A=
        if (effect.options[eventName])=0A=
          effect.options[eventName](effect);=0A=
      }=0A=
=0A=
      return function(pos) {=0A=
        if (this.state =3D=3D=3D "idle") {=0A=
          this.state =3D "running";=0A=
          dispatch(this, 'beforeSetup');=0A=
          if (this.setup) this.setup();=0A=
          dispatch(this, 'afterSetup');=0A=
        }=0A=
        if (this.state =3D=3D=3D "running") {=0A=
          pos =3D (this.options.transition(pos) * this.fromToDelta) + =
this.options.from;=0A=
          this.position =3D pos;=0A=
          dispatch(this, 'beforeUpdate');=0A=
          if (this.update) this.update(pos);=0A=
          dispatch(this, 'afterUpdate');=0A=
        }=0A=
      };=0A=
    })();=0A=
=0A=
    this.event('beforeStart');=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).add(this);=0A=
  },=0A=
  loop: function(timePos) {=0A=
    if (timePos >=3D this.startOn) {=0A=
      if (timePos >=3D this.finishOn) {=0A=
        this.render(1.0);=0A=
        this.cancel();=0A=
        this.event('beforeFinish');=0A=
        if (this.finish) this.finish();=0A=
        this.event('afterFinish');=0A=
        return;=0A=
      }=0A=
      var pos   =3D (timePos - this.startOn) / this.totalTime,=0A=
          frame =3D (pos * this.totalFrames).round();=0A=
      if (frame > this.currentFrame) {=0A=
        this.render(pos);=0A=
        this.currentFrame =3D frame;=0A=
      }=0A=
    }=0A=
  },=0A=
  cancel: function() {=0A=
    if (!this.options.sync)=0A=
      Effect.Queues.get(Object.isString(this.options.queue) ?=0A=
        'global' : this.options.queue.scope).remove(this);=0A=
    this.state =3D 'finished';=0A=
  },=0A=
  event: function(eventName) {=0A=
    if (this.options[eventName + 'Internal']) this.options[eventName + =
'Internal'](this);=0A=
    if (this.options[eventName]) this.options[eventName](this);=0A=
  },=0A=
  inspect: function() {=0A=
    var data =3D $H();=0A=
    for(property in this)=0A=
      if (!Object.isFunction(this[property])) data.set(property, =
this[property]);=0A=
    return '#<Effect:' + data.inspect() + ',options:' + =
$H(this.options).inspect() + '>';=0A=
  }=0A=
});=0A=
=0A=
Effect.Parallel =3D Class.create(Effect.Base, {=0A=
  initialize: function(effects) {=0A=
    this.effects =3D effects || [];=0A=
    this.start(arguments[1]);=0A=
  },=0A=
  update: function(position) {=0A=
    this.effects.invoke('render', position);=0A=
  },=0A=
  finish: function(position) {=0A=
    this.effects.each( function(effect) {=0A=
      effect.render(1.0);=0A=
      effect.cancel();=0A=
      effect.event('beforeFinish');=0A=
      if (effect.finish) effect.finish(position);=0A=
      effect.event('afterFinish');=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
Effect.Tween =3D Class.create(Effect.Base, {=0A=
  initialize: function(object, from, to) {=0A=
    object =3D Object.isString(object) ? $(object) : object;=0A=
    var args =3D $A(arguments), method =3D args.last(),=0A=
      options =3D args.length =3D=3D 5 ? args[3] : null;=0A=
    this.method =3D Object.isFunction(method) ? method.bind(object) :=0A=
      Object.isFunction(object[method]) ? object[method].bind(object) :=0A=
      function(value) { object[method] =3D value };=0A=
    this.start(Object.extend({ from: from, to: to }, options || { }));=0A=
  },=0A=
  update: function(position) {=0A=
    this.method(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Event =3D Class.create(Effect.Base, {=0A=
  initialize: function() {=0A=
    this.start(Object.extend({ duration: 0 }, arguments[0] || { }));=0A=
  },=0A=
  update: Prototype.emptyFunction=0A=
});=0A=
=0A=
Effect.Opacity =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    // make this work on IE on elements without 'layout'=0A=
    if (Prototype.Browser.IE && (!this.element.currentStyle.hasLayout))=0A=
      this.element.setStyle({zoom: 1});=0A=
    var options =3D Object.extend({=0A=
      from: this.element.getOpacity() || 0.0,=0A=
      to:   1.0=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setOpacity(position);=0A=
  }=0A=
});=0A=
=0A=
Effect.Move =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      x:    0,=0A=
      y:    0,=0A=
      mode: 'relative'=0A=
    }, arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.element.makePositioned();=0A=
    this.originalLeft =3D parseFloat(this.element.getStyle('left') || =
'0');=0A=
    this.originalTop  =3D parseFloat(this.element.getStyle('top')  || =
'0');=0A=
    if (this.options.mode =3D=3D 'absolute') {=0A=
      this.options.x =3D this.options.x - this.originalLeft;=0A=
      this.options.y =3D this.options.y - this.originalTop;=0A=
    }=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({=0A=
      left: (this.options.x  * position + this.originalLeft).round() + =
'px',=0A=
      top:  (this.options.y  * position + this.originalTop).round()  + =
'px'=0A=
    });=0A=
  }=0A=
});=0A=
=0A=
// for backwards compatibility=0A=
Effect.MoveBy =3D function(element, toTop, toLeft) {=0A=
  return new Effect.Move(element,=0A=
    Object.extend({ x: toLeft, y: toTop }, arguments[3] || { }));=0A=
};=0A=
=0A=
Effect.Scale =3D Class.create(Effect.Base, {=0A=
  initialize: function(element, percent) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      scaleX: true,=0A=
      scaleY: true,=0A=
      scaleContent: true,=0A=
      scaleFromCenter: false,=0A=
      scaleMode: 'box',        // 'box' or 'contents' or { } with =
provided values=0A=
      scaleFrom: 100.0,=0A=
      scaleTo:   percent=0A=
    }, arguments[2] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    this.restoreAfterFinish =3D this.options.restoreAfterFinish || false;=0A=
    this.elementPositioning =3D this.element.getStyle('position');=0A=
=0A=
    this.originalStyle =3D { };=0A=
    ['top','left','width','height','fontSize'].each( function(k) {=0A=
      this.originalStyle[k] =3D this.element.style[k];=0A=
    }.bind(this));=0A=
=0A=
    this.originalTop  =3D this.element.offsetTop;=0A=
    this.originalLeft =3D this.element.offsetLeft;=0A=
=0A=
    var fontSize =3D this.element.getStyle('font-size') || '100%';=0A=
    ['em','px','%','pt'].each( function(fontSizeType) {=0A=
      if (fontSize.indexOf(fontSizeType)>0) {=0A=
        this.fontSize     =3D parseFloat(fontSize);=0A=
        this.fontSizeType =3D fontSizeType;=0A=
      }=0A=
    }.bind(this));=0A=
=0A=
    this.factor =3D (this.options.scaleTo - this.options.scaleFrom)/100;=0A=
=0A=
    this.dims =3D null;=0A=
    if (this.options.scaleMode=3D=3D'box')=0A=
      this.dims =3D [this.element.offsetHeight, =
this.element.offsetWidth];=0A=
    if (/^content/.test(this.options.scaleMode))=0A=
      this.dims =3D [this.element.scrollHeight, =
this.element.scrollWidth];=0A=
    if (!this.dims)=0A=
      this.dims =3D [this.options.scaleMode.originalHeight,=0A=
                   this.options.scaleMode.originalWidth];=0A=
  },=0A=
  update: function(position) {=0A=
    var currentScale =3D (this.options.scaleFrom/100.0) + (this.factor * =
position);=0A=
    if (this.options.scaleContent && this.fontSize)=0A=
      this.element.setStyle({fontSize: this.fontSize * currentScale + =
this.fontSizeType });=0A=
    this.setDimensions(this.dims[0] * currentScale, this.dims[1] * =
currentScale);=0A=
  },=0A=
  finish: function(position) {=0A=
    if (this.restoreAfterFinish) =
this.element.setStyle(this.originalStyle);=0A=
  },=0A=
  setDimensions: function(height, width) {=0A=
    var d =3D { };=0A=
    if (this.options.scaleX) d.width =3D width.round() + 'px';=0A=
    if (this.options.scaleY) d.height =3D height.round() + 'px';=0A=
    if (this.options.scaleFromCenter) {=0A=
      var topd  =3D (height - this.dims[0])/2;=0A=
      var leftd =3D (width  - this.dims[1])/2;=0A=
      if (this.elementPositioning =3D=3D 'absolute') {=0A=
        if (this.options.scaleY) d.top =3D this.originalTop-topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D this.originalLeft-leftd + =
'px';=0A=
      } else {=0A=
        if (this.options.scaleY) d.top =3D -topd + 'px';=0A=
        if (this.options.scaleX) d.left =3D -leftd + 'px';=0A=
      }=0A=
    }=0A=
    this.element.setStyle(d);=0A=
  }=0A=
});=0A=
=0A=
Effect.Highlight =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({ startcolor: '#ffff99' }, =
arguments[1] || { });=0A=
    this.start(options);=0A=
  },=0A=
  setup: function() {=0A=
    // Prevent executing on elements not in the layout flow=0A=
    if (this.element.getStyle('display')=3D=3D'none') { this.cancel(); =
return; }=0A=
    // Disable background image during the effect=0A=
    this.oldStyle =3D { };=0A=
    if (!this.options.keepBackgroundImage) {=0A=
      this.oldStyle.backgroundImage =3D =
this.element.getStyle('background-image');=0A=
      this.element.setStyle({backgroundImage: 'none'});=0A=
    }=0A=
    if (!this.options.endcolor)=0A=
      this.options.endcolor =3D =
this.element.getStyle('background-color').parseColor('#ffffff');=0A=
    if (!this.options.restorecolor)=0A=
      this.options.restorecolor =3D =
this.element.getStyle('background-color');=0A=
    // init color calculations=0A=
    this._base  =3D $R(0,2).map(function(i){ return =
parseInt(this.options.startcolor.slice(i*2+1,i*2+3),16) }.bind(this));=0A=
    this._delta =3D $R(0,2).map(function(i){ return =
parseInt(this.options.endcolor.slice(i*2+1,i*2+3),16)-this._base[i] =
}.bind(this));=0A=
  },=0A=
  update: function(position) {=0A=
    this.element.setStyle({backgroundColor: =
$R(0,2).inject('#',function(m,v,i){=0A=
      return =
m+((this._base[i]+(this._delta[i]*position)).round().toColorPart()); =
}.bind(this)) });=0A=
  },=0A=
  finish: function() {=0A=
    this.element.setStyle(Object.extend(this.oldStyle, {=0A=
      backgroundColor: this.options.restorecolor=0A=
    }));=0A=
  }=0A=
});=0A=
=0A=
Effect.ScrollTo =3D function(element) {=0A=
  var options =3D arguments[1] || { },=0A=
  scrollOffsets =3D document.viewport.getScrollOffsets(),=0A=
  elementOffsets =3D $(element).cumulativeOffset();=0A=
=0A=
  if (options.offset) elementOffsets[1] +=3D options.offset;=0A=
=0A=
  return new Effect.Tween(null,=0A=
    scrollOffsets.top,=0A=
    elementOffsets[1],=0A=
    options,=0A=
    function(p){ scrollTo(scrollOffsets.left, p.round()); }=0A=
  );=0A=
};=0A=
=0A=
/* ------------- combination effects ------------- */=0A=
=0A=
Effect.Fade =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  var options =3D Object.extend({=0A=
    from: element.getOpacity() || 1.0,=0A=
    to:   0.0,=0A=
    afterFinishInternal: function(effect) {=0A=
      if (effect.options.to!=3D0) return;=0A=
      effect.element.hide().setStyle({opacity: oldOpacity});=0A=
    }=0A=
  }, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Appear =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
  from: (element.getStyle('display') =3D=3D 'none' ? 0.0 : =
element.getOpacity() || 0.0),=0A=
  to:   1.0,=0A=
  // force Safari to render floated elements properly=0A=
  afterFinishInternal: function(effect) {=0A=
    effect.element.forceRerendering();=0A=
  },=0A=
  beforeSetup: function(effect) {=0A=
    effect.element.setOpacity(effect.options.from).show();=0A=
  }}, arguments[1] || { });=0A=
  return new Effect.Opacity(element,options);=0A=
};=0A=
=0A=
Effect.Puff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    opacity: element.getInlineOpacity(),=0A=
    position: element.getStyle('position'),=0A=
    top:  element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height=0A=
  };=0A=
  return new Effect.Parallel(=0A=
   [ new Effect.Scale(element, 200,=0A=
      { sync: true, scaleFromCenter: true, scaleContent: true, =
restoreAfterFinish: true }),=0A=
     new Effect.Opacity(element, { sync: true, to: 0.0 } ) ],=0A=
     Object.extend({ duration: 1.0,=0A=
      beforeSetupInternal: function(effect) {=0A=
        Position.absolutize(effect.effects[0].element);=0A=
      },=0A=
      afterFinishInternal: function(effect) {=0A=
         effect.effects[0].element.hide().setStyle(oldStyle); }=0A=
     }, arguments[1] || { })=0A=
   );=0A=
};=0A=
=0A=
Effect.BlindUp =3D function(element) {=0A=
  element =3D $(element);=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 0,=0A=
    Object.extend({ scaleContent: false,=0A=
      scaleX: false,=0A=
      restoreAfterFinish: true,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping();=0A=
      }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.BlindDown =3D function(element) {=0A=
  element =3D $(element);=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: 0,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping();=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.SwitchOff =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldOpacity =3D element.getInlineOpacity();=0A=
  return new Effect.Appear(element, Object.extend({=0A=
    duration: 0.4,=0A=
    from: 0,=0A=
    transition: Effect.Transitions.flicker,=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Scale(effect.element, 1, {=0A=
        duration: 0.3, scaleFromCenter: true,=0A=
        scaleX: false, scaleContent: false, restoreAfterFinish: true,=0A=
        beforeSetup: function(effect) {=0A=
          effect.element.makePositioned().makeClipping();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.element.hide().undoClipping().undoPositioned().setStyle({opacity: =
oldOpacity});=0A=
        }=0A=
      });=0A=
    }=0A=
  }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.DropOut =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left'),=0A=
    opacity: element.getInlineOpacity() };=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Move(element, {x: 0, y: 100, sync: true }),=0A=
      new Effect.Opacity(element, { sync: true, to: 0.0 }) ],=0A=
    Object.extend(=0A=
      { duration: 0.5,=0A=
        beforeSetup: function(effect) {=0A=
          effect.effects[0].element.makePositioned();=0A=
        },=0A=
        afterFinishInternal: function(effect) {=0A=
          =
effect.effects[0].element.hide().undoPositioned().setStyle(oldStyle);=0A=
        }=0A=
      }, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Shake =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    distance: 20,=0A=
    duration: 0.5=0A=
  }, arguments[1] || {});=0A=
  var distance =3D parseFloat(options.distance);=0A=
  var split =3D parseFloat(options.duration) / 10.0;=0A=
  var oldStyle =3D {=0A=
    top: element.getStyle('top'),=0A=
    left: element.getStyle('left') };=0A=
    return new Effect.Move(element,=0A=
      { x:  distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x:  distance*2, y: 0, duration: split*2,  afterFinishInternal: =
function(effect) {=0A=
    new Effect.Move(effect.element,=0A=
      { x: -distance, y: 0, duration: split, afterFinishInternal: =
function(effect) {=0A=
        effect.element.undoPositioned().setStyle(oldStyle);=0A=
  }}); }}); }}); }}); }}); }});=0A=
};=0A=
=0A=
Effect.SlideDown =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  // SlideDown need to have the content of the element wrapped in a =
container element with fixed height!=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, 100, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleFrom: window.opera ? 0 : 1,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().setStyle({height: '0px'}).show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom}); }=0A=
    }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
Effect.SlideUp =3D function(element) {=0A=
  element =3D $(element).cleanWhitespace();=0A=
  var oldInnerBottom =3D element.down().getStyle('bottom');=0A=
  var elementDimensions =3D element.getDimensions();=0A=
  return new Effect.Scale(element, window.opera ? 0 : 1,=0A=
   Object.extend({ scaleContent: false,=0A=
    scaleX: false,=0A=
    scaleMode: 'box',=0A=
    scaleFrom: 100,=0A=
    scaleMode: {originalHeight: elementDimensions.height, originalWidth: =
elementDimensions.width},=0A=
    restoreAfterFinish: true,=0A=
    afterSetup: function(effect) {=0A=
      effect.element.makePositioned();=0A=
      effect.element.down().makePositioned();=0A=
      if (window.opera) effect.element.setStyle({top: ''});=0A=
      effect.element.makeClipping().show();=0A=
    },=0A=
    afterUpdateInternal: function(effect) {=0A=
      effect.element.down().setStyle({bottom:=0A=
        (effect.dims[0] - effect.element.clientHeight) + 'px' });=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping().undoPositioned();=0A=
      effect.element.down().undoPositioned().setStyle({bottom: =
oldInnerBottom});=0A=
    }=0A=
   }, arguments[1] || { })=0A=
  );=0A=
};=0A=
=0A=
// Bug in opera makes the TD containing this element expand for a =
instance after finish=0A=
Effect.Squish =3D function(element) {=0A=
  return new Effect.Scale(element, window.opera ? 1 : 0, {=0A=
    restoreAfterFinish: true,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.makeClipping();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      effect.element.hide().undoClipping();=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Grow =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.full=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var initialMoveX, initialMoveY;=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      initialMoveX =3D initialMoveY =3D moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D moveY =3D 0;=0A=
      moveX =3D -dims.width;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      initialMoveX =3D moveX =3D 0;=0A=
      initialMoveY =3D dims.height;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      initialMoveX =3D dims.width;=0A=
      initialMoveY =3D dims.height;=0A=
      moveX =3D -dims.width;=0A=
      moveY =3D -dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      initialMoveX =3D dims.width / 2;=0A=
      initialMoveY =3D dims.height / 2;=0A=
      moveX =3D -dims.width / 2;=0A=
      moveY =3D -dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Move(element, {=0A=
    x: initialMoveX,=0A=
    y: initialMoveY,=0A=
    duration: 0.01,=0A=
    beforeSetup: function(effect) {=0A=
      effect.element.hide().makeClipping().makePositioned();=0A=
    },=0A=
    afterFinishInternal: function(effect) {=0A=
      new Effect.Parallel(=0A=
        [ new Effect.Opacity(effect.element, { sync: true, to: 1.0, =
from: 0.0, transition: options.opacityTransition }),=0A=
          new Effect.Move(effect.element, { x: moveX, y: moveY, sync: =
true, transition: options.moveTransition }),=0A=
          new Effect.Scale(effect.element, 100, {=0A=
            scaleMode: { originalHeight: dims.height, originalWidth: =
dims.width },=0A=
            sync: true, scaleFrom: window.opera ? 1 : 0, transition: =
options.scaleTransition, restoreAfterFinish: true})=0A=
        ], Object.extend({=0A=
             beforeSetup: function(effect) {=0A=
               effect.effects[0].element.setStyle({height: =
'0px'}).show();=0A=
             },=0A=
             afterFinishInternal: function(effect) {=0A=
               =
effect.effects[0].element.undoClipping().undoPositioned().setStyle(oldSty=
le);=0A=
             }=0A=
           }, options)=0A=
      );=0A=
    }=0A=
  });=0A=
};=0A=
=0A=
Effect.Shrink =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options =3D Object.extend({=0A=
    direction: 'center',=0A=
    moveTransition: Effect.Transitions.sinoidal,=0A=
    scaleTransition: Effect.Transitions.sinoidal,=0A=
    opacityTransition: Effect.Transitions.none=0A=
  }, arguments[1] || { });=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    height: element.style.height,=0A=
    width: element.style.width,=0A=
    opacity: element.getInlineOpacity() };=0A=
=0A=
  var dims =3D element.getDimensions();=0A=
  var moveX, moveY;=0A=
=0A=
  switch (options.direction) {=0A=
    case 'top-left':=0A=
      moveX =3D moveY =3D 0;=0A=
      break;=0A=
    case 'top-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D 0;=0A=
      break;=0A=
    case 'bottom-left':=0A=
      moveX =3D 0;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'bottom-right':=0A=
      moveX =3D dims.width;=0A=
      moveY =3D dims.height;=0A=
      break;=0A=
    case 'center':=0A=
      moveX =3D dims.width / 2;=0A=
      moveY =3D dims.height / 2;=0A=
      break;=0A=
  }=0A=
=0A=
  return new Effect.Parallel(=0A=
    [ new Effect.Opacity(element, { sync: true, to: 0.0, from: 1.0, =
transition: options.opacityTransition }),=0A=
      new Effect.Scale(element, window.opera ? 1 : 0, { sync: true, =
transition: options.scaleTransition, restoreAfterFinish: true}),=0A=
      new Effect.Move(element, { x: moveX, y: moveY, sync: true, =
transition: options.moveTransition })=0A=
    ], Object.extend({=0A=
         beforeStartInternal: function(effect) {=0A=
           effect.effects[0].element.makePositioned().makeClipping();=0A=
         },=0A=
         afterFinishInternal: function(effect) {=0A=
           =
effect.effects[0].element.hide().undoClipping().undoPositioned().setStyle=
(oldStyle); }=0A=
       }, options)=0A=
  );=0A=
};=0A=
=0A=
Effect.Pulsate =3D function(element) {=0A=
  element =3D $(element);=0A=
  var options    =3D arguments[1] || { },=0A=
    oldOpacity =3D element.getInlineOpacity(),=0A=
    transition =3D options.transition || Effect.Transitions.linear,=0A=
    reverser   =3D function(pos){=0A=
      return 1 - =
transition((-Math.cos((pos*(options.pulses||5)*2)*Math.PI)/2) + .5);=0A=
    };=0A=
=0A=
  return new Effect.Opacity(element,=0A=
    Object.extend(Object.extend({  duration: 2.0, from: 0,=0A=
      afterFinishInternal: function(effect) { =
effect.element.setStyle({opacity: oldOpacity}); }=0A=
    }, options), {transition: reverser}));=0A=
};=0A=
=0A=
Effect.Fold =3D function(element) {=0A=
  element =3D $(element);=0A=
  var oldStyle =3D {=0A=
    top: element.style.top,=0A=
    left: element.style.left,=0A=
    width: element.style.width,=0A=
    height: element.style.height };=0A=
  element.makeClipping();=0A=
  return new Effect.Scale(element, 5, Object.extend({=0A=
    scaleContent: false,=0A=
    scaleX: false,=0A=
    afterFinishInternal: function(effect) {=0A=
    new Effect.Scale(element, 1, {=0A=
      scaleContent: false,=0A=
      scaleY: false,=0A=
      afterFinishInternal: function(effect) {=0A=
        effect.element.hide().undoClipping().setStyle(oldStyle);=0A=
      } });=0A=
  }}, arguments[1] || { }));=0A=
};=0A=
=0A=
Effect.Morph =3D Class.create(Effect.Base, {=0A=
  initialize: function(element) {=0A=
    this.element =3D $(element);=0A=
    if (!this.element) throw(Effect._elementDoesNotExistError);=0A=
    var options =3D Object.extend({=0A=
      style: { }=0A=
    }, arguments[1] || { });=0A=
=0A=
    if (!Object.isString(options.style)) this.style =3D =
$H(options.style);=0A=
    else {=0A=
      if (options.style.include(':'))=0A=
        this.style =3D options.style.parseStyle();=0A=
      else {=0A=
        this.element.addClassName(options.style);=0A=
        this.style =3D $H(this.element.getStyles());=0A=
        this.element.removeClassName(options.style);=0A=
        var css =3D this.element.getStyles();=0A=
        this.style =3D this.style.reject(function(style) {=0A=
          return style.value =3D=3D css[style.key];=0A=
        });=0A=
        options.afterFinishInternal =3D function(effect) {=0A=
          effect.element.addClassName(effect.options.style);=0A=
          effect.transforms.each(function(transform) {=0A=
            effect.element.style[transform.style] =3D '';=0A=
          });=0A=
        };=0A=
      }=0A=
    }=0A=
    this.start(options);=0A=
  },=0A=
=0A=
  setup: function(){=0A=
    function parseColor(color){=0A=
      if (!color || ['rgba(0, 0, 0, 0)','transparent'].include(color)) =
color =3D '#ffffff';=0A=
      color =3D color.parseColor();=0A=
      return $R(0,2).map(function(i){=0A=
        return parseInt( color.slice(i*2+1,i*2+3), 16 );=0A=
      });=0A=
    }=0A=
    this.transforms =3D this.style.map(function(pair){=0A=
      var property =3D pair[0], value =3D pair[1], unit =3D null;=0A=
=0A=
      if (value.parseColor('#zzzzzz') !=3D '#zzzzzz') {=0A=
        value =3D value.parseColor();=0A=
        unit  =3D 'color';=0A=
      } else if (property =3D=3D 'opacity') {=0A=
        value =3D parseFloat(value);=0A=
        if (Prototype.Browser.IE && =
(!this.element.currentStyle.hasLayout))=0A=
          this.element.setStyle({zoom: 1});=0A=
      } else if (Element.CSS_LENGTH.test(value)) {=0A=
          var components =3D value.match(/^([\+\-]?[0-9\.]+)(.*)$/);=0A=
          value =3D parseFloat(components[1]);=0A=
          unit =3D (components.length =3D=3D 3) ? components[2] : null;=0A=
      }=0A=
=0A=
      var originalValue =3D this.element.getStyle(property);=0A=
      return {=0A=
        style: property.camelize(),=0A=
        originalValue: unit=3D=3D'color' ? parseColor(originalValue) : =
parseFloat(originalValue || 0),=0A=
        targetValue: unit=3D=3D'color' ? parseColor(value) : value,=0A=
        unit: unit=0A=
      };=0A=
    }.bind(this)).reject(function(transform){=0A=
      return (=0A=
        (transform.originalValue =3D=3D transform.targetValue) ||=0A=
        (=0A=
          transform.unit !=3D 'color' &&=0A=
          (isNaN(transform.originalValue) || =
isNaN(transform.targetValue))=0A=
        )=0A=
      );=0A=
    });=0A=
  },=0A=
  update: function(position) {=0A=
    var style =3D { }, transform, i =3D this.transforms.length;=0A=
    while(i--)=0A=
      style[(transform =3D this.transforms[i]).style] =3D=0A=
        transform.unit=3D=3D'color' ? '#'+=0A=
          (Math.round(transform.originalValue[0]+=0A=
            =
(transform.targetValue[0]-transform.originalValue[0])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[1]+=0A=
            =
(transform.targetValue[1]-transform.originalValue[1])*position)).toColorP=
art() +=0A=
          (Math.round(transform.originalValue[2]+=0A=
            =
(transform.targetValue[2]-transform.originalValue[2])*position)).toColorP=
art() :=0A=
        (transform.originalValue +=0A=
          (transform.targetValue - transform.originalValue) * =
position).toFixed(3) +=0A=
            (transform.unit =3D=3D=3D null ? '' : transform.unit);=0A=
    this.element.setStyle(style, true);=0A=
  }=0A=
});=0A=
=0A=
Effect.Transform =3D Class.create({=0A=
  initialize: function(tracks){=0A=
    this.tracks  =3D [];=0A=
    this.options =3D arguments[1] || { };=0A=
    this.addTracks(tracks);=0A=
  },=0A=
  addTracks: function(tracks){=0A=
    tracks.each(function(track){=0A=
      track =3D $H(track);=0A=
      var data =3D track.values().first();=0A=
      this.tracks.push($H({=0A=
        ids:     track.keys().first(),=0A=
        effect:  Effect.Morph,=0A=
        options: { style: data }=0A=
      }));=0A=
    }.bind(this));=0A=
    return this;=0A=
  },=0A=
  play: function(){=0A=
    return new Effect.Parallel(=0A=
      this.tracks.map(function(track){=0A=
        var ids =3D track.get('ids'), effect =3D track.get('effect'), =
options =3D track.get('options');=0A=
        var elements =3D [$(ids) || $$(ids)].flatten();=0A=
        return elements.map(function(e){ return new effect(e, =
Object.extend({ sync:true }, options)) });=0A=
      }).flatten(),=0A=
      this.options=0A=
    );=0A=
  }=0A=
});=0A=
=0A=
Element.CSS_PROPERTIES =3D $w(=0A=
  'backgroundColor backgroundPosition borderBottomColor =
borderBottomStyle ' +=0A=
  'borderBottomWidth borderLeftColor borderLeftStyle borderLeftWidth ' +=0A=
  'borderRightColor borderRightStyle borderRightWidth borderSpacing ' +=0A=
  'borderTopColor borderTopStyle borderTopWidth bottom clip color ' +=0A=
  'fontSize fontWeight height left letterSpacing lineHeight ' +=0A=
  'marginBottom marginLeft marginRight marginTop markerOffset maxHeight =
'+=0A=
  'maxWidth minHeight minWidth opacity outlineColor outlineOffset ' +=0A=
  'outlineWidth paddingBottom paddingLeft paddingRight paddingTop ' +=0A=
  'right textIndent top width wordSpacing zIndex');=0A=
=0A=
Element.CSS_LENGTH =3D =
/^(([\+\-]?[0-9\.]+)(em|ex|px|in|cm|mm|pt|pc|\%))|0$/;=0A=
=0A=
String.__parseStyleElement =3D document.createElement('div');=0A=
String.prototype.parseStyle =3D function(){=0A=
  var style, styleRules =3D $H();=0A=
  if (Prototype.Browser.WebKit)=0A=
    style =3D new Element('div',{style:this}).style;=0A=
  else {=0A=
    String.__parseStyleElement.innerHTML =3D '<div style=3D"' + this + =
'"></div>';=0A=
    style =3D String.__parseStyleElement.childNodes[0].style;=0A=
  }=0A=
=0A=
  Element.CSS_PROPERTIES.each(function(property){=0A=
    if (style[property]) styleRules.set(property, style[property]);=0A=
  });=0A=
=0A=
  if (Prototype.Browser.IE && this.include('opacity'))=0A=
    styleRules.set('opacity', =
this.match(/opacity:\s*((?:0|1)?(?:\.\d*)?)/)[1]);=0A=
=0A=
  return styleRules;=0A=
};=0A=
=0A=
if (document.defaultView && document.defaultView.getComputedStyle) {=0A=
  Element.getStyles =3D function(element) {=0A=
    var css =3D document.defaultView.getComputedStyle($(element), null);=0A=
    return Element.CSS_PROPERTIES.inject({ }, function(styles, property) =
{=0A=
      styles[property] =3D css[property];=0A=
      return styles;=0A=
    });=0A=
  };=0A=
} else {=0A=
  Element.getStyles =3D function(element) {=0A=
    element =3D $(element);=0A=
    var css =3D element.currentStyle, styles;=0A=
    styles =3D Element.CSS_PROPERTIES.inject({ }, function(results, =
property) {=0A=
      results[property] =3D css[property];=0A=
      return results;=0A=
    });=0A=
    if (!styles.opacity) styles.opacity =3D element.getOpacity();=0A=
    return styles;=0A=
  };=0A=
}=0A=
=0A=
Effect.Methods =3D {=0A=
  morph: function(element, style) {=0A=
    element =3D $(element);=0A=
    new Effect.Morph(element, Object.extend({ style: style }, =
arguments[2] || { }));=0A=
    return element;=0A=
  },=0A=
  visualEffect: function(element, effect, options) {=0A=
    element =3D $(element);=0A=
    var s =3D effect.dasherize().camelize(), klass =3D =
s.charAt(0).toUpperCase() + s.substring(1);=0A=
    new Effect[klass](element, options);=0A=
    return element;=0A=
  },=0A=
  highlight: function(element, options) {=0A=
    element =3D $(element);=0A=
    new Effect.Highlight(element, options);=0A=
    return element;=0A=
  }=0A=
};=0A=
=0A=
$w('fade appear grow shrink fold blindUp blindDown slideUp slideDown '+=0A=
  'pulsate shake puff squish switchOff dropOut').each(=0A=
  function(effect) {=0A=
    Effect.Methods[effect] =3D function(element, options){=0A=
      element =3D $(element);=0A=
      Effect[effect.charAt(0).toUpperCase() + =
effect.substring(1)](element, options);=0A=
      return element;=0A=
    };=0A=
  }=0A=
);=0A=
=0A=
$w('getInlineOpacity forceRerendering setContentZoom collectTextNodes =
collectTextNodesIgnoreClass getStyles').each(=0A=
  function(f) { Effect.Methods[f] =3D Element[f]; }=0A=
);=0A=
=0A=
Element.addMethods(Effect.Methods);
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/plugins/lightbox-2/lightbox.js?ver=1.8

// For original FULL CODE COMMENTS grab the original lightbox source: =
http://www.huddletogether.com/projects/lightbox2/releases/lightbox2.03.3.=
zip=0A=
//	Lightbox v2.03.3 by Lokesh Dhakar=0A=
//	http://huddletogether.com/projects/lightbox2/=0A=
//	Licensed under the Creative Commons Attribution 2.5 License=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
//	Configuration=0A=
var overlayOpacity =3D 0.8;	// controls transparency of shadow overlay=0A=
var animate =3D true;			// toggles resizing animations=0A=
var resizeSpeed =3D 9;		// controls the speed of the image resizing =
animations (1=3Dslowest and 10=3Dfastest)=0A=
var borderSize =3D 10;		//if you adjust the padding in the CSS, you will =
need to update this variable=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
//	Global Variables=0A=
var imageArray =3D new Array;=0A=
var activeImage;=0A=
if(animate =3D=3D true){=0A=
	overlayDuration =3D 0.2;	// shadow fade in/out duration=0A=
	if(resizeSpeed > 10){ resizeSpeed =3D 10;}=0A=
	if(resizeSpeed < 1){ resizeSpeed =3D 1;}=0A=
	resizeDuration =3D (11 - resizeSpeed) * 0.15;=0A=
} else { =0A=
	overlayDuration =3D 0;=0A=
	resizeDuration =3D 0;=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
//	Additional methods for Element=0A=
Object.extend(Element, {=0A=
	getWidth: function(element) {=0A=
	   	element =3D $(element);=0A=
	   	return element.offsetWidth; =0A=
	},=0A=
	setWidth: function(element,w) {=0A=
	   	element =3D $(element);=0A=
    	element.style.width =3D w +"px";=0A=
	},=0A=
	setHeight: function(element,h) {=0A=
   		element =3D $(element);=0A=
    	element.style.height =3D h +"px";=0A=
	},=0A=
	setTop: function(element,t) {=0A=
	   	element =3D $(element);=0A=
    	element.style.top =3D t +"px";=0A=
	},=0A=
	setLeft: function(element,l) {=0A=
	   	element =3D $(element);=0A=
    	element.style.left =3D l +"px";=0A=
	},=0A=
	setSrc: function(element,src) {=0A=
    	element =3D $(element);=0A=
    	element.src =3D src; =0A=
	},=0A=
	setHref: function(element,href) {=0A=
    	element =3D $(element);=0A=
    	element.href =3D href; =0A=
	},=0A=
	setInnerHTML: function(element,content) {=0A=
		element =3D $(element);=0A=
		element.innerHTML =3D content;=0A=
	}=0A=
});=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
//	Extending built-in Array object=0A=
//	- array.removeDuplicates()=0A=
//	- array.empty()=0A=
Array.prototype.removeDuplicates =3D function () {=0A=
    for(i =3D 0; i < this.length; i++){=0A=
        for(j =3D this.length-1; j>i; j--){        =0A=
            if(this[i][0] =3D=3D this[j][0]){=0A=
                this.splice(j,1);=0A=
            }=0A=
        }=0A=
    }=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
Array.prototype.empty =3D function () {=0A=
	for(i =3D 0; i <=3D this.length; i++){=0A=
		this.shift();=0A=
	}=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
var Lightbox =3D Class.create();=0A=
Lightbox.prototype =3D {=0A=
	// initialize()=0A=
	// Constructor runs on completion of the DOM loading. Calls =
updateImageList and then=0A=
	// the function inserts html at the bottom of the page which is used to =
display the shadow =0A=
	// overlay and the image container.=0A=
	initialize: function() {	=0A=
		=0A=
		this.updateImageList();=0A=
		var objBody =3D document.getElementsByTagName("body").item(0);=0A=
		var objOverlay =3D document.createElement("div");=0A=
		objOverlay.setAttribute('id','stimuli_overlay');=0A=
		objOverlay.style.display =3D 'none';=0A=
		objOverlay.onclick =3D function() { myLightbox.end(); }=0A=
		objBody.appendChild(objOverlay);=0A=
		var objLightbox =3D document.createElement("div");=0A=
		objLightbox.setAttribute('id','stimuli_lightbox');=0A=
		objLightbox.style.display =3D 'none';=0A=
		objLightbox.onclick =3D function(e) {	// close Lightbox if user clicks =
shadow overlay=0A=
			if (!e) var e =3D window.event;=0A=
			var clickObj =3D Event.element(e).id;=0A=
			if ( clickObj =3D=3D 'stimuli_lightbox') {=0A=
				myLightbox.end();=0A=
			}=0A=
		};=0A=
		objBody.appendChild(objLightbox);=0A=
		var objOuterImageContainer =3D document.createElement("div");=0A=
		=
objOuterImageContainer.setAttribute('id','stimuli_outerImageContainer');=0A=
		objLightbox.appendChild(objOuterImageContainer);=0A=
		// When Lightbox starts it will resize itself from 250 by 250 to the =
current image dimension.=0A=
		// If animations are turned off, it will be hidden as to prevent a =
flicker of a=0A=
		// white 250 by 250 box.=0A=
		if(animate){=0A=
			Element.setWidth('stimuli_outerImageContainer', 250);=0A=
			Element.setHeight('stimuli_outerImageContainer', 250);			=0A=
		} else {=0A=
			Element.setWidth('stimuli_outerImageContainer', 1);=0A=
			Element.setHeight('stimuli_outerImageContainer', 1);			=0A=
		}=0A=
		var objImageContainer =3D document.createElement("div");=0A=
		objImageContainer.setAttribute('id','stimuli_imageContainer');=0A=
		objOuterImageContainer.appendChild(objImageContainer);=0A=
	=0A=
		var objLightboxImage =3D document.createElement("img");=0A=
		objLightboxImage.setAttribute('id','stimuli_lightboxImage');=0A=
		objImageContainer.appendChild(objLightboxImage);=0A=
	=0A=
		var objHoverNav =3D document.createElement("div");=0A=
		objHoverNav.setAttribute('id','stimuli_hoverNav');=0A=
		objImageContainer.appendChild(objHoverNav);=0A=
	=0A=
		var objPrevLink =3D document.createElement("a");=0A=
		objPrevLink.setAttribute('id','stimuli_prevLink');=0A=
		objPrevLink.setAttribute('href','#');=0A=
		objHoverNav.appendChild(objPrevLink);=0A=
		=0A=
		var objNextLink =3D document.createElement("a");=0A=
		objNextLink.setAttribute('id','stimuli_nextLink');=0A=
		objNextLink.setAttribute('href','#');=0A=
		objHoverNav.appendChild(objNextLink);=0A=
	=0A=
		var objLoading =3D document.createElement("div");=0A=
		objLoading.setAttribute('id','stimuli_loading');=0A=
		objImageContainer.appendChild(objLoading);=0A=
	=0A=
		var objLoadingLink =3D document.createElement("a");=0A=
		objLoadingLink.setAttribute('id','stimuli_loadingLink');=0A=
		objLoadingLink.setAttribute('href','#');=0A=
		objLoadingLink.onclick =3D function() { myLightbox.end(); return =
false; }=0A=
		objLoading.appendChild(objLoadingLink);=0A=
=0A=
		var objImageDataContainer =3D document.createElement("div");=0A=
		objImageDataContainer.setAttribute('id','stimuli_imageDataContainer');=0A=
		objLightbox.appendChild(objImageDataContainer);=0A=
		var objImageData =3D document.createElement("div");=0A=
		objImageData.setAttribute('id','stimuli_imageData');=0A=
		objImageDataContainer.appendChild(objImageData);=0A=
	=0A=
		var objImageDetails =3D document.createElement("div");=0A=
		objImageDetails.setAttribute('id','stimuli_imageDetails');=0A=
		objImageData.appendChild(objImageDetails);=0A=
	=0A=
		var objCaption =3D document.createElement("span");=0A=
		objCaption.setAttribute('id','stimuli_caption');=0A=
		objImageDetails.appendChild(objCaption);=0A=
	=0A=
		var objNumberDisplay =3D document.createElement("span");=0A=
		objNumberDisplay.setAttribute('id','stimuli_numberDisplay');=0A=
		objImageDetails.appendChild(objNumberDisplay);=0A=
		=0A=
		var objBottomNav =3D document.createElement("div");=0A=
		objBottomNav.setAttribute('id','stimuli_bottomNav');=0A=
		objImageData.appendChild(objBottomNav);=0A=
	=0A=
		var objBottomNavCloseLink =3D document.createElement("a");=0A=
		objBottomNavCloseLink.setAttribute('id','stimuli_bottomNavClose');=0A=
		objBottomNavCloseLink.setAttribute('href','#');=0A=
		objBottomNavCloseLink.onclick =3D function() { myLightbox.end(); =
return false; }=0A=
		objBottomNav.appendChild(objBottomNavCloseLink);=0A=
	},=0A=
	// updateImageList()=0A=
	// Loops through anchor tags looking for 'lightbox' references and =
applies onclick=0A=
	// events to appropriate links. You can rerun after dynamically adding =
images w/ajax.=0A=
	updateImageList: function() {	=0A=
		if (!document.getElementsByTagName){ return; }=0A=
		var anchors =3D document.getElementsByTagName('a');=0A=
		var areas =3D document.getElementsByTagName('area');=0A=
		// loop through all anchor tags=0A=
		for (var i=3D0; i<anchors.length; i++){=0A=
			var anchor =3D anchors[i];=0A=
			var relAttribute =3D String(anchor.getAttribute('rel'));=0A=
			// use the string.match() method to catch 'lightbox' references in =
the rel attribute=0A=
			if (anchor.getAttribute('href') && =
(relAttribute.toLowerCase().match('lightbox'))){=0A=
				anchor.onclick =3D function () {myLightbox.start(this); return =
false;}=0A=
			}=0A=
		}=0A=
		// loop through all area tags=0A=
		// todo: combine anchor & area tag loops=0A=
		for (var i=3D0; i< areas.length; i++){=0A=
			var area =3D areas[i];=0A=
			var relAttribute =3D String(area.getAttribute('rel'));=0A=
			// use the string.match() method to catch 'lightbox' references in =
the rel attribute=0A=
			if (area.getAttribute('href') && =
(relAttribute.toLowerCase().match('lightbox'))){=0A=
				area.onclick =3D function () {myLightbox.start(this); return false;}=0A=
			}=0A=
		}=0A=
	},=0A=
	//	start()=0A=
	//	Display overlay and lightbox. If image is part of a set, add =
siblings to imageArray.=0A=
	start: function(imageLink) {	=0A=
		hideSelectBoxes();=0A=
		hideFlash();=0A=
		// stretch overlay to fill page and fade in=0A=
		var arrayPageSize =3D getPageSize();=0A=
		Element.setWidth('stimuli_overlay', arrayPageSize[0]);=0A=
		Element.setHeight('stimuli_overlay', arrayPageSize[1]);=0A=
		new Effect.Appear('stimuli_overlay', { duration: overlayDuration, =
from: 0.0, to: overlayOpacity });=0A=
		imageArray =3D [];=0A=
		imageNum =3D 0;		=0A=
		if (!document.getElementsByTagName){ return; }=0A=
		var anchors =3D document.getElementsByTagName( imageLink.tagName);=0A=
		var stimuli_image_title =3D "";=0A=
		// if image is NOT part of a set... ie not lightbox[someset]=0A=
		if((imageLink.getAttribute('rel') =3D=3D 'lightbox')){=0A=
			// check for title-less links, and grab image title if needed=0A=
			stimuli_image_title =3D "";=0A=
			var possibleLightboxImageTitles =3D [imageLink.getAttribute('title'), =
imageLink.childNodes[0]['title'], imageLink.childNodes[0]['alt'], " "];=0A=
			var possible_Int =3D 0;=0A=
			while (stimuli_image_title =3D=3D ("")) {=0A=
				stimuli_image_title =3D possibleLightboxImageTitles[possible_Int];=0A=
				possible_Int++;=0A=
			}=0A=
			// add single image to imageArray=0A=
			imageArray.push(new Array(imageLink.getAttribute('href'), =
stimuli_image_title));=0A=
		} else {=0A=
		// if image is part of a set... ie lightbox[someset]=0A=
			// loop through anchors, find other images in set, and add them to =
imageArray=0A=
			for (var i=3D0; i<anchors.length; i++){=0A=
				var anchor =3D anchors[i];=0A=
				if (anchor.getAttribute('href') && (anchor.getAttribute('rel') =
=3D=3D imageLink.getAttribute('rel'))){=0A=
					// check for title-less links, and grab image title if needed=0A=
					stimuli_image_title =3D "";=0A=
					var possibleLightboxImageTitles =3D [ anchor['title'], =
anchor.childNodes[0]['title'], anchor.childNodes[0]['alt'], " " ];=0A=
					var possible_Int =3D 0;=0A=
					while (stimuli_image_title =3D=3D ("")) {=0A=
						stimuli_image_title =3D possibleLightboxImageTitles[possible_Int];=0A=
						possible_Int++;=0A=
					}=0A=
					imageArray.push(new Array(anchor.getAttribute('href'), =
stimuli_image_title));=0A=
				}=0A=
			}=0A=
			imageArray.removeDuplicates();=0A=
			while(imageArray[imageNum][0] !=3D imageLink.getAttribute('href')) { =
imageNum++;}=0A=
		}=0A=
		// calculate top and left offset for the lightbox =0A=
		var arrayPageScroll =3D getPageScroll();=0A=
		var lightboxTop =3D arrayPageScroll[1] + (arrayPageSize[3] / 10);=0A=
		var lightboxLeft =3D arrayPageScroll[0];=0A=
		Element.setTop('stimuli_lightbox', lightboxTop);=0A=
		Element.setLeft('stimuli_lightbox', lightboxLeft);=0A=
		Element.show('stimuli_lightbox');=0A=
		this.changeImage(imageNum);=0A=
	},=0A=
	//	changeImage()=0A=
	//	Hide most elements and preload image in preparation for resizing =
image container.=0A=
	changeImage: function(imageNum) {	=0A=
		activeImage =3D imageNum;	// update global var=0A=
		// hide elements during transition=0A=
		if(animate){ Element.show('stimuli_loading');}=0A=
		Element.hide('stimuli_lightboxImage');=0A=
		Element.hide('stimuli_hoverNav');=0A=
		Element.hide('stimuli_prevLink');=0A=
		Element.hide('stimuli_nextLink');=0A=
		Element.hide('stimuli_imageDataContainer');=0A=
		Element.hide('stimuli_numberDisplay');		=0A=
		imgPreloader =3D new Image();=0A=
		// once image is preloaded, resize image container=0A=
		imgPreloader.onload=3Dfunction(){=0A=
			Element.setSrc('stimuli_lightboxImage', imageArray[activeImage][0]);=0A=
			Element.setWidth('stimuli_lightboxImage', imgPreloader.width);=0A=
			Element.setHeight('stimuli_lightboxImage', imgPreloader.height);=0A=
			myLightbox.resizeImageContainer(imgPreloader.width, =
imgPreloader.height);=0A=
			imgPreloader.onload=3Dfunction(){};	//	clear onLoad, IE behaves =
irratically with animated gifs otherwise =0A=
		}=0A=
		imgPreloader.src =3D imageArray[activeImage][0];=0A=
	},=0A=
	//	resizeImageContainer()=0A=
	resizeImageContainer: function( imgWidth, imgHeight) {=0A=
		// get curren width and height=0A=
		this.widthCurrent =3D Element.getWidth('stimuli_outerImageContainer');=0A=
		this.heightCurrent =3D =
Element.getHeight('stimuli_outerImageContainer');=0A=
		// get new width and height=0A=
		var widthNew =3D (imgWidth  + (borderSize * 2));=0A=
		var heightNew =3D (imgHeight  + (borderSize * 2));=0A=
		// scalars based on change from old to new=0A=
		this.xScale =3D ( widthNew / this.widthCurrent) * 100;=0A=
		this.yScale =3D ( heightNew / this.heightCurrent) * 100;=0A=
		// calculate size difference between new and old image, and resize if =
necessary=0A=
		wDiff =3D this.widthCurrent - widthNew;=0A=
		hDiff =3D this.heightCurrent - heightNew;=0A=
		if(!( hDiff =3D=3D 0)){ new =
Effect.Scale('stimuli_outerImageContainer', this.yScale, {scaleX: false, =
duration: resizeDuration, queue: 'front'}); }=0A=
		if(!( wDiff =3D=3D 0)){ new =
Effect.Scale('stimuli_outerImageContainer', this.xScale, {scaleY: false, =
delay: resizeDuration, duration: resizeDuration}); }=0A=
		// if new and old image are same size and no scaling transition is =
necessary, =0A=
		// do a quick stimuli_pause to prevent image flicker.=0A=
		if((hDiff =3D=3D 0) && (wDiff =3D=3D 0)){=0A=
			if (navigator.appVersion.indexOf("MSIE")!=3D-1){ stimuli_pause(250); =
} else { stimuli_pause(100);} =0A=
		}=0A=
		Element.setHeight('stimuli_prevLink', imgHeight);=0A=
		Element.setHeight('stimuli_nextLink', imgHeight);=0A=
		Element.setWidth( 'stimuli_imageDataContainer', widthNew);=0A=
		this.showImage();=0A=
	},=0A=
	//	showImage()=0A=
	//	Display image and begin preloading neighbors.=0A=
	showImage: function(){=0A=
		Element.hide('stimuli_loading');=0A=
		new Effect.Appear('stimuli_lightboxImage', { duration: resizeDuration, =
queue: 'end', afterFinish: function(){	myLightbox.updateDetails(); } });=0A=
		this.preloadNeighborImages();=0A=
	},=0A=
	//	updateDetails()=0A=
	//	Display caption, image number, and bottom nav.=0A=
	updateDetails: function() {=0A=
		// if caption is not null=0A=
		if(imageArray[activeImage][1]){=0A=
			Element.show('stimuli_caption');=0A=
			Element.setInnerHTML( 'stimuli_caption', imageArray[activeImage][1]);=0A=
		}=0A=
		// if image is part of set display 'Image x of x' =0A=
		if(imageArray.length > 1){=0A=
			Element.show('stimuli_numberDisplay');=0A=
			Element.setInnerHTML( 'stimuli_numberDisplay', "Image " + =
eval(activeImage + 1) + " of " + imageArray.length);=0A=
		}=0A=
		new Effect.Parallel(=0A=
			[ new Effect.SlideDown( 'stimuli_imageDataContainer', { sync: true, =
duration: resizeDuration, from: 0.0, to: 1.0 }), =0A=
			  new Effect.Appear('stimuli_imageDataContainer', { sync: true, =
duration: resizeDuration }) ], =0A=
			{ duration: resizeDuration, afterFinish: function() {=0A=
				// update overlay size and update nav=0A=
				var arrayPageSize =3D getPageSize();=0A=
				Element.setHeight('stimuli_overlay', arrayPageSize[1]);=0A=
				myLightbox.updateNav();=0A=
				}=0A=
			} =0A=
		);=0A=
	},=0A=
	//	updateNav()=0A=
	//	Display appropriate previous and next hover navigation.=0A=
	updateNav: function() {=0A=
		Element.show('stimuli_hoverNav');				=0A=
		// if not first image in set, display prev image button=0A=
		if(activeImage !=3D 0){=0A=
			Element.show('stimuli_prevLink');=0A=
			document.getElementById('stimuli_prevLink').onclick =3D function() {=0A=
				myLightbox.changeImage(activeImage - 1); return false;=0A=
			}=0A=
		}=0A=
		// if not last image in set, display next image button=0A=
		if(activeImage !=3D (imageArray.length - 1)){=0A=
			Element.show('stimuli_nextLink');=0A=
			document.getElementById('stimuli_nextLink').onclick =3D function() {=0A=
				myLightbox.changeImage(activeImage + 1); return false;=0A=
			}=0A=
		}=0A=
		this.enableKeyboardNav();=0A=
	},=0A=
	//	enableKeyboardNav()=0A=
	enableKeyboardNav: function() {=0A=
		document.onkeydown =3D this.keyboardAction; =0A=
	},=0A=
	//	disableKeyboardNav()=0A=
	disableKeyboardNav: function() {=0A=
		document.onkeydown =3D '';=0A=
	},=0A=
	//	keyboardAction()=0A=
	keyboardAction: function(e) {=0A=
		if (e =3D=3D null) { // ie=0A=
			keycode =3D event.keyCode;=0A=
			escapeKey =3D 27;=0A=
		} else { // mozilla=0A=
			keycode =3D e.keyCode;=0A=
			escapeKey =3D e.DOM_VK_ESCAPE;=0A=
		}=0A=
		key =3D String.fromCharCode(keycode).toLowerCase();=0A=
		if((key =3D=3D 'x') || (key =3D=3D 'o') || (key =3D=3D 'c') || =
(keycode =3D=3D escapeKey)){	// close lightbox=0A=
			myLightbox.end();=0A=
		} else if((key =3D=3D 'p') || (keycode =3D=3D 37)){	// display =
previous image=0A=
			if(activeImage !=3D 0){=0A=
				myLightbox.disableKeyboardNav();=0A=
				myLightbox.changeImage(activeImage - 1);=0A=
			}=0A=
		} else if((key =3D=3D 'n') || (keycode =3D=3D 39)){	// display next =
image=0A=
			if(activeImage !=3D (imageArray.length - 1)){=0A=
				myLightbox.disableKeyboardNav();=0A=
				myLightbox.changeImage(activeImage + 1);=0A=
			}=0A=
		}=0A=
	},=0A=
	//	preloadNeighborImages()=0A=
	//	Preload previous and next images.=0A=
	preloadNeighborImages: function(){=0A=
		if((imageArray.length - 1) > activeImage){=0A=
			preloadNextImage =3D new Image();=0A=
			preloadNextImage.src =3D imageArray[activeImage + 1][0];=0A=
		}=0A=
		if(activeImage > 0){=0A=
			preloadPrevImage =3D new Image();=0A=
			preloadPrevImage.src =3D imageArray[activeImage - 1][0];=0A=
		}=0A=
	},=0A=
	//	end()=0A=
	end: function() {=0A=
		this.disableKeyboardNav();=0A=
		Element.hide('stimuli_lightbox');=0A=
		new Effect.Fade('stimuli_overlay', { duration: overlayDuration});=0A=
		showSelectBoxes();=0A=
		showFlash();=0A=
	}=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
// getPageScroll()=0A=
function getPageScroll(){=0A=
	var xScroll, yScroll;=0A=
	if (self.pageYOffset) {=0A=
		yScroll =3D self.pageYOffset;=0A=
		xScroll =3D self.pageXOffset;=0A=
	} else if (document.documentElement && =
document.documentElement.scrollTop){	 // Explorer 6 Strict=0A=
		yScroll =3D document.documentElement.scrollTop;=0A=
		xScroll =3D document.documentElement.scrollLeft;=0A=
	} else if (document.body) {// all other Explorers=0A=
		yScroll =3D document.body.scrollTop;=0A=
		xScroll =3D document.body.scrollLeft;	=0A=
	}=0A=
	arrayPageScroll =3D new Array(xScroll,yScroll) =0A=
	return arrayPageScroll;=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
// getPageSize()=0A=
function getPageSize(){=0A=
	var xScroll, yScroll;=0A=
	if (window.innerHeight && window.scrollMaxY) {	=0A=
		xScroll =3D window.innerWidth + window.scrollMaxX;=0A=
		yScroll =3D window.innerHeight + window.scrollMaxY;=0A=
	} else if (document.body.scrollHeight > document.body.offsetHeight){ // =
all but Explorer Mac=0A=
		xScroll =3D document.body.scrollWidth;=0A=
		yScroll =3D document.body.scrollHeight;=0A=
	} else { // Explorer Mac...would also work in Explorer 6 Strict, =
Mozilla and Safari=0A=
		xScroll =3D document.body.offsetWidth;=0A=
		yScroll =3D document.body.offsetHeight;=0A=
	}=0A=
	var windowWidth, windowHeight;=0A=
	if (self.innerHeight) {	// all except Explorer=0A=
		if(document.documentElement.clientWidth){=0A=
			windowWidth =3D document.documentElement.clientWidth; =0A=
		} else {=0A=
			windowWidth =3D self.innerWidth;=0A=
		}=0A=
		windowHeight =3D self.innerHeight;=0A=
	} else if (document.documentElement && =
document.documentElement.clientHeight) { // Explorer 6 Strict Mode=0A=
		windowWidth =3D document.documentElement.clientWidth;=0A=
		windowHeight =3D document.documentElement.clientHeight;=0A=
	} else if (document.body) { // other Explorers=0A=
		windowWidth =3D document.body.clientWidth;=0A=
		windowHeight =3D document.body.clientHeight;=0A=
	}=0A=
	// for small pages with total height less then height of the viewport=0A=
	if(yScroll < windowHeight){=0A=
		pageHeight =3D windowHeight;=0A=
	} else { =0A=
		pageHeight =3D yScroll;=0A=
	}=0A=
	// for small pages with total width less then width of the viewport=0A=
	if(xScroll < windowWidth){	=0A=
		pageWidth =3D xScroll;		=0A=
	} else {=0A=
		pageWidth =3D windowWidth;=0A=
	}=0A=
	arrayPageSize =3D new =
Array(pageWidth,pageHeight,windowWidth,windowHeight) =0A=
	return arrayPageSize;=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
// getKey(key)=0A=
function getKey(e){=0A=
	if (e =3D=3D null) { // ie=0A=
		keycode =3D event.keyCode;=0A=
	} else { // mozilla=0A=
		keycode =3D e.which;=0A=
	}=0A=
	key =3D String.fromCharCode(keycode).toLowerCase();=0A=
	if(key =3D=3D 'x'){=0A=
	}=0A=
}=0A=
// =
-------------------------------------------------------------------------=
----------=0A=
// listenKey()=0A=
function listenKey () {	document.onkeypress =3D getKey; }=0A=
// ---------------------------------------------------=0A=
function showSelectBoxes(){=0A=
	var selects =3D document.getElementsByTagName("select");=0A=
	for (i =3D 0; i !=3D selects.length; i++) {=0A=
		selects[i].style.visibility =3D "visible";=0A=
	}=0A=
}=0A=
// ---------------------------------------------------=0A=
function hideSelectBoxes(){=0A=
	var selects =3D document.getElementsByTagName("select");=0A=
	for (i =3D 0; i !=3D selects.length; i++) {=0A=
		selects[i].style.visibility =3D "hidden";=0A=
	}=0A=
}=0A=
// ---------------------------------------------------=0A=
function showFlash(){=0A=
	var flashObjects =3D document.getElementsByTagName("object");=0A=
	for (i =3D 0; i < flashObjects.length; i++) {=0A=
		flashObjects[i].style.visibility =3D "visible";=0A=
	}=0A=
	var flashEmbeds =3D document.getElementsByTagName("embed");=0A=
	for (i =3D 0; i < flashEmbeds.length; i++) {=0A=
		flashEmbeds[i].style.visibility =3D "visible";=0A=
	}=0A=
}=0A=
// ---------------------------------------------------=0A=
function hideFlash(){=0A=
	var flashObjects =3D document.getElementsByTagName("object");=0A=
	for (i =3D 0; i < flashObjects.length; i++) {=0A=
		flashObjects[i].style.visibility =3D "hidden";=0A=
	}=0A=
	var flashEmbeds =3D document.getElementsByTagName("embed");=0A=
	for (i =3D 0; i < flashEmbeds.length; i++) {=0A=
		flashEmbeds[i].style.visibility =3D "hidden";=0A=
	}=0A=
}=0A=
// ---------------------------------------------------=0A=
function stimuli_pause(ms){=0A=
	var date =3D new Date();=0A=
	curDate =3D null;=0A=
	do{var curDate =3D new Date();}=0A=
	while( curDate - date < ms);=0A=
}=0A=
// ---------------------------------------------------=0A=
function initLightbox() { myLightbox =3D new Lightbox(); }=0A=
Event.observe(window, 'load', initLightbox, false);
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/themes/onepress/scripts/op.js?ver=3.0.1

var OP=3D(function(){return{widget:{}}})();OP.utility=3D(function(){var =
A=3D[];return{observe:function(C,B,D){C["on"+B]=3DD},addLoadProcess:funct=
ion(B){A.push(B)},onLoad:function(){for(var =
B=3D0;B<A.length;B++){A[B].call()}if(!document.getElementById("content_s"=
)){return =
}if(document.getElementById("content_s").offsetHeight=3D=3D0){OP.utility.=
previewObserver=3DOP.periodicalExecuter.call();OP.utility.previewObserver=
.init(function(){if(document.getElementById("content_s").offsetHeight!=3D=
0){OP.utility.setupDisplay();OP.utility.previewObserver.stop()}},0.5)}els=
e{OP.utility.setupDisplay()}},setupDisplay:function(){OP.utility.getMaxAn=
dAdjust(document.getElementById("content_s"));OP.utility.getMaxAndAdjust(=
document.getElementById("column_wrap"));document.getElementById("content_=
s").style.paddingBottom=3Ddocument.getElementById("footer").offsetHeight+=
"px"},getMaxAndAdjust:function(E){var B=3D0,F=3D/\S/,D,C;if(!E){return =
}for(D=3D0;D<E.childNodes.length;D++){if((E.childNodes[D].nodeType=3D=3D3=
)&&(!F.test(E.childNodes[D].nodeValue))){E.removeChild(E.childNodes[D]);D=
--}else{B=3DMath.max(E.childNodes[D].offsetHeight,B)}}for(C=3D0;C<E.child=
Nodes.length;C++){if(E.childNodes[C].className!=3D"forclear"){E.childNode=
s[C].style.height=3D(B+1)+"px"}}}}})();OP.widget.collection=3D(function()=
{var =
B=3D[],A=3D[];return{add:function(C,D){B.push({widget:C,observe_class:D})=
},load:function(){var =
F,E,D,C,G;F=3Ddocument.getElementsByTagName("div");for(E=3D0;E<B.length;E=
++){for(D=3D0;D<F.length;D++){if(F[D].className=3D=3DB[E].observe_class){=
C=3DB[E].widget.call();G=3DC.construct(F[D]);A[G]=3DC}}}},getWidgetInstan=
ce:function(C){return A[C]}}}());OP.periodicalExecuter=3D(function(){var =
A,B;return{callback:null,init:function(D,C){this.callback=3DD;A=3DC;this.=
execute()},stop:function(){clearInterval(B)},execute:function(){var =
C=3Dthis;B=3DsetInterval(function(){C.callback.call(C)},A*1000)},getCallb=
ack:function(){return =
_callback}}});OP.utility.addLoadProcess(OP.widget.collection.load);OP.uti=
lity.observe(window,"load",OP.utility.onLoad);
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/themes/onepress/scripts/nav.js?ver=3.0.1

OP.navigation=3D(function(){var =
B=3Dnull,A=3Dnull;return{init:function(){if(!document.getElementById(A)){=
return }var =
C=3Ddocument.getElementById(A).getElementsByTagName("li"),D;if(!document.=
getElementById(A)){return =
false}for(D=3D0;D<C.length;D++){OP.utility.observe(C[D],"mouseover",OP.na=
vigation.onHover);OP.utility.observe(C[D],"mouseout",OP.navigation.onOut)=
}},onHover:function(){B=3Dthis.className=3D=3Dundefined?event.srcElement:=
this;if(B.parentNode.parentNode.parentNode.id!=3DA){return =
}if(B.className!=3D""){classes=3DB.className.split("s");if(!("display" =
in classes)){B.className+=3D" =
display"}}else{B.className=3D"display"}},onOut:function(){if(B!=3Dnull){B=
.className=3DB.className.replace(/(\s)*display/,"")}},setContainer:functi=
on(){A=3Darguments[0]}}})();OP.navigation.setContainer("op_navigation");O=
P.utility.addLoadProcess(OP.navigation.init);
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/comment-reply.js?ver=20090102

addComment=3D{moveForm:function(d,f,i,c){var =
m=3Dthis,a,h=3Dm.I(d),b=3Dm.I(i),l=3Dm.I("cancel-comment-reply-link"),j=3D=
m.I("comment_parent"),k=3Dm.I("comment_post_ID");if(!h||!b||!l||!j){retur=
n}m.respondId=3Di;c=3Dc||false;if(!m.I("wp-temp-form-div")){a=3Ddocument.=
createElement("div");a.id=3D"wp-temp-form-div";a.style.display=3D"none";b=
.parentNode.insertBefore(a,b)}h.parentNode.insertBefore(b,h.nextSibling);=
if(k&&c){k.value=3Dc}j.value=3Df;l.style.display=3D"";l.onclick=3Dfunctio=
n(){var =
n=3DaddComment,e=3Dn.I("wp-temp-form-div"),o=3Dn.I(n.respondId);if(!e||!o=
){return}n.I("comment_parent").value=3D"0";e.parentNode.insertBefore(o,e)=
;e.parentNode.removeChild(e);this.style.display=3D"none";this.onclick=3Dn=
ull;return false};try{m.I("comment").focus()}catch(g){}return =
false},I:function(a){return document.getElementById(a)}};
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/jquery/jquery.js?ver=1.4.2

/*!=0A=
 * jQuery JavaScript Library v1.4.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright 2010, John Resig=0A=
 * Dual licensed under the MIT or GPL Version 2 licenses.=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Includes Sizzle.js=0A=
 * http://sizzlejs.com/=0A=
 * Copyright 2010, The Dojo Foundation=0A=
 * Released under the MIT, BSD, and GPL Licenses.=0A=
 *=0A=
 * Date: Sat Feb 13 22:33:48 2010 -0500=0A=
 */=0A=
(function(A,w){function =
ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTi=
meout(ma,1);return}c.ready()}}function =
Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalE=
val(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.re=
moveChild(b)}function X(a,b,d,f,e,j){var i=3Da.length;if(typeof =
b=3D=3D=3D"object"){for(var o in b)X(a,o,b[o],f,e,d);return =
a}if(d!=3D=3Dw){f=3D!j&&f&&c.isFunction(d);for(o=3D0;o<i;o++)e(a[o],b,f?d=
.call(a[o],o,e(a[o],b)):d,j);return a}return i?=0A=
e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return =
false}function Z(){return true}function na(a,b,d){d[0].type=3Da;return =
c.event.handle.apply(b,d)}function oa(a){var =
b,d=3D[],f=3D[],e=3Darguments,j,i,o,k,n,r;i=3Dc.data(this,"events");if(!(=
a.liveFired=3D=3D=3Dthis||!i||!i.live||a.button&&a.type=3D=3D=3D"click"))=
{a.liveFired=3Dthis;var =
u=3Di.live.slice(0);for(k=3D0;k<u.length;k++){i=3Du[k];i.origType.replace=
(O,"")=3D=3D=3Da.type?f.push(i.selector):u.splice(k--,1)}j=3Dc(a.target).=
closest(f,a.currentTarget);n=3D0;for(r=3D=0A=
j.length;n<r;n++)for(k=3D0;k<u.length;k++){i=3Du[k];if(j[n].selector=3D=3D=
=3Di.selector){o=3Dj[n].elem;f=3Dnull;if(i.preType=3D=3D=3D"mouseenter"||=
i.preType=3D=3D=3D"mouseleave")f=3Dc(a.relatedTarget).closest(i.selector)=
[0];if(!f||f!=3D=3Do)d.push({elem:o,handleObj:i})}}n=3D0;for(r=3Dd.length=
;n<r;n++){j=3Dd[n];a.currentTarget=3Dj.elem;a.data=3Dj.handleObj.data;a.h=
andleObj=3Dj.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)=3D=3D=3D=
false){b=3Dfalse;break}}return b}}function =
pa(a,b){return"live."+(a&&a!=3D=3D"*"?a+".":"")+b.replace(/\./g,"`").repl=
ace(/ /g,=0A=
"&")}function =
qa(a){return!a||!a.parentNode||a.parentNode.nodeType=3D=3D=3D11}function =
ra(a,b){var =
d=3D0;b.each(function(){if(this.nodeName=3D=3D=3D(a[d]&&a[d].nodeName)){v=
ar f=3Dc.data(a[d++]),e=3Dc.data(this,f);if(f=3Df&&f.events){delete =
e.handle;e.events=3D{};for(var j in f)for(var i in =
f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var =
f,e,j;b=3Db&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length=3D=3D=3D1&&typeo=
f =
a[0]=3D=3D=3D"string"&&a[0].length<512&&b=3D=3D=3Ds&&!ta.test(a[0])&&(c.s=
upport.checkClone||!ua.test(a[0]))){e=3D=0A=
true;if(j=3Dc.fragments[a[0]])if(j!=3D=3D1)f=3Dj}if(!f){f=3Db.createDocum=
entFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=3Dj?f:1;return{frag=
ment:f,cacheable:e}}function K(a,b){var =
d=3D{};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=3Da});=
return d}function wa(a){return"scrollTo"in =
a&&a.document?a:a.nodeType=3D=3D=3D9?a.defaultView||a.parentWindow:false}=
var c=3Dfunction(a,b){return new =
c.fn.init(a,b)},Ra=3DA.jQuery,Sa=3DA.$,s=3DA.document,T,Ta=3D/^[^<]*(<[\w=
\W]+>)[^>]*$|^#([\w-]+)$/,Ua=3D/^.[^:#\[\.,]*$/,Va=3D/\S/,=0A=
Wa=3D/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=3D/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=3D=
navigator.userAgent,xa=3Dfalse,Q=3D[],L,$=3DObject.prototype.toString,aa=3D=
Object.prototype.hasOwnProperty,ba=3DArray.prototype.push,R=3DArray.proto=
type.slice,ya=3DArray.prototype.indexOf;c.fn=3Dc.prototype=3D{init:functi=
on(a,b){var d,f;if(!a)return =
this;if(a.nodeType){this.context=3Dthis[0]=3Da;this.length=3D1;return =
this}if(a=3D=3D=3D"body"&&!b){this.context=3Ds;this[0]=3Ds.body;this.sele=
ctor=3D"body";this.length=3D1;return this}if(typeof =
a=3D=3D=3D"string")if((d=3DTa.exec(a))&&=0A=
(d[1]||!b))if(d[1]){f=3Db?b.ownerDocument||b:s;if(a=3DXa.exec(a))if(c.isP=
lainObject(b)){a=3D[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else =
a=3D[f.createElement(a[1])];else{a=3Dsa([d[1]],[f]);a=3D(a.cacheable?a.fr=
agment.cloneNode(true):a.fragment).childNodes}return =
c.merge(this,a)}else{if(b=3Ds.getElementById(d[2])){if(b.id!=3D=3Dd[2])re=
turn =
T.find(a);this.length=3D1;this[0]=3Db}this.context=3Ds;this.selector=3Da;=
return this}else =
if(!b&&/^\w+$/.test(a)){this.selector=3Da;this.context=3Ds;a=3Ds.getEleme=
ntsByTagName(a);return c.merge(this,=0A=
a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else =
if(c.isFunction(a))return =
T.ready(a);if(a.selector!=3D=3Dw){this.selector=3Da.selector;this.context=
=3Da.context}return =
c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){=
return this.length},toArray:function(){return =
R.call(this,0)},get:function(a){return =
a=3D=3Dnull?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:functi=
on(a,b,d){var =
f=3Dc();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=3Dthis;f.con=
text=3Dthis.context;if(b=3D=3D=3D=0A=
"find")f.selector=3Dthis.selector+(this.selector?" ":"")+d;else =
if(b)f.selector=3Dthis.selector+"."+b+"("+d+")";return =
f},each:function(a,b){return =
c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c=
);else Q&&Q.push(a);return this},eq:function(a){return =
a=3D=3D=3D-1?this.slice(a):this.slice(a,+a+1)},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return =
this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","=
))},map:function(a){return this.pushStack(c.map(this,=0A=
function(b,d){return a.call(b,d,b)}))},end:function(){return =
this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.ini=
t.prototype=3Dc.fn;c.extend=3Dc.fn.extend=3Dfunction(){var =
a=3Darguments[0]||{},b=3D1,d=3Darguments.length,f=3Dfalse,e,j,i,o;if(type=
of a=3D=3D=3D"boolean"){f=3Da;a=3Darguments[1]||{};b=3D2}if(typeof =
a!=3D=3D"object"&&!c.isFunction(a))a=3D{};if(d=3D=3D=3Db){a=3Dthis;--b}fo=
r(;b<d;b++)if((e=3Darguments[b])!=3Dnull)for(j in =
e){i=3Da[j];o=3De[j];if(a!=3D=3Do)if(f&&o&&(c.isPlainObject(o)||c.isArray=
(o))){i=3Di&&(c.isPlainObject(i)||=0A=
c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=3Dc.extend(f,i,o)}else =
if(o!=3D=3Dw)a[j]=3Do}return =
a};c.extend({noConflict:function(a){A.$=3DSa;if(a)A.jQuery=3DRa;return =
c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return =
setTimeout(c.ready,13);c.isReady=3Dtrue;if(Q){for(var =
a,b=3D0;a=3DQ[b++];)a.call(s,c);Q=3Dnull}c.fn.triggerHandler&&c(s).trigge=
rHandler("ready")}},bindReady:function(){if(!xa){xa=3Dtrue;if(s.readyStat=
e=3D=3D=3D"complete")return =
c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",=0A=
L,false);A.addEventListener("load",c.ready,false)}else =
if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("on=
load",c.ready);var =
a=3Dfalse;try{a=3DA.frameElement=3D=3Dnull}catch(b){}s.documentElement.do=
Scroll&&a&&ma()}}},isFunction:function(a){return =
$.call(a)=3D=3D=3D"[object Function]"},isArray:function(a){return =
$.call(a)=3D=3D=3D"[object =
Array]"},isPlainObject:function(a){if(!a||$.call(a)!=3D=3D"[object =
Object]"||a.nodeType||a.setInterval)return =
false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor=
.prototype,=0A=
"isPrototypeOf"))return false;var b;for(b in a);return =
b=3D=3D=3Dw||aa.call(a,b)},isEmptyObject:function(a){for(var b in =
a)return false;return true},error:function(a){throw =
a;},parseJSON:function(a){if(typeof a!=3D=3D"string"||!a)return =
null;a=3Dc.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u=
[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\=
d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return =
A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+=0A=
a))();else c.error("Invalid JSON: =
"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var =
b=3Ds.getElementsByTagName("head")[0]||s.documentElement,d=3Ds.createElem=
ent("script");d.type=3D"text/javascript";if(c.support.scriptEval)d.append=
Child(s.createTextNode(a));else =
d.text=3Da;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:fun=
ction(a,b){return =
a.nodeName&&a.nodeName.toUpperCase()=3D=3D=3Db.toUpperCase()},each:functi=
on(a,b,d){var =
f,e=3D0,j=3Da.length,i=3Dj=3D=3D=3Dw||c.isFunction(a);if(d)if(i)for(f in =
a){if(b.apply(a[f],=0A=
d)=3D=3D=3Dfalse)break}else =
for(;e<j;){if(b.apply(a[e++],d)=3D=3D=3Dfalse)break}else if(i)for(f in =
a){if(b.call(a[f],f,a[f])=3D=3D=3Dfalse)break}else =
for(d=3Da[0];e<j&&b.call(d,e,d)!=3D=3Dfalse;d=3Da[++e]);return =
a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b)=
{b=3Db||[];if(a!=3Dnull)a.length=3D=3Dnull||typeof =
a=3D=3D=3D"string"||c.isFunction(a)||typeof =
a!=3D=3D"function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return =
b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var =
d=3D0,f=3Db.length;d<f;d++)if(b[d]=3D=3D=3D=0A=
a)return d;return-1},merge:function(a,b){var =
d=3Da.length,f=3D0;if(typeof b.length=3D=3D=3D"number")for(var =
e=3Db.length;f<e;f++)a[d++]=3Db[f];else =
for(;b[f]!=3D=3Dw;)a[d++]=3Db[f++];a.length=3Dd;return =
a},grep:function(a,b,d){for(var =
f=3D[],e=3D0,j=3Da.length;e<j;e++)!d!=3D=3D!b(a[e],e)&&f.push(a[e]);retur=
n f},map:function(a,b,d){for(var =
f=3D[],e,j=3D0,i=3Da.length;j<i;j++){e=3Db(a[j],j,d);if(e!=3Dnull)f[f.len=
gth]=3De}return =
f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length=3D=
=3D=3D2)if(typeof b=3D=3D=3D"string"){d=3Da;a=3Dd[b];b=3Dw}else if(b&&=0A=
!c.isFunction(b)){d=3Db;b=3Dw}if(!b&&a)b=3Dfunction(){return =
a.apply(d||this,arguments)};if(a)b.guid=3Da.guid=3Da.guid||b.guid||c.guid=
++;return b},uaMatch:function(a){a=3Da.toLowerCase();a=3D/(webkit)[ =
\/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ =
\/]([\w.]+)/.exec(a)||/(msie) =
([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? =
rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},br=
owser:{}});P=3Dc.uaMatch(P);if(P.browser){c.browser[P.browser]=3Dtrue;c.b=
rowser.version=3DP.version}if(c.browser.webkit)c.browser.safari=3D=0A=
true;if(ya)c.inArray=3Dfunction(a,b){return =
ya.call(b,a)};T=3Dc(s);if(s.addEventListener)L=3Dfunction(){s.removeEvent=
Listener("DOMContentLoaded",L,false);c.ready()};else =
if(s.attachEvent)L=3Dfunction(){if(s.readyState=3D=3D=3D"complete"){s.det=
achEvent("onreadystatechange",L);c.ready()}};(function(){c.support=3D{};v=
ar =
a=3Ds.documentElement,b=3Ds.createElement("script"),d=3Ds.createElement("=
div"),f=3D"script"+J();d.style.display=3D"none";d.innerHTML=3D"   =
<link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";=0A=
var =
e=3Dd.getElementsByTagName("*"),j=3Dd.getElementsByTagName("a")[0];if(!(!=
e||!e.length||!j)){c.support=3D{leadingWhitespace:d.firstChild.nodeType=3D=
=3D=3D3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.g=
etElementsByTagName("link").length,style:/red/.test(j.getAttribute("style=
")),hrefNormalized:j.getAttribute("href")=3D=3D=3D"/a",opacity:/^0.55$/.t=
est(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByT=
agName("input")[0].value=3D=3D=3D"on",optSelected:s.createElement("select=
").appendChild(s.createElement("option")).selected,=0A=
parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNod=
e=3D=3D=3Dnull,deleteExpando:true,checkClone:false,scriptEval:false,noClo=
neEvent:true,boxModel:null};b.type=3D"text/javascript";try{b.appendChild(=
s.createTextNode("window."+f+"=3D1;"))}catch(i){}a.insertBefore(b,a.first=
Child);if(A[f]){c.support.scriptEval=3Dtrue;delete A[f]}try{delete =
b.test}catch(o){c.support.deleteExpando=3Dfalse}a.removeChild(b);if(d.att=
achEvent&&d.fireEvent){d.attachEvent("onclick",function =
k(){c.support.noCloneEvent=3D=0A=
false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")=
}d=3Ds.createElement("div");d.innerHTML=3D"<input type=3D'radio' =
name=3D'radiotest' =
checked=3D'checked'/>";a=3Ds.createDocumentFragment();a.appendChild(d.fir=
stChild);c.support.checkClone=3Da.cloneNode(true).cloneNode(true).lastChi=
ld.checked;c(function(){var =
k=3Ds.createElement("div");k.style.width=3Dk.style.paddingLeft=3D"1px";s.=
body.appendChild(k);c.boxModel=3Dc.support.boxModel=3Dk.offsetWidth=3D=3D=
=3D2;s.body.removeChild(k).style.display=3D"none"});a=3Dfunction(k){var =
n=3D=0A=
s.createElement("div");k=3D"on"+k;var r=3Dk in =
n;if(!r){n.setAttribute(k,"return;");r=3Dtypeof =
n[k]=3D=3D=3D"function"}return =
r};c.support.submitBubbles=3Da("submit");c.support.changeBubbles=3Da("cha=
nge");a=3Db=3Dd=3De=3Dj=3Dnull}})();c.props=3D{"for":"htmlFor","class":"c=
lassName",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpac=
ing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useM=
ap",frameborder:"frameBorder"};var =
G=3D"jQuery"+J(),Ya=3D0,za=3D{};c.extend({cache:{},expando:G,noData:{embe=
d:true,object:true,=0A=
applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.to=
LowerCase()])){a=3Da=3D=3DA?za:a;var f=3Da[G],e=3Dc.cache;if(!f&&typeof =
b=3D=3D=3D"string"&&d=3D=3D=3Dw)return null;f||(f=3D++Ya);if(typeof =
b=3D=3D=3D"object"){a[G]=3Df;e[f]=3Dc.extend(true,{},b)}else =
if(!e[f]){a[G]=3Df;e[f]=3D{}}a=3De[f];if(d!=3D=3Dw)a[b]=3Dd;return =
typeof =
b=3D=3D=3D"string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.n=
oData[a.nodeName.toLowerCase()])){a=3Da=3D=3DA?za:a;var =
d=3Da[G],f=3Dc.cache,e=3Df[d];if(b){if(e){delete =
e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando=
)delete a[c.expando];=0A=
else a.removeAttribute&&a.removeAttribute(c.expando);delete =
f[d]}}}});c.fn.extend({data:function(a,b){if(typeof =
a=3D=3D=3D"undefined"&&this.length)return c.data(this[0]);else if(typeof =
a=3D=3D=3D"object")return this.each(function(){c.data(this,a)});var =
d=3Da.split(".");d[1]=3Dd[1]?"."+d[1]:"";if(b=3D=3D=3Dw){var =
f=3Dthis.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f=3D=3D=3Dw&&this.l=
ength)f=3Dc.data(this[0],a);return =
f=3D=3D=3Dw&&d[1]?this.data(d[0]):f}else return =
this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,=0A=
a,b)})},removeData:function(a){return =
this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a=
,b,d){if(a){b=3D(b||"fx")+"queue";var f=3Dc.data(a,b);if(!d)return =
f||[];if(!f||c.isArray(d))f=3Dc.data(a,b,c.makeArray(d));else =
f.push(d);return f}},dequeue:function(a,b){b=3Db||"fx";var =
d=3Dc.queue(a,b),f=3Dd.shift();if(f=3D=3D=3D"inprogress")f=3Dd.shift();if=
(f){b=3D=3D=3D"fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue=
(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof =
a!=3D=3D"string"){b=3Da;a=3D"fx"}if(b=3D=3D=3D=0A=
w)return c.queue(this[0],a);return this.each(function(){var =
d=3Dc.queue(this,a,b);a=3D=3D=3D"fx"&&d[0]!=3D=3D"inprogress"&&c.dequeue(=
this,a)})},dequeue:function(a){return =
this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=3Dc.fx?c.=
fx.speeds[a]||a:a;b=3Db||"fx";return this.queue(b,function(){var =
d=3Dthis;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(=
a){return this.queue(a||"fx",[])}});var =
Aa=3D/[\n\t]/g,ca=3D/\s+/,Za=3D/\r/g,$a=3D/href|src|style/,ab=3D/(button|=
input)/i,bb=3D/(button|input|object|select|textarea)/i,=0A=
cb=3D/^(a|area)$/i,Ba=3D/radio|checkbox/;c.fn.extend({attr:function(a,b){=
return X(this,a,b,true,c.attr)},removeAttr:function(a){return =
this.each(function(){c.attr(this,a,"");this.nodeType=3D=3D=3D1&&this.remo=
veAttribute(a)})},addClass:function(a){if(c.isFunction(a))return =
this.each(function(n){var =
r=3Dc(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string")for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1)if(e.className){for(var j=3D" =
"+e.className+" ",=0A=
i=3De.className,o=3D0,k=3Db.length;o<k;o++)if(j.indexOf(" "+b[o]+" =
")<0)i+=3D" "+b[o];e.className=3Dc.trim(i)}else e.className=3Da}return =
this},removeClass:function(a){if(c.isFunction(a))return =
this.each(function(k){var =
n=3Dc(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string"||a=3D=3D=3Dw)for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1&&e.className)if(a){for(var j=3D(" =
"+e.className+" ").replace(Aa," =
"),i=3D0,o=3Db.length;i<o;i++)j=3Dj.replace(" "+b[i]+" ",=0A=
" ");e.className=3Dc.trim(j)}else e.className=3D""}return =
this},toggleClass:function(a,b){var d=3Dtypeof a,f=3Dtypeof =
b=3D=3D=3D"boolean";if(c.isFunction(a))return this.each(function(e){var =
j=3Dc(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return =
this.each(function(){if(d=3D=3D=3D"string")for(var =
e,j=3D0,i=3Dc(this),o=3Db,k=3Da.split(ca);e=3Dk[j++];){o=3Df?o:!i.hasClas=
s(e);i[o?"addClass":"removeClass"](e)}else =
if(d=3D=3D=3D"undefined"||d=3D=3D=3D"boolean"){this.className&&c.data(thi=
s,"__className__",this.className);this.className=3D=0A=
this.className||a=3D=3D=3Dfalse?"":c.data(this,"__className__")||""}})},h=
asClass:function(a){a=3D" "+a+" ";for(var =
b=3D0,d=3Dthis.length;b<d;b++)if((" "+this[b].className+" =
").replace(Aa," ").indexOf(a)>-1)return true;return =
false},val:function(a){if(a=3D=3D=3Dw){var =
b=3Dthis[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}=
).specified?b.value:b.text;if(c.nodeName(b,"select")){var =
d=3Db.selectedIndex,f=3D[],e=3Db.options;b=3Db.type=3D=3D=3D"select-one";=
if(d<0)return null;var j=3Db?d:0;for(d=3Db?d+1:e.length;j<d;j++){var i=3D=0A=
e[j];if(i.selected){a=3Dc(i).val();if(b)return a;f.push(a)}}return =
f}if(Ba.test(b.type)&&!c.support.checkOn)return =
b.getAttribute("value")=3D=3D=3Dnull?"on":b.value;return(b.value||"").rep=
lace(Za,"")}return w}var o=3Dc.isFunction(a);return =
this.each(function(k){var =
n=3Dc(this),r=3Da;if(this.nodeType=3D=3D=3D1){if(o)r=3Da.call(this,k,n.va=
l());if(typeof =
r=3D=3D=3D"number")r+=3D"";if(c.isArray(r)&&Ba.test(this.type))this.check=
ed=3Dc.inArray(n.val(),r)>=3D0;else if(c.nodeName(this,"select")){var =
u=3Dc.makeArray(r);c("option",this).each(function(){this.selected=3D=0A=
c.inArray(c(this).val(),u)>=3D0});if(!u.length)this.selectedIndex=3D-1}el=
se =
this.value=3Dr}})}});c.extend({attrFn:{val:true,css:true,html:true,text:t=
rue,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){=
if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)return w;if(f&&b in =
c.attrFn)return c(a)[b](d);f=3Da.nodeType!=3D=3D1||!c.isXMLDoc(a);var =
e=3Dd!=3D=3Dw;b=3Df&&c.props[b]||b;if(a.nodeType=3D=3D=3D1){var =
j=3D$a.test(b);if(b in =
a&&f&&!j){if(e){b=3D=3D=3D"type"&&ab.test(a.nodeName)&&a.parentNode&&c.er=
ror("type property can't be changed");=0A=
a[b]=3Dd}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return =
a.getAttributeNode(b).nodeValue;if(b=3D=3D=3D"tabIndex")return(b=3Da.getA=
ttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.te=
st(a.nodeName)&&a.href?0:w;return =
a[b]}if(!c.support.style&&f&&b=3D=3D=3D"style"){if(e)a.style.cssText=3D""=
+d;return =
a.style.cssText}e&&a.setAttribute(b,""+d);a=3D!c.support.hrefNormalized&&=
f&&j?a.getAttribute(b,2):a.getAttribute(b);return =
a=3D=3D=3Dnull?w:a}return c.style(a,b,d)}});var =
O=3D/\.(.*)$/,db=3Dfunction(a){return a.replace(/[^\w\s\.\|`]/g,=0A=
function(b){return"\\"+b})};c.event=3D{add:function(a,b,d,f){if(!(a.nodeT=
ype=3D=3D=3D3||a.nodeType=3D=3D=3D8)){if(a.setInterval&&a!=3D=3DA&&!a.fra=
meElement)a=3DA;var =
e,j;if(d.handler){e=3Dd;d=3De.handler}if(!d.guid)d.guid=3Dc.guid++;if(j=3D=
c.data(a)){var =
i=3Dj.events=3Dj.events||{},o=3Dj.handle;if(!o)j.handle=3Do=3Dfunction(){=
return typeof =
c!=3D=3D"undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,argum=
ents):w};o.elem=3Da;b=3Db.split(" ");for(var =
k,n=3D0,r;k=3Db[n++];){j=3De?c.extend({},e):{handler:d,data:f};if(k.index=
Of(".")>-1){r=3Dk.split(".");=0A=
k=3Dr.shift();j.namespace=3Dr.slice(0).sort().join(".")}else{r=3D[];j.nam=
espace=3D""}j.type=3Dk;j.guid=3Dd.guid;var =
u=3Di[k],z=3Dc.event.special[k]||{};if(!u){u=3Di[k]=3D[];if(!z.setup||z.s=
etup.call(a,f,r,o)=3D=3D=3Dfalse)if(a.addEventListener)a.addEventListener=
(k,o,false);else =
a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.ha=
ndler.guid)j.handler.guid=3Dd.guid}u.push(j);c.event.global[k]=3Dtrue}a=3D=
null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType=3D=3D=3D3||a.n=
odeType=3D=3D=3D8)){var e,j=3D0,i,o,k,n,r,u,z=3Dc.data(a),=0A=
C=3Dz&&z.events;if(z&&C){if(b&&b.type){d=3Db.handler;b=3Db.type}if(!b||ty=
peof b=3D=3D=3D"string"&&b.charAt(0)=3D=3D=3D"."){b=3Db||"";for(e in =
C)c.event.remove(a,e+b)}else{for(b=3Db.split(" =
");e=3Db[j++];){n=3De;i=3De.indexOf(".")<0;o=3D[];if(!i){o=3De.split(".")=
;e=3Do.shift();k=3Dnew =
RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|=
$)")}if(r=3DC[e])if(d){n=3Dc.event.special[e]||{};for(B=3Df||0;B<r.length=
;B++){u=3Dr[B];if(d.guid=3D=3D=3Du.guid){if(i||k.test(u.namespace)){f=3D=3D=
null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=3D=0A=
null)break}}if(r.length=3D=3D=3D0||f!=3Dnull&&r.length=3D=3D=3D1){if(!n.t=
eardown||n.teardown.call(a,o)=3D=3D=3Dfalse)Ca(a,e,z.handle);delete =
C[e]}}else for(var =
B=3D0;B<r.length;B++){u=3Dr[B];if(i||k.test(u.namespace)){c.event.remove(=
a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=3Dz.handle=
)b.elem=3Dnull;delete z.events;delete =
z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,=
f){var e=3Da.type||a;if(!f){a=3Dtypeof =
a=3D=3D=3D"object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf(=
"!")>=3D0){a.type=3D=0A=
e=3De.slice(0,-1);a.exclusive=3Dtrue}if(!d){a.stopPropagation();c.event.g=
lobal[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.=
trigger(a,b,this.handle.elem)})}if(!d||d.nodeType=3D=3D=3D3||d.nodeType=3D=
=3D=3D8)return =
w;a.result=3Dw;a.target=3Dd;b=3Dc.makeArray(b);b.unshift(a)}a.currentTarg=
et=3Dd;(f=3Dc.data(d,"handle"))&&f.apply(d,b);f=3Dd.parentNode||d.ownerDo=
cument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["=
on"+e]&&d["on"+e].apply(d,b)=3D=3D=3Dfalse)a.result=3Dfalse}catch(j){}if(=
!a.isPropagationStopped()&&=0A=
f)c.event.trigger(a,b,f,true);else =
if(!a.isDefaultPrevented()){f=3Da.target;var =
i,o=3Dc.nodeName(f,"a")&&e=3D=3D=3D"click",k=3Dc.event.special[e]||{};if(=
(!k._default||k._default.call(d,a)=3D=3D=3Dfalse)&&!o&&!(f&&f.nodeName&&c=
.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=3Df["on"+e])f["on"+=
e]=3Dnull;c.event.triggered=3Dtrue;f[e]()}}catch(n){}if(i)f["on"+e]=3Di;c=
.event.triggered=3Dfalse}}},handle:function(a){var =
b,d,f,e;a=3Darguments[0]=3Dc.event.fix(a||A.event);a.currentTarget=3Dthis=
;b=3Da.type.indexOf(".")<0&&!a.exclusive;=0A=
if(!b){d=3Da.type.split(".");a.type=3Dd.shift();f=3Dnew =
RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=3Dc=
.data(this,"events");d=3De[a.type];if(e&&d){d=3Dd.slice(0);e=3D0;for(var =
j=3Dd.length;e<j;e++){var =
i=3Dd[e];if(b||f.test(i.namespace)){a.handler=3Di.handler;a.data=3Di.data=
;a.handleObj=3Di;i=3Di.handler.apply(this,arguments);if(i!=3D=3Dw){a.resu=
lt=3Di;if(i=3D=3D=3Dfalse){a.preventDefault();a.stopPropagation()}}if(a.i=
sImmediatePropagationStopped())break}}}return a.result},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
layerX layerY metaKey newValue offsetX offsetY originalTarget pageX =
pageY prevValue relatedNode relatedTarget screenX screenY shiftKey =
srcElement target toElement view wheelDelta which".split(" "),=0A=
fix:function(a){if(a[G])return a;var b=3Da;a=3Dc.Event(b);for(var =
d=3Dthis.props.length,f;d;){f=3Dthis.props[--d];a[f]=3Db[f]}if(!a.target)=
a.target=3Da.srcElement||s;if(a.target.nodeType=3D=3D=3D3)a.target=3Da.ta=
rget.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=3Da.fr=
omElement=3D=3D=3Da.target?a.toElement:a.fromElement;if(a.pageX=3D=3Dnull=
&&a.clientX!=3Dnull){b=3Ds.documentElement;d=3Ds.body;a.pageX=3Da.clientX=
+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft|=
|0);a.pageY=3Da.clientY+(b&&b.scrollTop||=0A=
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.ch=
arCode||a.charCode=3D=3D=3D0?a.charCode:a.keyCode))a.which=3Da.charCode||=
a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=3Da.ctrlKey;if(!a.which&&a.b=
utton!=3D=3Dw)a.which=3Da.button&1?1:a.button&2?3:a.button&4?2:0;return =
a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.no=
op},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{hand=
ler:oa}))},remove:function(a){var =
b=3Dtrue,d=3Da.origType.replace(O,"");c.each(c.data(this,=0A=
"events").live||[],function(){if(d=3D=3D=3Dthis.origType.replace(O,""))re=
turn =
b=3Dfalse});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:f=
unction(a,b,d){if(this.setInterval)this.onbeforeunload=3Dd;return =
false},teardown:function(a,b){if(this.onbeforeunload=3D=3D=3Db)this.onbef=
oreunload=3Dnull}}}};var =
Ca=3Ds.removeEventListener?function(a,b,d){a.removeEventListener(b,d,fals=
e)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=3Dfunction(a){if(!th=
is.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=3D=0A=
a;this.type=3Da.type}else =
this.type=3Da;this.timeStamp=3DJ();this[G]=3Dtrue};c.Event.prototype=3D{p=
reventDefault:function(){this.isDefaultPrevented=3DZ;var =
a=3Dthis.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.retur=
nValue=3Dfalse}},stopPropagation:function(){this.isPropagationStopped=3DZ=
;var =
a=3Dthis.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.can=
celBubble=3Dtrue}},stopImmediatePropagation:function(){this.isImmediatePr=
opagationStopped=3DZ;this.stopPropagation()},isDefaultPrevented:Y,isPropa=
gationStopped:Y,=0A=
isImmediatePropagationStopped:Y};var Da=3Dfunction(a){var =
b=3Da.relatedTarget;try{for(;b&&b!=3D=3Dthis;)b=3Db.parentNode;if(b!=3D=3D=
this){a.type=3Da.data;c.event.handle.apply(this,arguments)}}catch(d){}},E=
a=3Dfunction(a){a.type=3Da.data;c.event.handle.apply(this,arguments)};c.e=
ach({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.=
special[a]=3D{setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)=
},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(=
!c.support.submitBubbles)c.event.special.submit=3D=0A=
{setup:function(){if(this.nodeName.toLowerCase()!=3D=3D"form"){c.event.ad=
d(this,"click.specialSubmit",function(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"submit"||d=3D=3D=3D"image")&&c(b).=
closest("form").length)return =
na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",f=
unction(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"text"||d=3D=3D=3D"password")&&c(b)=
.closest("form").length&&a.keyCode=3D=3D=3D13)return =
na("submit",this,arguments)})}else return =
false},teardown:function(){c.event.remove(this,".specialSubmit")}};=0A=
if(!c.support.changeBubbles){var =
da=3D/textarea|input|select/i,ea,Fa=3Dfunction(a){var =
b=3Da.type,d=3Da.value;if(b=3D=3D=3D"radio"||b=3D=3D=3D"checkbox")d=3Da.c=
hecked;else =
if(b=3D=3D=3D"select-multiple")d=3Da.selectedIndex>-1?c.map(a.options,fun=
ction(f){return f.selected}).join("-"):"";else =
if(a.nodeName.toLowerCase()=3D=3D=3D"select")d=3Da.selectedIndex;return =
d},fa=3Dfunction(a,b){var =
d=3Da.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=3Dc.data(d,"_c=
hange_data");e=3DFa(d);if(a.type!=3D=3D"focusout"||d.type!=3D=3D"radio")c=
.data(d,"_change_data",=0A=
e);if(!(f=3D=3D=3Dw||e=3D=3D=3Df))if(f!=3Dnull||e){a.type=3D"change";retu=
rn =
c.event.trigger(a,b,d)}}};c.event.special.change=3D{filters:{focusout:fa,=
click:function(a){var =
b=3Da.target,d=3Db.type;if(d=3D=3D=3D"radio"||d=3D=3D=3D"checkbox"||b.nod=
eName.toLowerCase()=3D=3D=3D"select")return =
fa.call(this,a)},keydown:function(a){var =
b=3Da.target,d=3Db.type;if(a.keyCode=3D=3D=3D13&&b.nodeName.toLowerCase()=
!=3D=3D"textarea"||a.keyCode=3D=3D=3D32&&(d=3D=3D=3D"checkbox"||d=3D=3D=3D=
"radio")||d=3D=3D=3D"select-multiple")return =
fa.call(this,a)},beforeactivate:function(a){a=3Da.target;c.data(a,=0A=
"_change_data",Fa(a))}},setup:function(){if(this.type=3D=3D=3D"file")retu=
rn false;for(var a in =
ea)c.event.add(this,a+".specialChange",ea[a]);return =
da.test(this.nodeName)},teardown:function(){c.event.remove(this,".special=
Change");return =
da.test(this.nodeName)}};ea=3Dc.event.special.change.filters}s.addEventLi=
stener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function =
d(f){f=3Dc.event.fix(f);f.type=3Db;return =
c.event.handle.call(this,f)}c.event.special[b]=3D{setup:function(){this.a=
ddEventListener(a,=0A=
d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.eac=
h(["bind","one"],function(a,b){c.fn[b]=3Dfunction(d,f,e){if(typeof =
d=3D=3D=3D"object"){for(var j in d)this[b](j,f,d[j],e);return =
this}if(c.isFunction(f)){e=3Df;f=3Dw}var =
i=3Db=3D=3D=3D"one"?c.proxy(e,function(k){c(this).unbind(k,i);return =
e.apply(this,arguments)}):e;if(d=3D=3D=3D"unload"&&b!=3D=3D"one")this.one=
(d,f,e);else{j=3D0;for(var =
o=3Dthis.length;j<o;j++)c.event.add(this[j],d,i,f)}return =
this}});c.fn.extend({unbind:function(a,b){if(typeof a=3D=3D=3D"object"&&=0A=
!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=3D0;for(var =
f=3Dthis.length;d<f;d++)c.event.remove(this[d],a,b)}return =
this},delegate:function(a,b,d,f){return =
this.live(b,d,f,a)},undelegate:function(a,b,d){return =
arguments.length=3D=3D=3D0?this.unbind("live"):this.die(b,null,d,a)},trig=
ger:function(a,b){return =
this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){if(this[0]){a=3Dc.Event(a);a.preventDefault();a.stopPropagation();c=
.event.trigger(a,b,this[0]);return a.result}},=0A=
toggle:function(a){for(var =
b=3Darguments,d=3D1;d<b.length;)c.proxy(a,b[d++]);return =
this.click(c.proxy(a,function(f){var =
e=3D(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.gu=
id,e+1);f.preventDefault();return =
b[e].apply(this,arguments)||false}))},hover:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)}});var =
Ga=3D{focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"=
mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=3Dfunction(d,f,e,j=
){var i,o=3D0,k,n,r=3Dj||this.selector,=0A=
u=3Dj?this:c(this.context);if(c.isFunction(f)){e=3Df;f=3Dw}for(d=3D(d||""=
).split(" =
");(i=3Dd[o++])!=3Dnull;){j=3DO.exec(i);k=3D"";if(j){k=3Dj[0];i=3Di.repla=
ce(O,"")}if(i=3D=3D=3D"hover")d.push("mouseenter"+k,"mouseleave"+k);else{=
n=3Di;if(i=3D=3D=3D"focus"||i=3D=3D=3D"blur"){d.push(Ga[i]+k);i+=3Dk}else=
 =
i=3D(Ga[i]||i)+k;b=3D=3D=3D"live"?u.each(function(){c.event.add(this,pa(i=
,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u=
.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout =
load resize scroll unload click dblclick mousedown mouseup mousemove =
mouseover mouseout mouseenter mouseleave change select submit keydown =
keypress keyup error".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=3Dtrue});A.atta=
chEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var=
 a in =
c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}c=
atch(b){}});(function(){function a(g){for(var =
h=3D"",l,m=3D0;g[m];m++){l=3Dg[m];if(l.nodeType=3D=3D=3D3||l.nodeType=3D=3D=
=3D4)h+=3Dl.nodeValue;else =
if(l.nodeType!=3D=3D8)h+=3Da(l.childNodes)}return h}function =
b(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var t=3Dm[q];=0A=
if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1&&!p){t.sizcache=3Dl;t.sizset=3Dq}if(t.nodeName.toLowerCase()=3D=
=3D=3Dh){y=3Dt;break}t=3Dt[g]}m[q]=3Dy}}}function =
d(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var =
t=3Dm[q];if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1){if(!p){t.sizcache=3Dl;t.sizset=3Dq}if(typeof =
h!=3D=3D"string"){if(t=3D=3D=3Dh){y=3Dtrue;break}}else =
if(k.filter(h,[t]).length>0){y=3Dt;break}}t=3Dt[g]}m[q]=3Dy}}}var =
f=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]=
'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,=0A=
e=3D0,j=3DObject.prototype.toString,i=3Dfalse,o=3Dtrue;[0,0].sort(functio=
n(){o=3Dfalse;return 0});var k=3Dfunction(g,h,l,m){l=3Dl||[];var =
q=3Dh=3Dh||s;if(h.nodeType!=3D=3D1&&h.nodeType!=3D=3D9)return[];if(!g||ty=
peof g!=3D=3D"string")return l;for(var =
p=3D[],v,t,y,S,H=3Dtrue,M=3Dx(h),I=3Dg;(f.exec(""),v=3Df.exec(I))!=3D=3Dn=
ull;){I=3Dv[3];p.push(v[1]);if(v[2]){S=3Dv[3];break}}if(p.length>1&&r.exe=
c(g))if(p.length=3D=3D=3D2&&n.relative[p[0]])t=3Dga(p[0]+p[1],h);else =
for(t=3Dn.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=3Dp.shift();if(n=
.relative[g])g+=3Dp.shift();=0A=
t=3Dga(g,t)}else{if(!m&&p.length>1&&h.nodeType=3D=3D=3D9&&!M&&n.match.ID.=
test(p[0])&&!n.match.ID.test(p[p.length-1])){v=3Dk.find(p.shift(),h,M);h=3D=
v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=3Dm?{expr:p.pop(),set:z=
(m)}:k.find(p.pop(),p.length=3D=3D=3D1&&(p[0]=3D=3D=3D"~"||p[0]=3D=3D=3D"=
+")&&h.parentNode?h.parentNode:h,M);t=3Dv.expr?k.filter(v.expr,v.set):v.s=
et;if(p.length>0)y=3Dz(t);else H=3Dfalse;for(;p.length;){var =
D=3Dp.pop();v=3DD;if(n.relative[D])v=3Dp.pop();else =
D=3D"";if(v=3D=3Dnull)v=3Dh;n.relative[D](y,v,M)}}else =
y=3D[]}y||(y=3Dt);y||k.error(D||=0A=
g);if(j.call(y)=3D=3D=3D"[object =
Array]")if(H)if(h&&h.nodeType=3D=3D=3D1)for(g=3D0;y[g]!=3Dnull;g++){if(y[=
g]&&(y[g]=3D=3D=3Dtrue||y[g].nodeType=3D=3D=3D1&&E(h,y[g])))l.push(t[g])}=
else =
for(g=3D0;y[g]!=3Dnull;g++)y[g]&&y[g].nodeType=3D=3D=3D1&&l.push(t[g]);el=
se l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return =
l};k.uniqueSort=3Dfunction(g){if(B){i=3Do;g.sort(B);if(i)for(var =
h=3D1;h<g.length;h++)g[h]=3D=3D=3Dg[h-1]&&g.splice(h--,1)}return =
g};k.matches=3Dfunction(g,h){return =
k(g,null,null,h)};k.find=3Dfunction(g,h,l){var m,q;if(!g)return[];=0A=
for(var p=3D0,v=3Dn.order.length;p<v;p++){var =
t=3Dn.order[p];if(q=3Dn.leftMatch[t].exec(g)){var =
y=3Dq[1];q.splice(1,1);if(y.substr(y.length-1)!=3D=3D"\\"){q[1]=3D(q[1]||=
"").replace(/\\/g,"");m=3Dn.find[t](q,h,l);if(m!=3Dnull){g=3Dg.replace(n.=
match[t],"");break}}}}m||(m=3Dh.getElementsByTagName("*"));return{set:m,e=
xpr:g}};k.filter=3Dfunction(g,h,l,m){for(var =
q=3Dg,p=3D[],v=3Dh,t,y,S=3Dh&&h[0]&&x(h[0]);g&&h.length;){for(var H in =
n.filter)if((t=3Dn.leftMatch[H].exec(g))!=3Dnull&&t[2]){var =
M=3Dn.filter[H],I,D;D=3Dt[1];y=3Dfalse;t.splice(1,1);if(D.substr(D.length=
-=0A=
1)!=3D=3D"\\"){if(v=3D=3D=3Dp)p=3D[];if(n.preFilter[H])if(t=3Dn.preFilter=
[H](t,v,l,p,m,S)){if(t=3D=3D=3Dtrue)continue}else =
y=3DI=3Dtrue;if(t)for(var =
U=3D0;(D=3Dv[U])!=3Dnull;U++)if(D){I=3DM(D,t,U,v);var =
Ha=3Dm^!!I;if(l&&I!=3Dnull)if(Ha)y=3Dtrue;else v[U]=3Dfalse;else =
if(Ha){p.push(D);y=3Dtrue}}if(I!=3D=3Dw){l||(v=3Dp);g=3Dg.replace(n.match=
[H],"");if(!y)return[];break}}}if(g=3D=3D=3Dq)if(y=3D=3Dnull)k.error(g);e=
lse break;q=3Dg}return v};k.error=3Dfunction(g){throw"Syntax error, =
unrecognized expression: "+g;};var =
n=3Dk.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\u=
FFFF-]|\\.)+)/,=0A=
CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=3D['"]*((?:[\w\u00c0=
-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\=
S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CH=
ILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth=
|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^-]|$)/,PSEUDO:/:((?:[\=
w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},lef=
tMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:=
function(g){return g.getAttribute("href")}},=0A=
relative:{"+":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string",m=3Dl&&!/\W/.test(h);l=3Dl&&!m;if(m)h=3Dh.toLowerCase(=
);m=3D0;for(var =
q=3Dg.length,p;m<q;m++)if(p=3Dg[m]){for(;(p=3Dp.previousSibling)&&p.nodeT=
ype!=3D=3D1;);g[m]=3Dl||p&&p.nodeName.toLowerCase()=3D=3D=3Dh?p||false:p=3D=
=3D=3Dh}l&&k.filter(h,g,true)},">":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string";if(l&&!/\W/.test(h)){h=3Dh.toLowerCase();for(var =
m=3D0,q=3Dg.length;m<q;m++){var =
p=3Dg[m];if(p){l=3Dp.parentNode;g[m]=3Dl.nodeName.toLowerCase()=3D=3D=3Dh=
?l:false}}}else{m=3D0;for(q=3Dg.length;m<q;m++)if(p=3Dg[m])g[m]=3D=0A=
l?p.parentNode:p.parentNode=3D=3D=3Dh;l&&k.filter(h,g,true)}},"":function=
(g,h,l){var m=3De++,q=3Dd;if(typeof =
h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("parentNode",h,m,g,p,l)},"~":function(g,h=
,l){var m=3De++,q=3Dd;if(typeof h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("previousSibling",h,m,g,p,l)}},find:{ID:f=
unction(g,h,l){if(typeof =
h.getElementById!=3D=3D"undefined"&&!l)return(g=3Dh.getElementById(g[1]))=
?[g]:[]},NAME:function(g,h){if(typeof =
h.getElementsByName!=3D=3D"undefined"){var l=3D[];=0A=
h=3Dh.getElementsByName(g[1]);for(var =
m=3D0,q=3Dh.length;m<q;m++)h[m].getAttribute("name")=3D=3D=3Dg[1]&&l.push=
(h[m]);return l.length=3D=3D=3D0?null:l}},TAG:function(g,h){return =
h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=3D=
" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=3D0;for(var =
v;(v=3Dh[p])!=3Dnull;p++)if(v)if(q^(v.className&&(" "+v.className+" =
").replace(/[\t\n]/g," ").indexOf(g)>=3D0))l||m.push(v);else =
if(l)h[p]=3Dfalse;return false},ID:function(g){return =
g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},=0A=
CHILD:function(g){if(g[1]=3D=3D=3D"nth"){var =
h=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]=3D=3D=3D"even"&&"2n"||g[2]=3D=3D=
=3D"odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=3Dh[1]+(h[2]||=
1)-0;g[3]=3Dh[3]-0}g[0]=3De++;return =
g},ATTR:function(g,h,l,m,q,p){h=3Dg[1].replace(/\\/g,"");if(!p&&n.attrMap=
[h])g[1]=3Dn.attrMap[h];if(g[2]=3D=3D=3D"~=3D")g[4]=3D" "+g[4]+" =
";return =
g},PSEUDO:function(g,h,l,m,q){if(g[1]=3D=3D=3D"not")if((f.exec(g[3])||"")=
.length>1||/^\w/.test(g[3]))g[3]=3Dk(g[3],null,null,h);else{g=3Dk.filter(=
g[3],h,l,true^q);l||m.push.apply(m,=0A=
g);return false}else =
if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return =
g},POS:function(g){g.unshift(true);return =
g}},filters:{enabled:function(g){return =
g.disabled=3D=3D=3Dfalse&&g.type!=3D=3D"hidden"},disabled:function(g){ret=
urn g.disabled=3D=3D=3Dtrue},checked:function(g){return =
g.checked=3D=3D=3Dtrue},selected:function(g){return =
g.selected=3D=3D=3Dtrue},parent:function(g){return!!g.firstChild},empty:f=
unction(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).len=
gth},header:function(g){return/h\d/i.test(g.nodeName)},=0A=
text:function(g){return"text"=3D=3D=3Dg.type},radio:function(g){return"ra=
dio"=3D=3D=3Dg.type},checkbox:function(g){return"checkbox"=3D=3D=3Dg.type=
},file:function(g){return"file"=3D=3D=3Dg.type},password:function(g){retu=
rn"password"=3D=3D=3Dg.type},submit:function(g){return"submit"=3D=3D=3Dg.=
type},image:function(g){return"image"=3D=3D=3Dg.type},reset:function(g){r=
eturn"reset"=3D=3D=3Dg.type},button:function(g){return"button"=3D=3D=3Dg.=
type||g.nodeName.toLowerCase()=3D=3D=3D"button"},input:function(g){return=
/input|select|textarea|button/i.test(g.nodeName)}},=0A=
setFilters:{first:function(g,h){return =
h=3D=3D=3D0},last:function(g,h,l,m){return =
h=3D=3D=3Dm.length-1},even:function(g,h){return =
h%2=3D=3D=3D0},odd:function(g,h){return =
h%2=3D=3D=3D1},lt:function(g,h,l){return =
h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return =
l[3]-0=3D=3D=3Dh},eq:function(g,h,l){return =
l[3]-0=3D=3D=3Dh}},filter:{PSEUDO:function(g,h,l,m){var =
q=3Dh[1],p=3Dn.filters[q];if(p)return p(g,l,h,m);else =
if(q=3D=3D=3D"contains")return(g.textContent||g.innerText||a([g])||"").in=
dexOf(h[3])>=3D0;else if(q=3D=3D=3D"not"){h=3D=0A=
h[3];l=3D0;for(m=3Dh.length;l<m;l++)if(h[l]=3D=3D=3Dg)return =
false;return true}else k.error("Syntax error, unrecognized expression: =
"+q)},CHILD:function(g,h){var l=3Dh[1],m=3Dg;switch(l){case "only":case =
"first":for(;m=3Dm.previousSibling;)if(m.nodeType=3D=3D=3D1)return =
false;if(l=3D=3D=3D"first")return true;m=3Dg;case =
"last":for(;m=3Dm.nextSibling;)if(m.nodeType=3D=3D=3D1)return =
false;return true;case "nth":l=3Dh[2];var =
q=3Dh[3];if(l=3D=3D=3D1&&q=3D=3D=3D0)return true;h=3Dh[0];var =
p=3Dg.parentNode;if(p&&(p.sizcache!=3D=3Dh||!g.nodeIndex)){var =
v=3D0;for(m=3Dp.firstChild;m;m=3D=0A=
m.nextSibling)if(m.nodeType=3D=3D=3D1)m.nodeIndex=3D++v;p.sizcache=3Dh}g=3D=
g.nodeIndex-q;return =
l=3D=3D=3D0?g=3D=3D=3D0:g%l=3D=3D=3D0&&g/l>=3D0}},ID:function(g,h){return=
 =
g.nodeType=3D=3D=3D1&&g.getAttribute("id")=3D=3D=3Dh},TAG:function(g,h){r=
eturn =
h=3D=3D=3D"*"&&g.nodeType=3D=3D=3D1||g.nodeName.toLowerCase()=3D=3D=3Dh},=
CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" =
").indexOf(h)>-1},ATTR:function(g,h){var =
l=3Dh[1];g=3Dn.attrHandle[l]?n.attrHandle[l](g):g[l]!=3Dnull?g[l]:g.getAt=
tribute(l);l=3Dg+"";var m=3Dh[2];h=3Dh[4];return =
g=3D=3Dnull?m=3D=3D=3D"!=3D":m=3D=3D=3D=0A=
"=3D"?l=3D=3D=3Dh:m=3D=3D=3D"*=3D"?l.indexOf(h)>=3D0:m=3D=3D=3D"~=3D"?(" =
"+l+" =
").indexOf(h)>=3D0:!h?l&&g!=3D=3Dfalse:m=3D=3D=3D"!=3D"?l!=3D=3Dh:m=3D=3D=
=3D"^=3D"?l.indexOf(h)=3D=3D=3D0:m=3D=3D=3D"$=3D"?l.substr(l.length-h.len=
gth)=3D=3D=3Dh:m=3D=3D=3D"|=3D"?l=3D=3D=3Dh||l.substr(0,h.length+1)=3D=3D=
=3Dh+"-":false},POS:function(g,h,l,m){var =
q=3Dn.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=3Dn.match.POS;for(var =
u in n.match){n.match[u]=3Dnew =
RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u=
]=3Dnew =
RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,fun=
ction(g,=0A=
h){return"\\"+(h-0+1)}))}var =
z=3Dfunction(g,h){g=3DArray.prototype.slice.call(g,0);if(h){h.push.apply(=
h,g);return h}return =
g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C=
){z=3Dfunction(g,h){h=3Dh||[];if(j.call(g)=3D=3D=3D"[object =
Array]")Array.prototype.push.apply(h,g);else if(typeof =
g.length=3D=3D=3D"number")for(var =
l=3D0,m=3Dg.length;l<m;l++)h.push(g[l]);else =
for(l=3D0;g[l];l++)h.push(g[l]);return h}}var =
B;if(s.documentElement.compareDocumentPosition)B=3Dfunction(g,h){if(!g.co=
mpareDocumentPosition||=0A=
!h.compareDocumentPosition){if(g=3D=3Dh)i=3Dtrue;return =
g.compareDocumentPosition?-1:1}g=3Dg.compareDocumentPosition(h)&4?-1:g=3D=
=3D=3Dh?0:1;if(g=3D=3D=3D0)i=3Dtrue;return g};else if("sourceIndex"in =
s.documentElement)B=3Dfunction(g,h){if(!g.sourceIndex||!h.sourceIndex){if=
(g=3D=3Dh)i=3Dtrue;return =
g.sourceIndex?-1:1}g=3Dg.sourceIndex-h.sourceIndex;if(g=3D=3D=3D0)i=3Dtru=
e;return g};else =
if(s.createRange)B=3Dfunction(g,h){if(!g.ownerDocument||!h.ownerDocument)=
{if(g=3D=3Dh)i=3Dtrue;return g.ownerDocument?-1:1}var =
l=3Dg.ownerDocument.createRange(),m=3D=0A=
h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,=
0);m.setEnd(h,0);g=3Dl.compareBoundaryPoints(Range.START_TO_END,m);if(g=3D=
=3D=3D0)i=3Dtrue;return g};(function(){var =
g=3Ds.createElement("div"),h=3D"script"+(new =
Date).getTime();g.innerHTML=3D"<a name=3D'"+h+"'/>";var =
l=3Ds.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(=
h)){n.find.ID=3Dfunction(m,q,p){if(typeof =
q.getElementById!=3D=3D"undefined"&&!p)return(q=3Dq.getElementById(m[1]))=
?q.id=3D=3D=3Dm[1]||typeof q.getAttributeNode!=3D=3D"undefined"&&=0A=
q.getAttributeNode("id").nodeValue=3D=3D=3Dm[1]?[q]:w:[]};n.filter.ID=3Df=
unction(m,q){var p=3Dtypeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id");return =
m.nodeType=3D=3D=3D1&&p&&p.nodeValue=3D=3D=3Dq}}l.removeChild(g);l=3Dg=3D=
null})();(function(){var =
g=3Ds.createElement("div");g.appendChild(s.createComment(""));if(g.getEle=
mentsByTagName("*").length>0)n.find.TAG=3Dfunction(h,l){l=3Dl.getElements=
ByTagName(h[1]);if(h[1]=3D=3D=3D"*"){h=3D[];for(var =
m=3D0;l[m];m++)l[m].nodeType=3D=3D=3D1&&h.push(l[m]);l=3Dh}return =
l};g.innerHTML=3D"<a href=3D'#'></a>";=0A=
if(g.firstChild&&typeof =
g.firstChild.getAttribute!=3D=3D"undefined"&&g.firstChild.getAttribute("h=
ref")!=3D=3D"#")n.attrHandle.href=3Dfunction(h){return =
h.getAttribute("href",2)};g=3Dnull})();s.querySelectorAll&&function(){var=
 g=3Dk,h=3Ds.createElement("div");h.innerHTML=3D"<p =
class=3D'TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST")=
.length=3D=3D=3D0)){k=3Dfunction(m,q,p,v){q=3Dq||s;if(!v&&q.nodeType=3D=3D=
=3D9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return =
g(m,q,p,v)};for(var l in g)k[l]=3Dg[l];h=3Dnull}}();=0A=
(function(){var g=3Ds.createElement("div");g.innerHTML=3D"<div =
class=3D'test e'></div><div =
class=3D'test'></div>";if(!(!g.getElementsByClassName||g.getElementsByCla=
ssName("e").length=3D=3D=3D0)){g.lastChild.className=3D"e";if(g.getElemen=
tsByClassName("e").length!=3D=3D1){n.order.splice(1,0,"CLASS");n.find.CLA=
SS=3Dfunction(h,l,m){if(typeof =
l.getElementsByClassName!=3D=3D"undefined"&&!m)return =
l.getElementsByClassName(h[1])};g=3Dnull}}})();var =
E=3Ds.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPos=
ition(h)&16)}:=0A=
function(g,h){return =
g!=3D=3Dh&&(g.contains?g.contains(h):true)},x=3Dfunction(g){return(g=3D(g=
?g.ownerDocument||g:0).documentElement)?g.nodeName!=3D=3D"HTML":false},ga=
=3Dfunction(g,h){var =
l=3D[],m=3D"",q;for(h=3Dh.nodeType?[h]:h;q=3Dn.match.PSEUDO.exec(g);){m+=3D=
q[0];g=3Dg.replace(n.match.PSEUDO,"")}g=3Dn.relative[g]?g+"*":g;q=3D0;for=
(var p=3Dh.length;q<p;q++)k(g,h[q],l);return =
k.filter(m,l)};c.find=3Dk;c.expr=3Dk.selectors;c.expr[":"]=3Dc.expr.filte=
rs;c.unique=3Dk.uniqueSort;c.text=3Da;c.isXMLDoc=3Dx;c.contains=3DE})();v=
ar eb=3D/Until$/,fb=3D/^(?:parents|prevUntil|prevAll)/,=0A=
gb=3D/,/;R=3DArray.prototype.slice;var =
Ia=3Dfunction(a,b,d){if(c.isFunction(b))return =
c.grep(a,function(e,j){return!!b.call(e,j,e)=3D=3D=3Dd});else =
if(b.nodeType)return c.grep(a,function(e){return =
e=3D=3D=3Db=3D=3D=3Dd});else if(typeof b=3D=3D=3D"string"){var =
f=3Dc.grep(a,function(e){return =
e.nodeType=3D=3D=3D1});if(Ua.test(b))return c.filter(b,f,!d);else =
b=3Dc.filter(b,f)}return c.grep(a,function(e){return =
c.inArray(e,b)>=3D0=3D=3D=3Dd})};c.fn.extend({find:function(a){for(var =
b=3Dthis.pushStack("","find",a),d=3D0,f=3D0,e=3Dthis.length;f<e;f++){d=3D=
b.length;=0A=
c.find(a,this[f],b);if(f>0)for(var j=3Dd;j<b.length;j++)for(var =
i=3D0;i<d;i++)if(b[i]=3D=3D=3Db[j]){b.splice(j--,1);break}}return =
b},has:function(a){var b=3Dc(a);return this.filter(function(){for(var =
d=3D0,f=3Db.length;d<f;d++)if(c.contains(this,b[d]))return =
true})},not:function(a){return =
this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return =
this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.f=
ilter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var =
d=3D[],f=3Dthis[0],e,j=3D=0A=
{},i;if(f&&a.length){e=3D0;for(var =
o=3Da.length;e<o;e++){i=3Da[e];j[i]||(j[i]=3Dc.expr.match.POS.test(i)?c(i=
,b||this.context):i)}for(;f&&f.ownerDocument&&f!=3D=3Db;){for(i in =
j){e=3Dj[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem=
:f});delete j[i]}}f=3Df.parentNode}}return d}var =
k=3Dc.expr.match.POS.test(a)?c(a,b||this.context):null;return =
this.map(function(n,r){for(;r&&r.ownerDocument&&r!=3D=3Db;){if(k?k.index(=
r)>-1:c(r).is(a))return r;r=3Dr.parentNode}return =
null})},index:function(a){if(!a||typeof a=3D=3D=3D=0A=
"string")return =
c.inArray(this[0],a?c(a):this.parent().children());return =
c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=3Dtypeof =
a=3D=3D=3D"string"?c(a,b||this.context):c.makeArray(a);b=3Dc.merge(this.g=
et(),a);return =
this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){retu=
rn =
this.add(this.prevObject)}});c.each({parent:function(a){return(a=3Da.pare=
ntNode)&&a.nodeType!=3D=3D11?a:null},parents:function(a){return =
c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return =
c.dir(a,"parentNode",=0A=
d)},next:function(a){return =
c.nth(a,2,"nextSibling")},prev:function(a){return =
c.nth(a,2,"previousSibling")},nextAll:function(a){return =
c.dir(a,"nextSibling")},prevAll:function(a){return =
c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return =
c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return =
c.dir(a,"previousSibling",d)},siblings:function(a){return =
c.sibling(a.parentNode.firstChild,a)},children:function(a){return =
c.sibling(a.firstChild)},contents:function(a){return =
c.nodeName(a,"iframe")?=0A=
a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},f=
unction(a,b){c.fn[a]=3Dfunction(d,f){var =
e=3Dc.map(this,b,d);eb.test(a)||(f=3Dd);if(f&&typeof =
f=3D=3D=3D"string")e=3Dc.filter(f,e);e=3Dthis.length>1?c.unique(e):e;if((=
this.length>1||gb.test(f))&&fb.test(a))e=3De.reverse();return =
this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:funct=
ion(a,b,d){if(d)a=3D":not("+a+")";return =
c.find.matches(a,b)},dir:function(a,b,d){var =
f=3D[];for(a=3Da[b];a&&a.nodeType!=3D=3D9&&(d=3D=3D=3Dw||a.nodeType!=3D=3D=
1||!c(a).is(d));){a.nodeType=3D=3D=3D=0A=
1&&f.push(a);a=3Da[b]}return f},nth:function(a,b,d){b=3Db||1;for(var =
f=3D0;a;a=3Da[d])if(a.nodeType=3D=3D=3D1&&++f=3D=3D=3Db)break;return =
a},sibling:function(a,b){for(var =
d=3D[];a;a=3Da.nextSibling)a.nodeType=3D=3D=3D1&&a!=3D=3Db&&d.push(a);ret=
urn d}});var Ja=3D/ =
jQuery\d+=3D"(?:\d+|null)"/g,V=3D/^\s+/,Ka=3D/(<([\w:]+)[^>]*?)\/>/g,hb=3D=
/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=3D/<([\w:]+)/,=
ib=3D/<tbody/i,jb=3D/<|&#?\w+;/,ta=3D/<script|<object|<embed|<option|<sty=
le/i,ua=3D/checked\s*(?:[^=3D]|=3D\s*.checked.)/i,Ma=3Dfunction(a,b,d){re=
turn hb.test(d)?=0A=
a:b+"></"+d+">"},F=3D{option:[1,"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>=
"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tb=
ody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],=
_default:[0,"",""]};F.optgroup=3DF.option;F.tbody=3DF.tfoot=3DF.colgroup=3D=
F.caption=3DF.thead;F.th=3DF.td;if(!c.support.htmlSerialize)F._default=3D=
[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))=
return this.each(function(b){var d=3D=0A=
c(this);d.text(a.call(this,b,d.text()))});if(typeof =
a!=3D=3D"object"&&a!=3D=3Dw)return =
this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a)=
);return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return =
this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var =
b=3Dc(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.in=
sertBefore(this[0]);b.map(function(){for(var =
d=3Dthis;d.firstChild&&d.firstChild.nodeType=3D=3D=3D1;)d=3Dd.firstChild;=
return d}).append(this)}return this},=0A=
wrapInner:function(a){if(c.isFunction(a))return =
this.each(function(b){c(this).wrapInner(a.call(this,b))});return =
this.each(function(){var =
b=3Dc(this),d=3Db.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){return =
this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return =
this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.ap=
pendChild(a)})},=0A=
prepend:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.in=
sertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].pa=
rentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=
this)});else if(arguments.length){var =
a=3Dc(arguments[0]);a.push.apply(a,this.toArray());return =
this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[=
0].parentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=0A=
this.nextSibling)});else if(arguments.length){var =
a=3Dthis.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0])=
.toArray());return a}},remove:function(a,b){for(var =
d=3D0,f;(f=3Dthis[d])!=3Dnull;d++)if(!a||c.filter(a,[f]).length){if(!b&&f=
.nodeType=3D=3D=3D1){c.cleanData(f.getElementsByTagName("*"));c.cleanData=
([f])}f.parentNode&&f.parentNode.removeChild(f)}return =
this},empty:function(){for(var =
a=3D0,b;(b=3Dthis[a])!=3Dnull;a++)for(b.nodeType=3D=3D=3D1&&c.cleanData(b=
.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);=0A=
return this},clone:function(a){var =
b=3Dthis.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){va=
r =
d=3Dthis.outerHTML,f=3Dthis.ownerDocument;if(!d){d=3Df.createElement("div=
");d.appendChild(this.cloneNode(true));d=3Dd.innerHTML}return =
c.clean([d.replace(Ja,"").replace(/=3D([^=3D"'>\s]+\/)>/g,'=3D"$1">').rep=
lace(V,"")],f)[0]}else return =
this.cloneNode(true)});if(a=3D=3D=3Dtrue){ra(this,b);ra(this.find("*"),b.=
find("*"))}return b},html:function(a){if(a=3D=3D=3Dw)return =
this[0]&&this[0].nodeType=3D=3D=3D1?this[0].innerHTML.replace(Ja,=0A=
""):null;else if(typeof =
a=3D=3D=3D"string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a)=
)&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=3Da.replace(Ka,Ma);try{f=
or(var =
b=3D0,d=3Dthis.length;b<d;b++)if(this[b].nodeType=3D=3D=3D1){c.cleanData(=
this[b].getElementsByTagName("*"));this[b].innerHTML=3Da}}catch(f){this.e=
mpty().append(a)}}else c.isFunction(a)?this.each(function(e){var =
j=3Dc(this),i=3Dj.html();j.empty().append(function(){return =
a.call(this,e,i)})}):this.empty().append(a);return =
this},replaceWith:function(a){if(this[0]&&=0A=
this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var =
d=3Dc(this),f=3Dd.html();d.replaceWith(a.call(this,b,f))});if(typeof =
a!=3D=3D"string")a=3Dc(a).detach();return this.each(function(){var =
b=3Dthis.nextSibling,d=3Dthis.parentNode;c(this).remove();b?c(b).before(a=
):c(d).append(a)})}else return =
this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function=
(a){return this.remove(a,true)},domManip:function(a,b,d){function =
f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||=0A=
u.appendChild(u.ownerDocument.createElement("tbody")):u}var =
e,j,i=3Da[0],o=3D[],k;if(!c.support.checkClone&&arguments.length=3D=3D=3D=
3&&typeof i=3D=3D=3D"string"&&ua.test(i))return =
this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))re=
turn this.each(function(u){var =
z=3Dc(this);a[0]=3Di.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(thi=
s[0]){e=3Di&&i.parentNode;e=3Dc.support.parentNode&&e&&e.nodeType=3D=3D=3D=
11&&e.childNodes.length=3D=3D=3Dthis.length?{fragment:e}:sa(a,this,o);k=3D=
e.fragment;if(j=3Dk.childNodes.length=3D=3D=3D=0A=
1?(k=3Dk.firstChild):k.firstChild){b=3Db&&c.nodeName(j,"tr");for(var =
n=3D0,r=3Dthis.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cachea=
ble||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return =
this}});c.fragments=3D{};c.each({appendTo:"append",prependTo:"prepend",in=
sertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},functio=
n(a,b){c.fn[a]=3Dfunction(d){var f=3D[];d=3Dc(d);var =
e=3Dthis.length=3D=3D=3D1&&this[0].parentNode;if(e&&e.nodeType=3D=3D=3D11=
&&e.childNodes.length=3D=3D=3D1&&d.length=3D=3D=3D1){d[b](this[0]);=0A=
return this}else{e=3D0;for(var j=3Dd.length;e<j;e++){var =
i=3D(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=3Df.conc=
at(i)}return =
this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=3D=
b||s;if(typeof =
b.createElement=3D=3D=3D"undefined")b=3Db.ownerDocument||b[0]&&b[0].owner=
Document||s;for(var e=3D[],j=3D0,i;(i=3Da[j])!=3Dnull;j++){if(typeof =
i=3D=3D=3D"number")i+=3D"";if(i){if(typeof =
i=3D=3D=3D"string"&&!jb.test(i))i=3Db.createTextNode(i);else if(typeof =
i=3D=3D=3D"string"){i=3Di.replace(Ka,Ma);var o=3D(La.exec(i)||["",=0A=
""])[1].toLowerCase(),k=3DF[o]||F._default,n=3Dk[0],r=3Db.createElement("=
div");for(r.innerHTML=3Dk[1]+i+k[2];n--;)r=3Dr.lastChild;if(!c.support.tb=
ody){n=3Dib.test(i);o=3Do=3D=3D=3D"table"&&!n?r.firstChild&&r.firstChild.=
childNodes:k[1]=3D=3D=3D"<table>"&&!n?r.childNodes:[];for(k=3Do.length-1;=
k>=3D0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parent=
Node.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertB=
efore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=3Dr.childNodes}if(i.=
nodeType)e.push(i);else e=3D=0A=
c.merge(e,i)}}if(d)for(j=3D0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!=
e[j].type||e[j].type.toLowerCase()=3D=3D=3D"text/javascript"))f.push(e[j]=
.parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType=3D=
=3D=3D1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTa=
gName("script"))));d.appendChild(e[j])}return =
e},cleanData:function(a){for(var =
b,d,f=3Dc.cache,e=3Dc.event.special,j=3Dc.support.deleteExpando,i=3D0,o;(=
o=3Da[i])!=3Dnull;i++)if(d=3Do[c.expando]){b=3Df[d];if(b.events)for(var =
k in b.events)e[k]?=0A=
c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else =
o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var =
kb=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=3D/alpha\([^)]=
*\)/,Oa=3D/opacity=3D([^)]*)/,ha=3D/float/i,ia=3D/-([a-z])/ig,lb=3D/([A-Z=
])/g,mb=3D/^-?\d+(?:px)?$/i,nb=3D/^-?\d/,ob=3D{position:"absolute",visibi=
lity:"hidden",display:"block"},pb=3D["Left","Right"],qb=3D["Top","Bottom"=
],rb=3Ds.defaultView&&s.defaultView.getComputedStyle,Pa=3Dc.support.cssFl=
oat?"cssFloat":"styleFloat",ja=3D=0A=
function(a,b){return b.toUpperCase()};c.fn.css=3Dfunction(a,b){return =
X(this,a,b,true,function(d,f,e){if(e=3D=3D=3Dw)return =
c.curCSS(d,f);if(typeof =
e=3D=3D=3D"number"&&!kb.test(f))e+=3D"px";c.style(d,f,e)})};c.extend({sty=
le:function(a,b,d){if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)retu=
rn =
w;if((b=3D=3D=3D"width"||b=3D=3D=3D"height")&&parseFloat(d)<0)d=3Dw;var =
f=3Da.style||a,e=3Dd!=3D=3Dw;if(!c.support.opacity&&b=3D=3D=3D"opacity"){=
if(e){f.zoom=3D1;b=3DparseInt(d,10)+""=3D=3D=3D"NaN"?"":"alpha(opacity=3D=
"+d*100+")";a=3Df.filter||c.curCSS(a,"filter")||"";f.filter=3D=0A=
Na.test(a)?a.replace(Na,b):b}return =
f.filter&&f.filter.indexOf("opacity=3D")>=3D0?parseFloat(Oa.exec(f.filter=
)[1])/100+"":""}if(ha.test(b))b=3DPa;b=3Db.replace(ia,ja);if(e)f[b]=3Dd;r=
eturn =
f[b]},css:function(a,b,d,f){if(b=3D=3D=3D"width"||b=3D=3D=3D"height"){var=
 e,j=3Db=3D=3D=3D"width"?pb:qb;function =
i(){e=3Db=3D=3D=3D"width"?a.offsetWidth:a.offsetHeight;f!=3D=3D"border"&&=
c.each(j,function(){f||(e-=3DparseFloat(c.curCSS(a,"padding"+this,true))|=
|0);if(f=3D=3D=3D"margin")e+=3DparseFloat(c.curCSS(a,"margin"+this,true))=
||0;else e-=3DparseFloat(c.curCSS(a,=0A=
"border"+this+"Width",true))||0})}a.offsetWidth!=3D=3D0?i():c.swap(a,ob,i=
);return Math.max(0,Math.round(e))}return =
c.curCSS(a,b,d)},curCSS:function(a,b,d){var =
f,e=3Da.style;if(!c.support.opacity&&b=3D=3D=3D"opacity"&&a.currentStyle)=
{f=3DOa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";r=
eturn =
f=3D=3D=3D""?"1":f}if(ha.test(b))b=3DPa;if(!d&&e&&e[b])f=3De[b];else =
if(rb){if(ha.test(b))b=3D"float";b=3Db.replace(lb,"-$1").toLowerCase();e=3D=
a.ownerDocument.defaultView;if(!e)return =
null;if(a=3De.getComputedStyle(a,null))f=3D=0A=
a.getPropertyValue(b);if(b=3D=3D=3D"opacity"&&f=3D=3D=3D"")f=3D"1"}else =
if(a.currentStyle){d=3Db.replace(ia,ja);f=3Da.currentStyle[b]||a.currentS=
tyle[d];if(!mb.test(f)&&nb.test(f)){b=3De.left;var =
j=3Da.runtimeStyle.left;a.runtimeStyle.left=3Da.currentStyle.left;e.left=3D=
d=3D=3D=3D"fontSize"?"1em":f||0;f=3De.pixelLeft+"px";e.left=3Db;a.runtime=
Style.left=3Dj}}return f},swap:function(a,b,d){var f=3D{};for(var e in =
b){f[e]=3Da.style[e];a.style[e]=3Db[e]}d.call(a);for(e in =
b)a.style[e]=3Df[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=3D=
function(a){var b=3D=0A=
a.offsetWidth,d=3Da.offsetHeight,f=3Da.nodeName.toLowerCase()=3D=3D=3D"tr=
";return =
b=3D=3D=3D0&&d=3D=3D=3D0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display"=
)=3D=3D=3D"none"};c.expr.filters.visible=3Dfunction(a){return!c.expr.filt=
ers.hidden(a)}}var =
sb=3DJ(),tb=3D/<script(.|\s)*?\/script>/gi,ub=3D/select|textarea/i,vb=3D/=
color|date|datetime|email|hidden|month|number|password|range|search|tel|t=
ext|time|url|week/i,N=3D/=3D\?(&|$)/,ka=3D/\?/,wb=3D/(\?|&)_=3D.*?(&|$)/,=
xb=3D/^(\w+:)?\/\/([^\/?#]+)/,yb=3D/%20/g,zb=3Dc.fn.load;c.fn.extend({loa=
d:function(a,b,d){if(typeof a!=3D=3D=0A=
"string")return zb.call(this,a);else if(!this.length)return this;var =
f=3Da.indexOf(" ");if(f>=3D0){var =
e=3Da.slice(f,a.length);a=3Da.slice(0,f)}f=3D"GET";if(b)if(c.isFunction(b=
)){d=3Db;b=3Dnull}else if(typeof =
b=3D=3D=3D"object"){b=3Dc.param(b,c.ajaxSettings.traditional);f=3D"POST"}=
var =
j=3Dthis;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,=
o){if(o=3D=3D=3D"success"||o=3D=3D=3D"notmodified")j.html(e?c("<div =
/>").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.e=
ach(d,[i.responseText,o,i])}});return this},=0A=
serialize:function(){return =
c.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?c.makeArray(this.elements):this}).filter(function(){return =
this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test=
(this.type))}).map(function(a,b){a=3Dc(this).val();return =
a=3D=3Dnull?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,valu=
e:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop =
ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=3D=
f||d;d=3Db;b=3Dnull}return =
c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:functio=
n(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return =
c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=3Df||d;=
d=3Db;b=3D{}}return =
c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:functi=
on(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,=0A=
global:true,type:"GET",contentType:"application/x-www-form-urlencoded",pr=
ocessData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=3D=3D=
"file:"||!A.ActiveXObject)?function(){return new =
A.XMLHttpRequest}:function(){try{return new =
A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"applicatio=
n/xml, text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:=
{},ajax:function(a){function b(){e.success&&=0A=
e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function =
d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);=
e.global&&!--c.active&&c.event.trigger("ajaxStop")}function =
f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var =
e=3Dc.extend(true,{},c.ajaxSettings,a),j,i,o,k=3Da&&a.context||e,n=3De.ty=
pe.toUpperCase();if(e.data&&e.processData&&typeof =
e.data!=3D=3D"string")e.data=3Dc.param(e.data,e.traditional);if(e.dataTyp=
e=3D=3D=3D"jsonp"){if(n=3D=3D=3D"GET")N.test(e.url)||(e.url+=3D(ka.test(e=
.url)?=0A=
"&":"?")+(e.jsonp||"callback")+"=3D?");else =
if(!e.data||!N.test(e.data))e.data=3D(e.data?e.data+"&":"")+(e.jsonp||"ca=
llback")+"=3D?";e.dataType=3D"json"}if(e.dataType=3D=3D=3D"json"&&(e.data=
&&N.test(e.data)||N.test(e.url))){j=3De.jsonpCallback||"jsonp"+sb++;if(e.=
data)e.data=3D(e.data+"").replace(N,"=3D"+j+"$1");e.url=3De.url.replace(N=
,"=3D"+j+"$1");e.dataType=3D"script";A[j]=3DA[j]||function(q){o=3Dq;b();d=
();A[j]=3Dw;try{delete =
A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType=3D=3D=3D"script"&&e.cac=
he=3D=3D=3Dnull)e.cache=3Dfalse;if(e.cache=3D=3D=3D=0A=
false&&n=3D=3D=3D"GET"){var =
r=3DJ(),u=3De.url.replace(wb,"$1_=3D"+r+"$2");e.url=3Du+(u=3D=3D=3De.url?=
(ka.test(e.url)?"&":"?")+"_=3D"+r:"")}if(e.data&&n=3D=3D=3D"GET")e.url+=3D=
(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("a=
jaxStart");r=3D(r=3Dxb.exec(e.url))&&(r[1]&&r[1]!=3D=3Dlocation.protocol|=
|r[2]!=3D=3Dlocation.host);if(e.dataType=3D=3D=3D"script"&&n=3D=3D=3D"GET=
"&&r){var =
z=3Ds.getElementsByTagName("head")[0]||s.documentElement,C=3Ds.createElem=
ent("script");C.src=3De.url;if(e.scriptCharset)C.charset=3De.scriptCharse=
t;if(!j){var B=3D=0A=
false;C.onload=3DC.onreadystatechange=3Dfunction(){if(!B&&(!this.readySta=
te||this.readyState=3D=3D=3D"loaded"||this.readyState=3D=3D=3D"complete")=
){B=3Dtrue;b();d();C.onload=3DC.onreadystatechange=3Dnull;z&&C.parentNode=
&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var =
E=3Dfalse,x=3De.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,=
e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.set=
RequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModifi=
ed[e.url]&&x.setRequestHeader("If-Modified-Since",=0A=
c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",=
c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest")=
;x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[=
e.dataType]+", =
*/*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,=
x,e)=3D=3D=3Dfalse){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.=
abort();return false}e.global&&f("ajaxSend",[x,e]);var =
g=3Dx.onreadystatechange=3Dfunction(q){if(!x||x.readyState=3D=3D=3D0||q=3D=
=3D=3D"abort"){E||=0A=
d();E=3Dtrue;if(x)x.onreadystatechange=3Dc.noop}else =
if(!E&&x&&(x.readyState=3D=3D=3D4||q=3D=3D=3D"timeout")){E=3Dtrue;x.onrea=
dystatechange=3Dc.noop;i=3Dq=3D=3D=3D"timeout"?"timeout":!c.httpSuccess(x=
)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success=
";var =
p;if(i=3D=3D=3D"success")try{o=3Dc.httpData(x,e.dataType,e)}catch(v){i=3D=
"parsererror";p=3Dv}if(i=3D=3D=3D"success"||i=3D=3D=3D"notmodified")j||b(=
);else =
c.handleError(e,x,i,p);d();q=3D=3D=3D"timeout"&&x.abort();if(e.async)x=3D=
null}};try{var h=3Dx.abort;x.abort=3Dfunction(){x&&h.call(x);=0A=
g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&=
g("timeout")},e.timeout);try{x.send(n=3D=3D=3D"POST"||n=3D=3D=3D"PUT"||n=3D=
=3D=3D"DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.asyn=
c||g();return =
x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,=
d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,=
a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.pro=
tocol=3D=3D=3D"file:"||a.status>=3D200&&a.status<300||a.status=3D=3D=3D30=
4||a.status=3D=3D=3D=0A=
1223||a.status=3D=3D=3D0}catch(b){}return =
false},httpNotModified:function(a,b){var =
d=3Da.getResponseHeader("Last-Modified"),f=3Da.getResponseHeader("Etag");=
if(d)c.lastModified[b]=3Dd;if(f)c.etag[b]=3Df;return =
a.status=3D=3D=3D304||a.status=3D=3D=3D0},httpData:function(a,b,d){var =
f=3Da.getResponseHeader("content-type")||"",e=3Db=3D=3D=3D"xml"||!b&&f.in=
dexOf("xml")>=3D0;a=3De?a.responseXML:a.responseText;e&&a.documentElement=
.nodeName=3D=3D=3D"parsererror"&&c.error("parsererror");if(d&&d.dataFilte=
r)a=3Dd.dataFilter(a,b);if(typeof a=3D=3D=3D"string")if(b=3D=3D=3D=0A=
"json"||!b&&f.indexOf("json")>=3D0)a=3Dc.parseJSON(a);else =
if(b=3D=3D=3D"script"||!b&&f.indexOf("javascript")>=3D0)c.globalEval(a);r=
eturn a},param:function(a,b){function =
d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d=
(i+"["+(typeof =
n=3D=3D=3D"object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=3Dnull&&typeof=
 =
o=3D=3D=3D"object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}funct=
ion =
f(i,o){o=3Dc.isFunction(o)?o():o;e[e.length]=3DencodeURIComponent(i)+"=3D=
"+encodeURIComponent(o)}var =
e=3D[];if(b=3D=3D=3Dw)b=3Dc.ajaxSettings.traditional;=0A=
if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});e=
lse for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var =
la=3D{},Ab=3D/toggle|show|hide/,Bb=3D/^([+-]=3D)?([\d+-.]+)(.*)$/,W,va=3D=
[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["wid=
th","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]]=
;c.fn.extend({show:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("show",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");=0A=
this[a].style.display=3Dd||"";if(c.css(this[a],"display")=3D=3D=3D"none")=
{d=3Dthis[a].nodeName;var f;if(la[d])f=3Dla[d];else{var e=3Dc("<"+d+" =
/>").appendTo("body");f=3De.css("display");if(f=3D=3D=3D"none")f=3D"block=
";e.remove();la[d]=3Df}c.data(this[a],"olddisplay",f)}}a=3D0;for(b=3Dthis=
.length;a<b;a++)this[a].style.display=3Dc.data(this[a],"olddisplay")||"";=
return this}},hide:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("hide",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");!d&&d!=3D=3D"none"&&c.data(this[a],=0A=
"olddisplay",c.css(this[a],"display"))}a=3D0;for(b=3Dthis.length;a<b;a++)=
this[a].style.display=3D"none";return =
this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=3Dtypeof =
a=3D=3D=3D"boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.appl=
y(this,arguments);else a=3D=3Dnull||d?this.each(function(){var =
f=3Dd?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K=
("toggle",3),a,b);return this},fadeTo:function(a,b,d){return =
this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},=
a,d)},=0A=
animate:function(a,b,d,f){var =
e=3Dc.speed(b,d,f);if(c.isEmptyObject(a))return =
this.each(e.complete);return =
this[e.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
j=3Dc.extend({},e),i,o=3Dthis.nodeType=3D=3D=3D1&&c(this).is(":hidden"),k=
=3Dthis;for(i in a){var =
n=3Di.replace(ia,ja);if(i!=3D=3Dn){a[n]=3Da[i];delete =
a[i];i=3Dn}if(a[i]=3D=3D=3D"hide"&&o||a[i]=3D=3D=3D"show"&&!o)return =
j.complete.call(this);if((i=3D=3D=3D"height"||i=3D=3D=3D"width")&&this.st=
yle){j.display=3Dc.css(this,"display");j.overflow=3Dthis.style.overflow}i=
f(c.isArray(a[i])){(j.specialEasing=3D=0A=
j.specialEasing||{})[i]=3Da[i][1];a[i]=3Da[i][0]}}if(j.overflow!=3Dnull)t=
his.style.overflow=3D"hidden";j.curAnim=3Dc.extend({},a);c.each(a,functio=
n(r,u){var z=3Dnew =
c.fx(k,j,r);if(Ab.test(u))z[u=3D=3D=3D"toggle"?o?"show":"hide":u](a);else=
{var C=3DBb.exec(u),B=3Dz.cur(true)||0;if(C){u=3DparseFloat(C[2]);var =
E=3DC[3]||"px";if(E!=3D=3D"px"){k.style[r]=3D(u||1)+E;B=3D(u||1)/z.cur(tr=
ue)*B;k.style[r]=3DB+E}if(C[1])u=3D(C[1]=3D=3D=3D"-=3D"?-1:1)*u+B;z.custo=
m(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var =
d=3Dc.timers;a&&this.queue([]);=0A=
this.each(function(){for(var =
f=3Dd.length-1;f>=3D0;f--)if(d[f].elem=3D=3D=3Dthis){b&&d[f](true);d.spli=
ce(f,1)}});b||this.dequeue();return =
this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("=
toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b=
){c.fn[a]=3Dfunction(d,f){return =
this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=3Da&&typeof =
a=3D=3D=3D"object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,ea=
sing:d&&b||b&&!c.isFunction(b)&&b};f.duration=3Dc.fx.off?0:typeof =
f.duration=3D=3D=3D=0A=
"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=3D=
f.complete;f.complete=3Dfunction(){f.queue!=3D=3Dfalse&&c(this).dequeue()=
;c.isFunction(f.old)&&f.old.call(this)};return =
f},easing:{linear:function(a,b,d,f){return =
d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},t=
imers:[],fx:function(a,b,d){this.options=3Db;this.elem=3Da;this.prop=3Dd;=
if(!b.orig)b.orig=3D{}}});c.fx.prototype=3D{update:function(){this.option=
s.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.p=
rop]||=0A=
c.fx.step._default)(this);if((this.prop=3D=3D=3D"height"||this.prop=3D=3D=
=3D"width")&&this.elem.style)this.elem.style.display=3D"block"},cur:funct=
ion(a){if(this.elem[this.prop]!=3Dnull&&(!this.elem.style||this.elem.styl=
e[this.prop]=3D=3Dnull))return =
this.elem[this.prop];return(a=3DparseFloat(c.css(this.elem,this.prop,a)))=
&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:functio=
n(a,b,d){function f(j){return =
e.step(j)}this.startTime=3DJ();this.start=3Da;this.end=3Db;this.unit=3Dd|=
|this.unit||"px";this.now=3Dthis.start;=0A=
this.pos=3Dthis.state=3D0;var =
e=3Dthis;f.elem=3Dthis.elem;if(f()&&c.timers.push(f)&&!W)W=3DsetInterval(=
c.fx.tick,13)},show:function(){this.options.orig[this.prop]=3Dc.style(thi=
s.elem,this.prop);this.options.show=3Dtrue;this.custom(this.prop=3D=3D=3D=
"width"||this.prop=3D=3D=3D"height"?1:0,this.cur());c(this.elem).show()},=
hide:function(){this.options.orig[this.prop]=3Dc.style(this.elem,this.pro=
p);this.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(a){v=
ar =
b=3DJ(),d=3Dtrue;if(a||b>=3Dthis.options.duration+this.startTime){this.no=
w=3D=0A=
this.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[thi=
s.prop]=3Dtrue;for(var f in =
this.options.curAnim)if(this.options.curAnim[f]!=3D=3Dtrue)d=3Dfalse;if(d=
){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dthis.option=
s.overflow;a=3Dc.data(this.elem,"olddisplay");this.elem.style.display=3Da=
?a:this.options.display;if(c.css(this.elem,"display")=3D=3D=3D"none")this=
.elem.style.display=3D"block"}this.options.hide&&c(this.elem).hide();if(t=
his.options.hide||this.options.show)for(var e in =
this.options.curAnim)c.style(this.elem,=0A=
e,this.options.orig[e]);this.options.complete.call(this.elem)}return =
false}else{e=3Db-this.startTime;this.state=3De/this.options.duration;a=3D=
this.options.easing||(c.easing.swing?"swing":"linear");this.pos=3Dc.easin=
g[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](t=
his.state,e,0,1,this.options.duration);this.now=3Dthis.start+(this.end-th=
is.start)*this.pos;this.update()}return =
true}};c.extend(c.fx,{tick:function(){for(var =
a=3Dc.timers,b=3D0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||=0A=
c.fx.stop()},stop:function(){clearInterval(W);W=3Dnull},speeds:{slow:600,=
fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity"=
,a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=3Dnu=
ll)a.elem.style[a.prop]=3D(a.prop=3D=3D=3D"width"||a.prop=3D=3D=3D"height=
"?Math.max(0,a.now):a.now)+a.unit;else =
a.elem[a.prop]=3Da.now}}});if(c.expr&&c.expr.filters)c.expr.filters.anima=
ted=3Dfunction(a){return c.grep(c.timers,function(b){return =
a=3D=3D=3Db.elem}).length};c.fn.offset=3D"getBoundingClientRect"in =
s.documentElement?=0A=
function(a){var b=3Dthis[0];if(a)return =
this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);var =
d=3Db.getBoundingClientRect(),f=3Db.ownerDocument;b=3Df.body;f=3Df.docume=
ntElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrol=
lTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXO=
ffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.c=
lientLeft||0)}}:function(a){var b=3D=0A=
this[0];if(a)return =
this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);c.offset.initialize();var =
d=3Db.offsetParent,f=3Db,e=3Db.ownerDocument,j,i=3De.documentElement,o=3D=
e.body;f=3D(e=3De.defaultView)?e.getComputedStyle(b,null):b.currentStyle;=
for(var =
k=3Db.offsetTop,n=3Db.offsetLeft;(b=3Db.parentNode)&&b!=3D=3Do&&b!=3D=3Di=
;){if(c.offset.supportsFixedPosition&&f.position=3D=3D=3D"fixed")break;j=3D=
e?e.getComputedStyle(b,null):b.currentStyle;=0A=
k-=3Db.scrollTop;n-=3Db.scrollLeft;if(b=3D=3D=3Dd){k+=3Db.offsetTop;n+=3D=
b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTab=
leAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=3DparseFloat(j.borderT=
opWidth)||0;n+=3DparseFloat(j.borderLeftWidth)||0}f=3Dd;d=3Db.offsetParen=
t}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=3D=3D"vis=
ible"){k+=3DparseFloat(j.borderTopWidth)||0;n+=3DparseFloat(j.borderLeftW=
idth)||0}f=3Dj}if(f.position=3D=3D=3D"relative"||f.position=3D=3D=3D"stat=
ic"){k+=3Do.offsetTop;n+=3Do.offsetLeft}if(c.offset.supportsFixedPosition=
&&=0A=
f.position=3D=3D=3D"fixed"){k+=3DMath.max(i.scrollTop,o.scrollTop);n+=3DM=
ath.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset=3D{init=
ialize:function(){var =
a=3Ds.body,b=3Ds.createElement("div"),d,f,e,j=3DparseFloat(c.curCSS(a,"ma=
rginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,mar=
gin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML=
=3D"<div style=3D'position:absolute;top:0;left:0;margin:0;border:5px =
solid #000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";=0A=
a.insertBefore(b,a.firstChild);d=3Db.firstChild;f=3Dd.firstChild;e=3Dd.ne=
xtSibling.firstChild.firstChild;this.doesNotAddBorder=3Df.offsetTop!=3D=3D=
5;this.doesAddBorderForTableAndCells=3De.offsetTop=3D=3D=3D5;f.style.posi=
tion=3D"fixed";f.style.top=3D"20px";this.supportsFixedPosition=3Df.offset=
Top=3D=3D=3D20||f.offsetTop=3D=3D=3D15;f.style.position=3Df.style.top=3D"=
";d.style.overflow=3D"hidden";d.style.position=3D"relative";this.subtract=
sBorderForOverflowNotVisible=3Df.offsetTop=3D=3D=3D-5;this.doesNotInclude=
MarginInBodyOffset=3Da.offsetTop!=3D=3Dj;a.removeChild(b);=0A=
c.offset.initialize=3Dc.noop},bodyOffset:function(a){var =
b=3Da.offsetTop,d=3Da.offsetLeft;c.offset.initialize();if(c.offset.doesNo=
tIncludeMarginInBodyOffset){b+=3DparseFloat(c.curCSS(a,"marginTop",true))=
||0;d+=3DparseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d=
}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.s=
tyle.position=3D"relative";var =
f=3Dc(a),e=3Df.offset(),j=3DparseInt(c.curCSS(a,"top",true),10)||0,i=3Dpa=
rseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=3Db.call(a,=0A=
d,e);d=3D{top:b.top-e.top+j,left:b.left-e.left+i};"using"in =
b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[=
0])return null;var =
a=3Dthis[0],b=3Dthis.offsetParent(),d=3Dthis.offset(),f=3D/^body|html$/i.=
test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=3DparseFloat(c.curCS=
S(a,"marginTop",true))||0;d.left-=3DparseFloat(c.curCSS(a,"marginLeft",tr=
ue))||0;f.top+=3DparseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.le=
ft+=3DparseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.t=
op-=0A=
f.top,left:d.left-f.left}},offsetParent:function(){return =
this.map(function(){for(var =
a=3Dthis.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(=
a,"position")=3D=3D=3D"static";)a=3Da.offsetParent;return =
a})}});c.each(["Left","Top"],function(a,b){var =
d=3D"scroll"+b;c.fn[d]=3Dfunction(f){var e=3Dthis[0],j;if(!e)return =
null;if(f!=3D=3Dw)return =
this.each(function(){if(j=3Dwa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?=
f:c(j).scrollTop());else this[d]=3Df});else =
return(j=3Dwa(e))?"pageXOffset"in j?j[a?"pageYOffset":=0A=
"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.docum=
ent.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var =
d=3Db.toLowerCase();c.fn["inner"+b]=3Dfunction(){return =
this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=3Dfunction=
(f){return =
this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=3Dfuncti=
on(f){var e=3Dthis[0];if(!e)return =
f=3D=3Dnull?null:this;if(c.isFunction(f))return =
this.each(function(j){var =
i=3Dc(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in=0A=
e&&e.document?e.document.compatMode=3D=3D=3D"CSS1Compat"&&e.document.docu=
mentElement["client"+b]||e.document.body["client"+b]:e.nodeType=3D=3D=3D9=
?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElem=
ent["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f=3D=3D=
=3Dw?c.css(e,d):this.css(d,typeof =
f=3D=3D=3D"string"?f:f+"px")}});A.jQuery=3DA.$=3Dc})(window);jQuery.noCon=
flict();=0A=

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-includes/js/jquery/jquery.js?ver=1.2.6

/*!=0A=
 * jQuery JavaScript Library v1.4.2=0A=
 * http://jquery.com/=0A=
 *=0A=
 * Copyright 2010, John Resig=0A=
 * Dual licensed under the MIT or GPL Version 2 licenses.=0A=
 * http://jquery.org/license=0A=
 *=0A=
 * Includes Sizzle.js=0A=
 * http://sizzlejs.com/=0A=
 * Copyright 2010, The Dojo Foundation=0A=
 * Released under the MIT, BSD, and GPL Licenses.=0A=
 *=0A=
 * Date: Sat Feb 13 22:33:48 2010 -0500=0A=
 */=0A=
(function(A,w){function =
ma(){if(!c.isReady){try{s.documentElement.doScroll("left")}catch(a){setTi=
meout(ma,1);return}c.ready()}}function =
Qa(a,b){b.src?c.ajax({url:b.src,async:false,dataType:"script"}):c.globalE=
val(b.text||b.textContent||b.innerHTML||"");b.parentNode&&b.parentNode.re=
moveChild(b)}function X(a,b,d,f,e,j){var i=3Da.length;if(typeof =
b=3D=3D=3D"object"){for(var o in b)X(a,o,b[o],f,e,d);return =
a}if(d!=3D=3Dw){f=3D!j&&f&&c.isFunction(d);for(o=3D0;o<i;o++)e(a[o],b,f?d=
.call(a[o],o,e(a[o],b)):d,j);return a}return i?=0A=
e(a[0],b):w}function J(){return(new Date).getTime()}function Y(){return =
false}function Z(){return true}function na(a,b,d){d[0].type=3Da;return =
c.event.handle.apply(b,d)}function oa(a){var =
b,d=3D[],f=3D[],e=3Darguments,j,i,o,k,n,r;i=3Dc.data(this,"events");if(!(=
a.liveFired=3D=3D=3Dthis||!i||!i.live||a.button&&a.type=3D=3D=3D"click"))=
{a.liveFired=3Dthis;var =
u=3Di.live.slice(0);for(k=3D0;k<u.length;k++){i=3Du[k];i.origType.replace=
(O,"")=3D=3D=3Da.type?f.push(i.selector):u.splice(k--,1)}j=3Dc(a.target).=
closest(f,a.currentTarget);n=3D0;for(r=3D=0A=
j.length;n<r;n++)for(k=3D0;k<u.length;k++){i=3Du[k];if(j[n].selector=3D=3D=
=3Di.selector){o=3Dj[n].elem;f=3Dnull;if(i.preType=3D=3D=3D"mouseenter"||=
i.preType=3D=3D=3D"mouseleave")f=3Dc(a.relatedTarget).closest(i.selector)=
[0];if(!f||f!=3D=3Do)d.push({elem:o,handleObj:i})}}n=3D0;for(r=3Dd.length=
;n<r;n++){j=3Dd[n];a.currentTarget=3Dj.elem;a.data=3Dj.handleObj.data;a.h=
andleObj=3Dj.handleObj;if(j.handleObj.origHandler.apply(j.elem,e)=3D=3D=3D=
false){b=3Dfalse;break}}return b}}function =
pa(a,b){return"live."+(a&&a!=3D=3D"*"?a+".":"")+b.replace(/\./g,"`").repl=
ace(/ /g,=0A=
"&")}function =
qa(a){return!a||!a.parentNode||a.parentNode.nodeType=3D=3D=3D11}function =
ra(a,b){var =
d=3D0;b.each(function(){if(this.nodeName=3D=3D=3D(a[d]&&a[d].nodeName)){v=
ar f=3Dc.data(a[d++]),e=3Dc.data(this,f);if(f=3Df&&f.events){delete =
e.handle;e.events=3D{};for(var j in f)for(var i in =
f[j])c.event.add(this,j,f[j][i],f[j][i].data)}}})}function sa(a,b,d){var =
f,e,j;b=3Db&&b[0]?b[0].ownerDocument||b[0]:s;if(a.length=3D=3D=3D1&&typeo=
f =
a[0]=3D=3D=3D"string"&&a[0].length<512&&b=3D=3D=3Ds&&!ta.test(a[0])&&(c.s=
upport.checkClone||!ua.test(a[0]))){e=3D=0A=
true;if(j=3Dc.fragments[a[0]])if(j!=3D=3D1)f=3Dj}if(!f){f=3Db.createDocum=
entFragment();c.clean(a,b,f,d)}if(e)c.fragments[a[0]]=3Dj?f:1;return{frag=
ment:f,cacheable:e}}function K(a,b){var =
d=3D{};c.each(va.concat.apply([],va.slice(0,b)),function(){d[this]=3Da});=
return d}function wa(a){return"scrollTo"in =
a&&a.document?a:a.nodeType=3D=3D=3D9?a.defaultView||a.parentWindow:false}=
var c=3Dfunction(a,b){return new =
c.fn.init(a,b)},Ra=3DA.jQuery,Sa=3DA.$,s=3DA.document,T,Ta=3D/^[^<]*(<[\w=
\W]+>)[^>]*$|^#([\w-]+)$/,Ua=3D/^.[^:#\[\.,]*$/,Va=3D/\S/,=0A=
Wa=3D/^(\s|\u00A0)+|(\s|\u00A0)+$/g,Xa=3D/^<(\w+)\s*\/?>(?:<\/\1>)?$/,P=3D=
navigator.userAgent,xa=3Dfalse,Q=3D[],L,$=3DObject.prototype.toString,aa=3D=
Object.prototype.hasOwnProperty,ba=3DArray.prototype.push,R=3DArray.proto=
type.slice,ya=3DArray.prototype.indexOf;c.fn=3Dc.prototype=3D{init:functi=
on(a,b){var d,f;if(!a)return =
this;if(a.nodeType){this.context=3Dthis[0]=3Da;this.length=3D1;return =
this}if(a=3D=3D=3D"body"&&!b){this.context=3Ds;this[0]=3Ds.body;this.sele=
ctor=3D"body";this.length=3D1;return this}if(typeof =
a=3D=3D=3D"string")if((d=3DTa.exec(a))&&=0A=
(d[1]||!b))if(d[1]){f=3Db?b.ownerDocument||b:s;if(a=3DXa.exec(a))if(c.isP=
lainObject(b)){a=3D[s.createElement(a[1])];c.fn.attr.call(a,b,true)}else =
a=3D[f.createElement(a[1])];else{a=3Dsa([d[1]],[f]);a=3D(a.cacheable?a.fr=
agment.cloneNode(true):a.fragment).childNodes}return =
c.merge(this,a)}else{if(b=3Ds.getElementById(d[2])){if(b.id!=3D=3Dd[2])re=
turn =
T.find(a);this.length=3D1;this[0]=3Db}this.context=3Ds;this.selector=3Da;=
return this}else =
if(!b&&/^\w+$/.test(a)){this.selector=3Da;this.context=3Ds;a=3Ds.getEleme=
ntsByTagName(a);return c.merge(this,=0A=
a)}else return!b||b.jquery?(b||T).find(a):c(b).find(a);else =
if(c.isFunction(a))return =
T.ready(a);if(a.selector!=3D=3Dw){this.selector=3Da.selector;this.context=
=3Da.context}return =
c.makeArray(a,this)},selector:"",jquery:"1.4.2",length:0,size:function(){=
return this.length},toArray:function(){return =
R.call(this,0)},get:function(a){return =
a=3D=3Dnull?this.toArray():a<0?this.slice(a)[0]:this[a]},pushStack:functi=
on(a,b,d){var =
f=3Dc();c.isArray(a)?ba.apply(f,a):c.merge(f,a);f.prevObject=3Dthis;f.con=
text=3Dthis.context;if(b=3D=3D=3D=0A=
"find")f.selector=3Dthis.selector+(this.selector?" ":"")+d;else =
if(b)f.selector=3Dthis.selector+"."+b+"("+d+")";return =
f},each:function(a,b){return =
c.each(this,a,b)},ready:function(a){c.bindReady();if(c.isReady)a.call(s,c=
);else Q&&Q.push(a);return this},eq:function(a){return =
a=3D=3D=3D-1?this.slice(a):this.slice(a,+a+1)},first:function(){return =
this.eq(0)},last:function(){return this.eq(-1)},slice:function(){return =
this.pushStack(R.apply(this,arguments),"slice",R.call(arguments).join(","=
))},map:function(a){return this.pushStack(c.map(this,=0A=
function(b,d){return a.call(b,d,b)}))},end:function(){return =
this.prevObject||c(null)},push:ba,sort:[].sort,splice:[].splice};c.fn.ini=
t.prototype=3Dc.fn;c.extend=3Dc.fn.extend=3Dfunction(){var =
a=3Darguments[0]||{},b=3D1,d=3Darguments.length,f=3Dfalse,e,j,i,o;if(type=
of a=3D=3D=3D"boolean"){f=3Da;a=3Darguments[1]||{};b=3D2}if(typeof =
a!=3D=3D"object"&&!c.isFunction(a))a=3D{};if(d=3D=3D=3Db){a=3Dthis;--b}fo=
r(;b<d;b++)if((e=3Darguments[b])!=3Dnull)for(j in =
e){i=3Da[j];o=3De[j];if(a!=3D=3Do)if(f&&o&&(c.isPlainObject(o)||c.isArray=
(o))){i=3Di&&(c.isPlainObject(i)||=0A=
c.isArray(i))?i:c.isArray(o)?[]:{};a[j]=3Dc.extend(f,i,o)}else =
if(o!=3D=3Dw)a[j]=3Do}return =
a};c.extend({noConflict:function(a){A.$=3DSa;if(a)A.jQuery=3DRa;return =
c},isReady:false,ready:function(){if(!c.isReady){if(!s.body)return =
setTimeout(c.ready,13);c.isReady=3Dtrue;if(Q){for(var =
a,b=3D0;a=3DQ[b++];)a.call(s,c);Q=3Dnull}c.fn.triggerHandler&&c(s).trigge=
rHandler("ready")}},bindReady:function(){if(!xa){xa=3Dtrue;if(s.readyStat=
e=3D=3D=3D"complete")return =
c.ready();if(s.addEventListener){s.addEventListener("DOMContentLoaded",=0A=
L,false);A.addEventListener("load",c.ready,false)}else =
if(s.attachEvent){s.attachEvent("onreadystatechange",L);A.attachEvent("on=
load",c.ready);var =
a=3Dfalse;try{a=3DA.frameElement=3D=3Dnull}catch(b){}s.documentElement.do=
Scroll&&a&&ma()}}},isFunction:function(a){return =
$.call(a)=3D=3D=3D"[object Function]"},isArray:function(a){return =
$.call(a)=3D=3D=3D"[object =
Array]"},isPlainObject:function(a){if(!a||$.call(a)!=3D=3D"[object =
Object]"||a.nodeType||a.setInterval)return =
false;if(a.constructor&&!aa.call(a,"constructor")&&!aa.call(a.constructor=
.prototype,=0A=
"isPrototypeOf"))return false;var b;for(b in a);return =
b=3D=3D=3Dw||aa.call(a,b)},isEmptyObject:function(a){for(var b in =
a)return false;return true},error:function(a){throw =
a;},parseJSON:function(a){if(typeof a!=3D=3D"string"||!a)return =
null;a=3Dc.trim(a);if(/^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u=
[0-9a-fA-F]{4})/g,"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\=
d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return =
A.JSON&&A.JSON.parse?A.JSON.parse(a):(new Function("return "+=0A=
a))();else c.error("Invalid JSON: =
"+a)},noop:function(){},globalEval:function(a){if(a&&Va.test(a)){var =
b=3Ds.getElementsByTagName("head")[0]||s.documentElement,d=3Ds.createElem=
ent("script");d.type=3D"text/javascript";if(c.support.scriptEval)d.append=
Child(s.createTextNode(a));else =
d.text=3Da;b.insertBefore(d,b.firstChild);b.removeChild(d)}},nodeName:fun=
ction(a,b){return =
a.nodeName&&a.nodeName.toUpperCase()=3D=3D=3Db.toUpperCase()},each:functi=
on(a,b,d){var =
f,e=3D0,j=3Da.length,i=3Dj=3D=3D=3Dw||c.isFunction(a);if(d)if(i)for(f in =
a){if(b.apply(a[f],=0A=
d)=3D=3D=3Dfalse)break}else =
for(;e<j;){if(b.apply(a[e++],d)=3D=3D=3Dfalse)break}else if(i)for(f in =
a){if(b.call(a[f],f,a[f])=3D=3D=3Dfalse)break}else =
for(d=3Da[0];e<j&&b.call(d,e,d)!=3D=3Dfalse;d=3Da[++e]);return =
a},trim:function(a){return(a||"").replace(Wa,"")},makeArray:function(a,b)=
{b=3Db||[];if(a!=3Dnull)a.length=3D=3Dnull||typeof =
a=3D=3D=3D"string"||c.isFunction(a)||typeof =
a!=3D=3D"function"&&a.setInterval?ba.call(b,a):c.merge(b,a);return =
b},inArray:function(a,b){if(b.indexOf)return b.indexOf(a);for(var =
d=3D0,f=3Db.length;d<f;d++)if(b[d]=3D=3D=3D=0A=
a)return d;return-1},merge:function(a,b){var =
d=3Da.length,f=3D0;if(typeof b.length=3D=3D=3D"number")for(var =
e=3Db.length;f<e;f++)a[d++]=3Db[f];else =
for(;b[f]!=3D=3Dw;)a[d++]=3Db[f++];a.length=3Dd;return =
a},grep:function(a,b,d){for(var =
f=3D[],e=3D0,j=3Da.length;e<j;e++)!d!=3D=3D!b(a[e],e)&&f.push(a[e]);retur=
n f},map:function(a,b,d){for(var =
f=3D[],e,j=3D0,i=3Da.length;j<i;j++){e=3Db(a[j],j,d);if(e!=3Dnull)f[f.len=
gth]=3De}return =
f.concat.apply([],f)},guid:1,proxy:function(a,b,d){if(arguments.length=3D=
=3D=3D2)if(typeof b=3D=3D=3D"string"){d=3Da;a=3Dd[b];b=3Dw}else if(b&&=0A=
!c.isFunction(b)){d=3Db;b=3Dw}if(!b&&a)b=3Dfunction(){return =
a.apply(d||this,arguments)};if(a)b.guid=3Da.guid=3Da.guid||b.guid||c.guid=
++;return b},uaMatch:function(a){a=3Da.toLowerCase();a=3D/(webkit)[ =
\/]([\w.]+)/.exec(a)||/(opera)(?:.*version)?[ =
\/]([\w.]+)/.exec(a)||/(msie) =
([\w.]+)/.exec(a)||!/compatible/.test(a)&&/(mozilla)(?:.*? =
rv:([\w.]+))?/.exec(a)||[];return{browser:a[1]||"",version:a[2]||"0"}},br=
owser:{}});P=3Dc.uaMatch(P);if(P.browser){c.browser[P.browser]=3Dtrue;c.b=
rowser.version=3DP.version}if(c.browser.webkit)c.browser.safari=3D=0A=
true;if(ya)c.inArray=3Dfunction(a,b){return =
ya.call(b,a)};T=3Dc(s);if(s.addEventListener)L=3Dfunction(){s.removeEvent=
Listener("DOMContentLoaded",L,false);c.ready()};else =
if(s.attachEvent)L=3Dfunction(){if(s.readyState=3D=3D=3D"complete"){s.det=
achEvent("onreadystatechange",L);c.ready()}};(function(){c.support=3D{};v=
ar =
a=3Ds.documentElement,b=3Ds.createElement("script"),d=3Ds.createElement("=
div"),f=3D"script"+J();d.style.display=3D"none";d.innerHTML=3D"   =
<link/><table></table><a href=3D'/a' =
style=3D'color:red;float:left;opacity:.55;'>a</a><input =
type=3D'checkbox'/>";=0A=
var =
e=3Dd.getElementsByTagName("*"),j=3Dd.getElementsByTagName("a")[0];if(!(!=
e||!e.length||!j)){c.support=3D{leadingWhitespace:d.firstChild.nodeType=3D=
=3D=3D3,tbody:!d.getElementsByTagName("tbody").length,htmlSerialize:!!d.g=
etElementsByTagName("link").length,style:/red/.test(j.getAttribute("style=
")),hrefNormalized:j.getAttribute("href")=3D=3D=3D"/a",opacity:/^0.55$/.t=
est(j.style.opacity),cssFloat:!!j.style.cssFloat,checkOn:d.getElementsByT=
agName("input")[0].value=3D=3D=3D"on",optSelected:s.createElement("select=
").appendChild(s.createElement("option")).selected,=0A=
parentNode:d.removeChild(d.appendChild(s.createElement("div"))).parentNod=
e=3D=3D=3Dnull,deleteExpando:true,checkClone:false,scriptEval:false,noClo=
neEvent:true,boxModel:null};b.type=3D"text/javascript";try{b.appendChild(=
s.createTextNode("window."+f+"=3D1;"))}catch(i){}a.insertBefore(b,a.first=
Child);if(A[f]){c.support.scriptEval=3Dtrue;delete A[f]}try{delete =
b.test}catch(o){c.support.deleteExpando=3Dfalse}a.removeChild(b);if(d.att=
achEvent&&d.fireEvent){d.attachEvent("onclick",function =
k(){c.support.noCloneEvent=3D=0A=
false;d.detachEvent("onclick",k)});d.cloneNode(true).fireEvent("onclick")=
}d=3Ds.createElement("div");d.innerHTML=3D"<input type=3D'radio' =
name=3D'radiotest' =
checked=3D'checked'/>";a=3Ds.createDocumentFragment();a.appendChild(d.fir=
stChild);c.support.checkClone=3Da.cloneNode(true).cloneNode(true).lastChi=
ld.checked;c(function(){var =
k=3Ds.createElement("div");k.style.width=3Dk.style.paddingLeft=3D"1px";s.=
body.appendChild(k);c.boxModel=3Dc.support.boxModel=3Dk.offsetWidth=3D=3D=
=3D2;s.body.removeChild(k).style.display=3D"none"});a=3Dfunction(k){var =
n=3D=0A=
s.createElement("div");k=3D"on"+k;var r=3Dk in =
n;if(!r){n.setAttribute(k,"return;");r=3Dtypeof =
n[k]=3D=3D=3D"function"}return =
r};c.support.submitBubbles=3Da("submit");c.support.changeBubbles=3Da("cha=
nge");a=3Db=3Dd=3De=3Dj=3Dnull}})();c.props=3D{"for":"htmlFor","class":"c=
lassName",readonly:"readOnly",maxlength:"maxLength",cellspacing:"cellSpac=
ing",rowspan:"rowSpan",colspan:"colSpan",tabindex:"tabIndex",usemap:"useM=
ap",frameborder:"frameBorder"};var =
G=3D"jQuery"+J(),Ya=3D0,za=3D{};c.extend({cache:{},expando:G,noData:{embe=
d:true,object:true,=0A=
applet:true},data:function(a,b,d){if(!(a.nodeName&&c.noData[a.nodeName.to=
LowerCase()])){a=3Da=3D=3DA?za:a;var f=3Da[G],e=3Dc.cache;if(!f&&typeof =
b=3D=3D=3D"string"&&d=3D=3D=3Dw)return null;f||(f=3D++Ya);if(typeof =
b=3D=3D=3D"object"){a[G]=3Df;e[f]=3Dc.extend(true,{},b)}else =
if(!e[f]){a[G]=3Df;e[f]=3D{}}a=3De[f];if(d!=3D=3Dw)a[b]=3Dd;return =
typeof =
b=3D=3D=3D"string"?a[b]:a}},removeData:function(a,b){if(!(a.nodeName&&c.n=
oData[a.nodeName.toLowerCase()])){a=3Da=3D=3DA?za:a;var =
d=3Da[G],f=3Dc.cache,e=3Df[d];if(b){if(e){delete =
e[b];c.isEmptyObject(e)&&c.removeData(a)}}else{if(c.support.deleteExpando=
)delete a[c.expando];=0A=
else a.removeAttribute&&a.removeAttribute(c.expando);delete =
f[d]}}}});c.fn.extend({data:function(a,b){if(typeof =
a=3D=3D=3D"undefined"&&this.length)return c.data(this[0]);else if(typeof =
a=3D=3D=3D"object")return this.each(function(){c.data(this,a)});var =
d=3Da.split(".");d[1]=3Dd[1]?"."+d[1]:"";if(b=3D=3D=3Dw){var =
f=3Dthis.triggerHandler("getData"+d[1]+"!",[d[0]]);if(f=3D=3D=3Dw&&this.l=
ength)f=3Dc.data(this[0],a);return =
f=3D=3D=3Dw&&d[1]?this.data(d[0]):f}else return =
this.trigger("setData"+d[1]+"!",[d[0],b]).each(function(){c.data(this,=0A=
a,b)})},removeData:function(a){return =
this.each(function(){c.removeData(this,a)})}});c.extend({queue:function(a=
,b,d){if(a){b=3D(b||"fx")+"queue";var f=3Dc.data(a,b);if(!d)return =
f||[];if(!f||c.isArray(d))f=3Dc.data(a,b,c.makeArray(d));else =
f.push(d);return f}},dequeue:function(a,b){b=3Db||"fx";var =
d=3Dc.queue(a,b),f=3Dd.shift();if(f=3D=3D=3D"inprogress")f=3Dd.shift();if=
(f){b=3D=3D=3D"fx"&&d.unshift("inprogress");f.call(a,function(){c.dequeue=
(a,b)})}}});c.fn.extend({queue:function(a,b){if(typeof =
a!=3D=3D"string"){b=3Da;a=3D"fx"}if(b=3D=3D=3D=0A=
w)return c.queue(this[0],a);return this.each(function(){var =
d=3Dc.queue(this,a,b);a=3D=3D=3D"fx"&&d[0]!=3D=3D"inprogress"&&c.dequeue(=
this,a)})},dequeue:function(a){return =
this.each(function(){c.dequeue(this,a)})},delay:function(a,b){a=3Dc.fx?c.=
fx.speeds[a]||a:a;b=3Db||"fx";return this.queue(b,function(){var =
d=3Dthis;setTimeout(function(){c.dequeue(d,b)},a)})},clearQueue:function(=
a){return this.queue(a||"fx",[])}});var =
Aa=3D/[\n\t]/g,ca=3D/\s+/,Za=3D/\r/g,$a=3D/href|src|style/,ab=3D/(button|=
input)/i,bb=3D/(button|input|object|select|textarea)/i,=0A=
cb=3D/^(a|area)$/i,Ba=3D/radio|checkbox/;c.fn.extend({attr:function(a,b){=
return X(this,a,b,true,c.attr)},removeAttr:function(a){return =
this.each(function(){c.attr(this,a,"");this.nodeType=3D=3D=3D1&&this.remo=
veAttribute(a)})},addClass:function(a){if(c.isFunction(a))return =
this.each(function(n){var =
r=3Dc(this);r.addClass(a.call(this,n,r.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string")for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1)if(e.className){for(var j=3D" =
"+e.className+" ",=0A=
i=3De.className,o=3D0,k=3Db.length;o<k;o++)if(j.indexOf(" "+b[o]+" =
")<0)i+=3D" "+b[o];e.className=3Dc.trim(i)}else e.className=3Da}return =
this},removeClass:function(a){if(c.isFunction(a))return =
this.each(function(k){var =
n=3Dc(this);n.removeClass(a.call(this,k,n.attr("class")))});if(a&&typeof =
a=3D=3D=3D"string"||a=3D=3D=3Dw)for(var =
b=3D(a||"").split(ca),d=3D0,f=3Dthis.length;d<f;d++){var =
e=3Dthis[d];if(e.nodeType=3D=3D=3D1&&e.className)if(a){for(var j=3D(" =
"+e.className+" ").replace(Aa," =
"),i=3D0,o=3Db.length;i<o;i++)j=3Dj.replace(" "+b[i]+" ",=0A=
" ");e.className=3Dc.trim(j)}else e.className=3D""}return =
this},toggleClass:function(a,b){var d=3Dtypeof a,f=3Dtypeof =
b=3D=3D=3D"boolean";if(c.isFunction(a))return this.each(function(e){var =
j=3Dc(this);j.toggleClass(a.call(this,e,j.attr("class"),b),b)});return =
this.each(function(){if(d=3D=3D=3D"string")for(var =
e,j=3D0,i=3Dc(this),o=3Db,k=3Da.split(ca);e=3Dk[j++];){o=3Df?o:!i.hasClas=
s(e);i[o?"addClass":"removeClass"](e)}else =
if(d=3D=3D=3D"undefined"||d=3D=3D=3D"boolean"){this.className&&c.data(thi=
s,"__className__",this.className);this.className=3D=0A=
this.className||a=3D=3D=3Dfalse?"":c.data(this,"__className__")||""}})},h=
asClass:function(a){a=3D" "+a+" ";for(var =
b=3D0,d=3Dthis.length;b<d;b++)if((" "+this[b].className+" =
").replace(Aa," ").indexOf(a)>-1)return true;return =
false},val:function(a){if(a=3D=3D=3Dw){var =
b=3Dthis[0];if(b){if(c.nodeName(b,"option"))return(b.attributes.value||{}=
).specified?b.value:b.text;if(c.nodeName(b,"select")){var =
d=3Db.selectedIndex,f=3D[],e=3Db.options;b=3Db.type=3D=3D=3D"select-one";=
if(d<0)return null;var j=3Db?d:0;for(d=3Db?d+1:e.length;j<d;j++){var i=3D=0A=
e[j];if(i.selected){a=3Dc(i).val();if(b)return a;f.push(a)}}return =
f}if(Ba.test(b.type)&&!c.support.checkOn)return =
b.getAttribute("value")=3D=3D=3Dnull?"on":b.value;return(b.value||"").rep=
lace(Za,"")}return w}var o=3Dc.isFunction(a);return =
this.each(function(k){var =
n=3Dc(this),r=3Da;if(this.nodeType=3D=3D=3D1){if(o)r=3Da.call(this,k,n.va=
l());if(typeof =
r=3D=3D=3D"number")r+=3D"";if(c.isArray(r)&&Ba.test(this.type))this.check=
ed=3Dc.inArray(n.val(),r)>=3D0;else if(c.nodeName(this,"select")){var =
u=3Dc.makeArray(r);c("option",this).each(function(){this.selected=3D=0A=
c.inArray(c(this).val(),u)>=3D0});if(!u.length)this.selectedIndex=3D-1}el=
se =
this.value=3Dr}})}});c.extend({attrFn:{val:true,css:true,html:true,text:t=
rue,data:true,width:true,height:true,offset:true},attr:function(a,b,d,f){=
if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)return w;if(f&&b in =
c.attrFn)return c(a)[b](d);f=3Da.nodeType!=3D=3D1||!c.isXMLDoc(a);var =
e=3Dd!=3D=3Dw;b=3Df&&c.props[b]||b;if(a.nodeType=3D=3D=3D1){var =
j=3D$a.test(b);if(b in =
a&&f&&!j){if(e){b=3D=3D=3D"type"&&ab.test(a.nodeName)&&a.parentNode&&c.er=
ror("type property can't be changed");=0A=
a[b]=3Dd}if(c.nodeName(a,"form")&&a.getAttributeNode(b))return =
a.getAttributeNode(b).nodeValue;if(b=3D=3D=3D"tabIndex")return(b=3Da.getA=
ttributeNode("tabIndex"))&&b.specified?b.value:bb.test(a.nodeName)||cb.te=
st(a.nodeName)&&a.href?0:w;return =
a[b]}if(!c.support.style&&f&&b=3D=3D=3D"style"){if(e)a.style.cssText=3D""=
+d;return =
a.style.cssText}e&&a.setAttribute(b,""+d);a=3D!c.support.hrefNormalized&&=
f&&j?a.getAttribute(b,2):a.getAttribute(b);return =
a=3D=3D=3Dnull?w:a}return c.style(a,b,d)}});var =
O=3D/\.(.*)$/,db=3Dfunction(a){return a.replace(/[^\w\s\.\|`]/g,=0A=
function(b){return"\\"+b})};c.event=3D{add:function(a,b,d,f){if(!(a.nodeT=
ype=3D=3D=3D3||a.nodeType=3D=3D=3D8)){if(a.setInterval&&a!=3D=3DA&&!a.fra=
meElement)a=3DA;var =
e,j;if(d.handler){e=3Dd;d=3De.handler}if(!d.guid)d.guid=3Dc.guid++;if(j=3D=
c.data(a)){var =
i=3Dj.events=3Dj.events||{},o=3Dj.handle;if(!o)j.handle=3Do=3Dfunction(){=
return typeof =
c!=3D=3D"undefined"&&!c.event.triggered?c.event.handle.apply(o.elem,argum=
ents):w};o.elem=3Da;b=3Db.split(" ");for(var =
k,n=3D0,r;k=3Db[n++];){j=3De?c.extend({},e):{handler:d,data:f};if(k.index=
Of(".")>-1){r=3Dk.split(".");=0A=
k=3Dr.shift();j.namespace=3Dr.slice(0).sort().join(".")}else{r=3D[];j.nam=
espace=3D""}j.type=3Dk;j.guid=3Dd.guid;var =
u=3Di[k],z=3Dc.event.special[k]||{};if(!u){u=3Di[k]=3D[];if(!z.setup||z.s=
etup.call(a,f,r,o)=3D=3D=3Dfalse)if(a.addEventListener)a.addEventListener=
(k,o,false);else =
a.attachEvent&&a.attachEvent("on"+k,o)}if(z.add){z.add.call(a,j);if(!j.ha=
ndler.guid)j.handler.guid=3Dd.guid}u.push(j);c.event.global[k]=3Dtrue}a=3D=
null}}},global:{},remove:function(a,b,d,f){if(!(a.nodeType=3D=3D=3D3||a.n=
odeType=3D=3D=3D8)){var e,j=3D0,i,o,k,n,r,u,z=3Dc.data(a),=0A=
C=3Dz&&z.events;if(z&&C){if(b&&b.type){d=3Db.handler;b=3Db.type}if(!b||ty=
peof b=3D=3D=3D"string"&&b.charAt(0)=3D=3D=3D"."){b=3Db||"";for(e in =
C)c.event.remove(a,e+b)}else{for(b=3Db.split(" =
");e=3Db[j++];){n=3De;i=3De.indexOf(".")<0;o=3D[];if(!i){o=3De.split(".")=
;e=3Do.shift();k=3Dnew =
RegExp("(^|\\.)"+c.map(o.slice(0).sort(),db).join("\\.(?:.*\\.)?")+"(\\.|=
$)")}if(r=3DC[e])if(d){n=3Dc.event.special[e]||{};for(B=3Df||0;B<r.length=
;B++){u=3Dr[B];if(d.guid=3D=3D=3Du.guid){if(i||k.test(u.namespace)){f=3D=3D=
null&&r.splice(B--,1);n.remove&&n.remove.call(a,u)}if(f!=3D=0A=
null)break}}if(r.length=3D=3D=3D0||f!=3Dnull&&r.length=3D=3D=3D1){if(!n.t=
eardown||n.teardown.call(a,o)=3D=3D=3Dfalse)Ca(a,e,z.handle);delete =
C[e]}}else for(var =
B=3D0;B<r.length;B++){u=3Dr[B];if(i||k.test(u.namespace)){c.event.remove(=
a,n,u.handler,B);r.splice(B--,1)}}}if(c.isEmptyObject(C)){if(b=3Dz.handle=
)b.elem=3Dnull;delete z.events;delete =
z.handle;c.isEmptyObject(z)&&c.removeData(a)}}}}},trigger:function(a,b,d,=
f){var e=3Da.type||a;if(!f){a=3Dtypeof =
a=3D=3D=3D"object"?a[G]?a:c.extend(c.Event(e),a):c.Event(e);if(e.indexOf(=
"!")>=3D0){a.type=3D=0A=
e=3De.slice(0,-1);a.exclusive=3Dtrue}if(!d){a.stopPropagation();c.event.g=
lobal[e]&&c.each(c.cache,function(){this.events&&this.events[e]&&c.event.=
trigger(a,b,this.handle.elem)})}if(!d||d.nodeType=3D=3D=3D3||d.nodeType=3D=
=3D=3D8)return =
w;a.result=3Dw;a.target=3Dd;b=3Dc.makeArray(b);b.unshift(a)}a.currentTarg=
et=3Dd;(f=3Dc.data(d,"handle"))&&f.apply(d,b);f=3Dd.parentNode||d.ownerDo=
cument;try{if(!(d&&d.nodeName&&c.noData[d.nodeName.toLowerCase()]))if(d["=
on"+e]&&d["on"+e].apply(d,b)=3D=3D=3Dfalse)a.result=3Dfalse}catch(j){}if(=
!a.isPropagationStopped()&&=0A=
f)c.event.trigger(a,b,f,true);else =
if(!a.isDefaultPrevented()){f=3Da.target;var =
i,o=3Dc.nodeName(f,"a")&&e=3D=3D=3D"click",k=3Dc.event.special[e]||{};if(=
(!k._default||k._default.call(d,a)=3D=3D=3Dfalse)&&!o&&!(f&&f.nodeName&&c=
.noData[f.nodeName.toLowerCase()])){try{if(f[e]){if(i=3Df["on"+e])f["on"+=
e]=3Dnull;c.event.triggered=3Dtrue;f[e]()}}catch(n){}if(i)f["on"+e]=3Di;c=
.event.triggered=3Dfalse}}},handle:function(a){var =
b,d,f,e;a=3Darguments[0]=3Dc.event.fix(a||A.event);a.currentTarget=3Dthis=
;b=3Da.type.indexOf(".")<0&&!a.exclusive;=0A=
if(!b){d=3Da.type.split(".");a.type=3Dd.shift();f=3Dnew =
RegExp("(^|\\.)"+d.slice(0).sort().join("\\.(?:.*\\.)?")+"(\\.|$)")}e=3Dc=
.data(this,"events");d=3De[a.type];if(e&&d){d=3Dd.slice(0);e=3D0;for(var =
j=3Dd.length;e<j;e++){var =
i=3Dd[e];if(b||f.test(i.namespace)){a.handler=3Di.handler;a.data=3Di.data=
;a.handleObj=3Di;i=3Di.handler.apply(this,arguments);if(i!=3D=3Dw){a.resu=
lt=3Di;if(i=3D=3D=3Dfalse){a.preventDefault();a.stopPropagation()}}if(a.i=
sImmediatePropagationStopped())break}}}return a.result},props:"altKey =
attrChange attrName bubbles button cancelable charCode clientX clientY =
ctrlKey currentTarget data detail eventPhase fromElement handler keyCode =
layerX layerY metaKey newValue offsetX offsetY originalTarget pageX =
pageY prevValue relatedNode relatedTarget screenX screenY shiftKey =
srcElement target toElement view wheelDelta which".split(" "),=0A=
fix:function(a){if(a[G])return a;var b=3Da;a=3Dc.Event(b);for(var =
d=3Dthis.props.length,f;d;){f=3Dthis.props[--d];a[f]=3Db[f]}if(!a.target)=
a.target=3Da.srcElement||s;if(a.target.nodeType=3D=3D=3D3)a.target=3Da.ta=
rget.parentNode;if(!a.relatedTarget&&a.fromElement)a.relatedTarget=3Da.fr=
omElement=3D=3D=3Da.target?a.toElement:a.fromElement;if(a.pageX=3D=3Dnull=
&&a.clientX!=3Dnull){b=3Ds.documentElement;d=3Ds.body;a.pageX=3Da.clientX=
+(b&&b.scrollLeft||d&&d.scrollLeft||0)-(b&&b.clientLeft||d&&d.clientLeft|=
|0);a.pageY=3Da.clientY+(b&&b.scrollTop||=0A=
d&&d.scrollTop||0)-(b&&b.clientTop||d&&d.clientTop||0)}if(!a.which&&(a.ch=
arCode||a.charCode=3D=3D=3D0?a.charCode:a.keyCode))a.which=3Da.charCode||=
a.keyCode;if(!a.metaKey&&a.ctrlKey)a.metaKey=3Da.ctrlKey;if(!a.which&&a.b=
utton!=3D=3Dw)a.which=3Da.button&1?1:a.button&2?3:a.button&4?2:0;return =
a},guid:1E8,proxy:c.proxy,special:{ready:{setup:c.bindReady,teardown:c.no=
op},live:{add:function(a){c.event.add(this,a.origType,c.extend({},a,{hand=
ler:oa}))},remove:function(a){var =
b=3Dtrue,d=3Da.origType.replace(O,"");c.each(c.data(this,=0A=
"events").live||[],function(){if(d=3D=3D=3Dthis.origType.replace(O,""))re=
turn =
b=3Dfalse});b&&c.event.remove(this,a.origType,oa)}},beforeunload:{setup:f=
unction(a,b,d){if(this.setInterval)this.onbeforeunload=3Dd;return =
false},teardown:function(a,b){if(this.onbeforeunload=3D=3D=3Db)this.onbef=
oreunload=3Dnull}}}};var =
Ca=3Ds.removeEventListener?function(a,b,d){a.removeEventListener(b,d,fals=
e)}:function(a,b,d){a.detachEvent("on"+b,d)};c.Event=3Dfunction(a){if(!th=
is.preventDefault)return new c.Event(a);if(a&&a.type){this.originalEvent=3D=0A=
a;this.type=3Da.type}else =
this.type=3Da;this.timeStamp=3DJ();this[G]=3Dtrue};c.Event.prototype=3D{p=
reventDefault:function(){this.isDefaultPrevented=3DZ;var =
a=3Dthis.originalEvent;if(a){a.preventDefault&&a.preventDefault();a.retur=
nValue=3Dfalse}},stopPropagation:function(){this.isPropagationStopped=3DZ=
;var =
a=3Dthis.originalEvent;if(a){a.stopPropagation&&a.stopPropagation();a.can=
celBubble=3Dtrue}},stopImmediatePropagation:function(){this.isImmediatePr=
opagationStopped=3DZ;this.stopPropagation()},isDefaultPrevented:Y,isPropa=
gationStopped:Y,=0A=
isImmediatePropagationStopped:Y};var Da=3Dfunction(a){var =
b=3Da.relatedTarget;try{for(;b&&b!=3D=3Dthis;)b=3Db.parentNode;if(b!=3D=3D=
this){a.type=3Da.data;c.event.handle.apply(this,arguments)}}catch(d){}},E=
a=3Dfunction(a){a.type=3Da.data;c.event.handle.apply(this,arguments)};c.e=
ach({mouseenter:"mouseover",mouseleave:"mouseout"},function(a,b){c.event.=
special[a]=3D{setup:function(d){c.event.add(this,b,d&&d.selector?Ea:Da,a)=
},teardown:function(d){c.event.remove(this,b,d&&d.selector?Ea:Da)}}});if(=
!c.support.submitBubbles)c.event.special.submit=3D=0A=
{setup:function(){if(this.nodeName.toLowerCase()!=3D=3D"form"){c.event.ad=
d(this,"click.specialSubmit",function(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"submit"||d=3D=3D=3D"image")&&c(b).=
closest("form").length)return =
na("submit",this,arguments)});c.event.add(this,"keypress.specialSubmit",f=
unction(a){var =
b=3Da.target,d=3Db.type;if((d=3D=3D=3D"text"||d=3D=3D=3D"password")&&c(b)=
.closest("form").length&&a.keyCode=3D=3D=3D13)return =
na("submit",this,arguments)})}else return =
false},teardown:function(){c.event.remove(this,".specialSubmit")}};=0A=
if(!c.support.changeBubbles){var =
da=3D/textarea|input|select/i,ea,Fa=3Dfunction(a){var =
b=3Da.type,d=3Da.value;if(b=3D=3D=3D"radio"||b=3D=3D=3D"checkbox")d=3Da.c=
hecked;else =
if(b=3D=3D=3D"select-multiple")d=3Da.selectedIndex>-1?c.map(a.options,fun=
ction(f){return f.selected}).join("-"):"";else =
if(a.nodeName.toLowerCase()=3D=3D=3D"select")d=3Da.selectedIndex;return =
d},fa=3Dfunction(a,b){var =
d=3Da.target,f,e;if(!(!da.test(d.nodeName)||d.readOnly)){f=3Dc.data(d,"_c=
hange_data");e=3DFa(d);if(a.type!=3D=3D"focusout"||d.type!=3D=3D"radio")c=
.data(d,"_change_data",=0A=
e);if(!(f=3D=3D=3Dw||e=3D=3D=3Df))if(f!=3Dnull||e){a.type=3D"change";retu=
rn =
c.event.trigger(a,b,d)}}};c.event.special.change=3D{filters:{focusout:fa,=
click:function(a){var =
b=3Da.target,d=3Db.type;if(d=3D=3D=3D"radio"||d=3D=3D=3D"checkbox"||b.nod=
eName.toLowerCase()=3D=3D=3D"select")return =
fa.call(this,a)},keydown:function(a){var =
b=3Da.target,d=3Db.type;if(a.keyCode=3D=3D=3D13&&b.nodeName.toLowerCase()=
!=3D=3D"textarea"||a.keyCode=3D=3D=3D32&&(d=3D=3D=3D"checkbox"||d=3D=3D=3D=
"radio")||d=3D=3D=3D"select-multiple")return =
fa.call(this,a)},beforeactivate:function(a){a=3Da.target;c.data(a,=0A=
"_change_data",Fa(a))}},setup:function(){if(this.type=3D=3D=3D"file")retu=
rn false;for(var a in =
ea)c.event.add(this,a+".specialChange",ea[a]);return =
da.test(this.nodeName)},teardown:function(){c.event.remove(this,".special=
Change");return =
da.test(this.nodeName)}};ea=3Dc.event.special.change.filters}s.addEventLi=
stener&&c.each({focus:"focusin",blur:"focusout"},function(a,b){function =
d(f){f=3Dc.event.fix(f);f.type=3Db;return =
c.event.handle.call(this,f)}c.event.special[b]=3D{setup:function(){this.a=
ddEventListener(a,=0A=
d,true)},teardown:function(){this.removeEventListener(a,d,true)}}});c.eac=
h(["bind","one"],function(a,b){c.fn[b]=3Dfunction(d,f,e){if(typeof =
d=3D=3D=3D"object"){for(var j in d)this[b](j,f,d[j],e);return =
this}if(c.isFunction(f)){e=3Df;f=3Dw}var =
i=3Db=3D=3D=3D"one"?c.proxy(e,function(k){c(this).unbind(k,i);return =
e.apply(this,arguments)}):e;if(d=3D=3D=3D"unload"&&b!=3D=3D"one")this.one=
(d,f,e);else{j=3D0;for(var =
o=3Dthis.length;j<o;j++)c.event.add(this[j],d,i,f)}return =
this}});c.fn.extend({unbind:function(a,b){if(typeof a=3D=3D=3D"object"&&=0A=
!a.preventDefault)for(var d in a)this.unbind(d,a[d]);else{d=3D0;for(var =
f=3Dthis.length;d<f;d++)c.event.remove(this[d],a,b)}return =
this},delegate:function(a,b,d,f){return =
this.live(b,d,f,a)},undelegate:function(a,b,d){return =
arguments.length=3D=3D=3D0?this.unbind("live"):this.die(b,null,d,a)},trig=
ger:function(a,b){return =
this.each(function(){c.event.trigger(a,b,this)})},triggerHandler:function=
(a,b){if(this[0]){a=3Dc.Event(a);a.preventDefault();a.stopPropagation();c=
.event.trigger(a,b,this[0]);return a.result}},=0A=
toggle:function(a){for(var =
b=3Darguments,d=3D1;d<b.length;)c.proxy(a,b[d++]);return =
this.click(c.proxy(a,function(f){var =
e=3D(c.data(this,"lastToggle"+a.guid)||0)%d;c.data(this,"lastToggle"+a.gu=
id,e+1);f.preventDefault();return =
b[e].apply(this,arguments)||false}))},hover:function(a,b){return =
this.mouseenter(a).mouseleave(b||a)}});var =
Ga=3D{focus:"focusin",blur:"focusout",mouseenter:"mouseover",mouseleave:"=
mouseout"};c.each(["live","die"],function(a,b){c.fn[b]=3Dfunction(d,f,e,j=
){var i,o=3D0,k,n,r=3Dj||this.selector,=0A=
u=3Dj?this:c(this.context);if(c.isFunction(f)){e=3Df;f=3Dw}for(d=3D(d||""=
).split(" =
");(i=3Dd[o++])!=3Dnull;){j=3DO.exec(i);k=3D"";if(j){k=3Dj[0];i=3Di.repla=
ce(O,"")}if(i=3D=3D=3D"hover")d.push("mouseenter"+k,"mouseleave"+k);else{=
n=3Di;if(i=3D=3D=3D"focus"||i=3D=3D=3D"blur"){d.push(Ga[i]+k);i+=3Dk}else=
 =
i=3D(Ga[i]||i)+k;b=3D=3D=3D"live"?u.each(function(){c.event.add(this,pa(i=
,r),{data:f,selector:r,handler:e,origType:i,origHandler:e,preType:n})}):u=
.unbind(pa(i,r),e)}}return this}});c.each("blur focus focusin focusout =
load resize scroll unload click dblclick mousedown mouseup mousemove =
mouseover mouseout mouseenter mouseleave change select submit keydown =
keypress keyup error".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
d?this.bind(b,d):this.trigger(b)};if(c.attrFn)c.attrFn[b]=3Dtrue});A.atta=
chEvent&&!A.addEventListener&&A.attachEvent("onunload",function(){for(var=
 a in =
c.cache)if(c.cache[a].handle)try{c.event.remove(c.cache[a].handle.elem)}c=
atch(b){}});(function(){function a(g){for(var =
h=3D"",l,m=3D0;g[m];m++){l=3Dg[m];if(l.nodeType=3D=3D=3D3||l.nodeType=3D=3D=
=3D4)h+=3Dl.nodeValue;else =
if(l.nodeType!=3D=3D8)h+=3Da(l.childNodes)}return h}function =
b(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var t=3Dm[q];=0A=
if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1&&!p){t.sizcache=3Dl;t.sizset=3Dq}if(t.nodeName.toLowerCase()=3D=
=3D=3Dh){y=3Dt;break}t=3Dt[g]}m[q]=3Dy}}}function =
d(g,h,l,m,q,p){q=3D0;for(var v=3Dm.length;q<v;q++){var =
t=3Dm[q];if(t){t=3Dt[g];for(var =
y=3Dfalse;t;){if(t.sizcache=3D=3D=3Dl){y=3Dm[t.sizset];break}if(t.nodeTyp=
e=3D=3D=3D1){if(!p){t.sizcache=3Dl;t.sizset=3Dq}if(typeof =
h!=3D=3D"string"){if(t=3D=3D=3Dh){y=3Dtrue;break}}else =
if(k.filter(h,[t]).length>0){y=3Dt;break}}t=3Dt[g]}m[q]=3Dy}}}var =
f=3D/((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^[\]]*\]|['"][^'"]*['"]|[^[\]=
'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,=0A=
e=3D0,j=3DObject.prototype.toString,i=3Dfalse,o=3Dtrue;[0,0].sort(functio=
n(){o=3Dfalse;return 0});var k=3Dfunction(g,h,l,m){l=3Dl||[];var =
q=3Dh=3Dh||s;if(h.nodeType!=3D=3D1&&h.nodeType!=3D=3D9)return[];if(!g||ty=
peof g!=3D=3D"string")return l;for(var =
p=3D[],v,t,y,S,H=3Dtrue,M=3Dx(h),I=3Dg;(f.exec(""),v=3Df.exec(I))!=3D=3Dn=
ull;){I=3Dv[3];p.push(v[1]);if(v[2]){S=3Dv[3];break}}if(p.length>1&&r.exe=
c(g))if(p.length=3D=3D=3D2&&n.relative[p[0]])t=3Dga(p[0]+p[1],h);else =
for(t=3Dn.relative[p[0]]?[h]:k(p.shift(),h);p.length;){g=3Dp.shift();if(n=
.relative[g])g+=3Dp.shift();=0A=
t=3Dga(g,t)}else{if(!m&&p.length>1&&h.nodeType=3D=3D=3D9&&!M&&n.match.ID.=
test(p[0])&&!n.match.ID.test(p[p.length-1])){v=3Dk.find(p.shift(),h,M);h=3D=
v.expr?k.filter(v.expr,v.set)[0]:v.set[0]}if(h){v=3Dm?{expr:p.pop(),set:z=
(m)}:k.find(p.pop(),p.length=3D=3D=3D1&&(p[0]=3D=3D=3D"~"||p[0]=3D=3D=3D"=
+")&&h.parentNode?h.parentNode:h,M);t=3Dv.expr?k.filter(v.expr,v.set):v.s=
et;if(p.length>0)y=3Dz(t);else H=3Dfalse;for(;p.length;){var =
D=3Dp.pop();v=3DD;if(n.relative[D])v=3Dp.pop();else =
D=3D"";if(v=3D=3Dnull)v=3Dh;n.relative[D](y,v,M)}}else =
y=3D[]}y||(y=3Dt);y||k.error(D||=0A=
g);if(j.call(y)=3D=3D=3D"[object =
Array]")if(H)if(h&&h.nodeType=3D=3D=3D1)for(g=3D0;y[g]!=3Dnull;g++){if(y[=
g]&&(y[g]=3D=3D=3Dtrue||y[g].nodeType=3D=3D=3D1&&E(h,y[g])))l.push(t[g])}=
else =
for(g=3D0;y[g]!=3Dnull;g++)y[g]&&y[g].nodeType=3D=3D=3D1&&l.push(t[g]);el=
se l.push.apply(l,y);else z(y,l);if(S){k(S,q,l,m);k.uniqueSort(l)}return =
l};k.uniqueSort=3Dfunction(g){if(B){i=3Do;g.sort(B);if(i)for(var =
h=3D1;h<g.length;h++)g[h]=3D=3D=3Dg[h-1]&&g.splice(h--,1)}return =
g};k.matches=3Dfunction(g,h){return =
k(g,null,null,h)};k.find=3Dfunction(g,h,l){var m,q;if(!g)return[];=0A=
for(var p=3D0,v=3Dn.order.length;p<v;p++){var =
t=3Dn.order[p];if(q=3Dn.leftMatch[t].exec(g)){var =
y=3Dq[1];q.splice(1,1);if(y.substr(y.length-1)!=3D=3D"\\"){q[1]=3D(q[1]||=
"").replace(/\\/g,"");m=3Dn.find[t](q,h,l);if(m!=3Dnull){g=3Dg.replace(n.=
match[t],"");break}}}}m||(m=3Dh.getElementsByTagName("*"));return{set:m,e=
xpr:g}};k.filter=3Dfunction(g,h,l,m){for(var =
q=3Dg,p=3D[],v=3Dh,t,y,S=3Dh&&h[0]&&x(h[0]);g&&h.length;){for(var H in =
n.filter)if((t=3Dn.leftMatch[H].exec(g))!=3Dnull&&t[2]){var =
M=3Dn.filter[H],I,D;D=3Dt[1];y=3Dfalse;t.splice(1,1);if(D.substr(D.length=
-=0A=
1)!=3D=3D"\\"){if(v=3D=3D=3Dp)p=3D[];if(n.preFilter[H])if(t=3Dn.preFilter=
[H](t,v,l,p,m,S)){if(t=3D=3D=3Dtrue)continue}else =
y=3DI=3Dtrue;if(t)for(var =
U=3D0;(D=3Dv[U])!=3Dnull;U++)if(D){I=3DM(D,t,U,v);var =
Ha=3Dm^!!I;if(l&&I!=3Dnull)if(Ha)y=3Dtrue;else v[U]=3Dfalse;else =
if(Ha){p.push(D);y=3Dtrue}}if(I!=3D=3Dw){l||(v=3Dp);g=3Dg.replace(n.match=
[H],"");if(!y)return[];break}}}if(g=3D=3D=3Dq)if(y=3D=3Dnull)k.error(g);e=
lse break;q=3Dg}return v};k.error=3Dfunction(g){throw"Syntax error, =
unrecognized expression: "+g;};var =
n=3Dk.selectors=3D{order:["ID","NAME","TAG"],match:{ID:/#((?:[\w\u00c0-\u=
FFFF-]|\\.)+)/,=0A=
CLASS:/\.((?:[\w\u00c0-\uFFFF-]|\\.)+)/,NAME:/\[name=3D['"]*((?:[\w\u00c0=
-\uFFFF-]|\\.)+)['"]*\]/,ATTR:/\[\s*((?:[\w\u00c0-\uFFFF-]|\\.)+)\s*(?:(\=
S?=3D)\s*(['"]*)(.*?)\3|)\s*\]/,TAG:/^((?:[\w\u00c0-\uFFFF\*-]|\\.)+)/,CH=
ILD:/:(only|nth|last|first)-child(?:\((even|odd|[\dn+-]*)\))?/,POS:/:(nth=
|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=3D[^-]|$)/,PSEUDO:/:((?:[\=
w\u00c0-\uFFFF-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/},lef=
tMatch:{},attrMap:{"class":"className","for":"htmlFor"},attrHandle:{href:=
function(g){return g.getAttribute("href")}},=0A=
relative:{"+":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string",m=3Dl&&!/\W/.test(h);l=3Dl&&!m;if(m)h=3Dh.toLowerCase(=
);m=3D0;for(var =
q=3Dg.length,p;m<q;m++)if(p=3Dg[m]){for(;(p=3Dp.previousSibling)&&p.nodeT=
ype!=3D=3D1;);g[m]=3Dl||p&&p.nodeName.toLowerCase()=3D=3D=3Dh?p||false:p=3D=
=3D=3Dh}l&&k.filter(h,g,true)},">":function(g,h){var l=3Dtypeof =
h=3D=3D=3D"string";if(l&&!/\W/.test(h)){h=3Dh.toLowerCase();for(var =
m=3D0,q=3Dg.length;m<q;m++){var =
p=3Dg[m];if(p){l=3Dp.parentNode;g[m]=3Dl.nodeName.toLowerCase()=3D=3D=3Dh=
?l:false}}}else{m=3D0;for(q=3Dg.length;m<q;m++)if(p=3Dg[m])g[m]=3D=0A=
l?p.parentNode:p.parentNode=3D=3D=3Dh;l&&k.filter(h,g,true)}},"":function=
(g,h,l){var m=3De++,q=3Dd;if(typeof =
h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("parentNode",h,m,g,p,l)},"~":function(g,h=
,l){var m=3De++,q=3Dd;if(typeof h=3D=3D=3D"string"&&!/\W/.test(h)){var =
p=3Dh=3Dh.toLowerCase();q=3Db}q("previousSibling",h,m,g,p,l)}},find:{ID:f=
unction(g,h,l){if(typeof =
h.getElementById!=3D=3D"undefined"&&!l)return(g=3Dh.getElementById(g[1]))=
?[g]:[]},NAME:function(g,h){if(typeof =
h.getElementsByName!=3D=3D"undefined"){var l=3D[];=0A=
h=3Dh.getElementsByName(g[1]);for(var =
m=3D0,q=3Dh.length;m<q;m++)h[m].getAttribute("name")=3D=3D=3Dg[1]&&l.push=
(h[m]);return l.length=3D=3D=3D0?null:l}},TAG:function(g,h){return =
h.getElementsByTagName(g[1])}},preFilter:{CLASS:function(g,h,l,m,q,p){g=3D=
" "+g[1].replace(/\\/g,"")+" ";if(p)return g;p=3D0;for(var =
v;(v=3Dh[p])!=3Dnull;p++)if(v)if(q^(v.className&&(" "+v.className+" =
").replace(/[\t\n]/g," ").indexOf(g)>=3D0))l||m.push(v);else =
if(l)h[p]=3Dfalse;return false},ID:function(g){return =
g[1].replace(/\\/g,"")},TAG:function(g){return g[1].toLowerCase()},=0A=
CHILD:function(g){if(g[1]=3D=3D=3D"nth"){var =
h=3D/(-?)(\d*)n((?:\+|-)?\d*)/.exec(g[2]=3D=3D=3D"even"&&"2n"||g[2]=3D=3D=
=3D"odd"&&"2n+1"||!/\D/.test(g[2])&&"0n+"+g[2]||g[2]);g[2]=3Dh[1]+(h[2]||=
1)-0;g[3]=3Dh[3]-0}g[0]=3De++;return =
g},ATTR:function(g,h,l,m,q,p){h=3Dg[1].replace(/\\/g,"");if(!p&&n.attrMap=
[h])g[1]=3Dn.attrMap[h];if(g[2]=3D=3D=3D"~=3D")g[4]=3D" "+g[4]+" =
";return =
g},PSEUDO:function(g,h,l,m,q){if(g[1]=3D=3D=3D"not")if((f.exec(g[3])||"")=
.length>1||/^\w/.test(g[3]))g[3]=3Dk(g[3],null,null,h);else{g=3Dk.filter(=
g[3],h,l,true^q);l||m.push.apply(m,=0A=
g);return false}else =
if(n.match.POS.test(g[0])||n.match.CHILD.test(g[0]))return true;return =
g},POS:function(g){g.unshift(true);return =
g}},filters:{enabled:function(g){return =
g.disabled=3D=3D=3Dfalse&&g.type!=3D=3D"hidden"},disabled:function(g){ret=
urn g.disabled=3D=3D=3Dtrue},checked:function(g){return =
g.checked=3D=3D=3Dtrue},selected:function(g){return =
g.selected=3D=3D=3Dtrue},parent:function(g){return!!g.firstChild},empty:f=
unction(g){return!g.firstChild},has:function(g,h,l){return!!k(l[3],g).len=
gth},header:function(g){return/h\d/i.test(g.nodeName)},=0A=
text:function(g){return"text"=3D=3D=3Dg.type},radio:function(g){return"ra=
dio"=3D=3D=3Dg.type},checkbox:function(g){return"checkbox"=3D=3D=3Dg.type=
},file:function(g){return"file"=3D=3D=3Dg.type},password:function(g){retu=
rn"password"=3D=3D=3Dg.type},submit:function(g){return"submit"=3D=3D=3Dg.=
type},image:function(g){return"image"=3D=3D=3Dg.type},reset:function(g){r=
eturn"reset"=3D=3D=3Dg.type},button:function(g){return"button"=3D=3D=3Dg.=
type||g.nodeName.toLowerCase()=3D=3D=3D"button"},input:function(g){return=
/input|select|textarea|button/i.test(g.nodeName)}},=0A=
setFilters:{first:function(g,h){return =
h=3D=3D=3D0},last:function(g,h,l,m){return =
h=3D=3D=3Dm.length-1},even:function(g,h){return =
h%2=3D=3D=3D0},odd:function(g,h){return =
h%2=3D=3D=3D1},lt:function(g,h,l){return =
h<l[3]-0},gt:function(g,h,l){return h>l[3]-0},nth:function(g,h,l){return =
l[3]-0=3D=3D=3Dh},eq:function(g,h,l){return =
l[3]-0=3D=3D=3Dh}},filter:{PSEUDO:function(g,h,l,m){var =
q=3Dh[1],p=3Dn.filters[q];if(p)return p(g,l,h,m);else =
if(q=3D=3D=3D"contains")return(g.textContent||g.innerText||a([g])||"").in=
dexOf(h[3])>=3D0;else if(q=3D=3D=3D"not"){h=3D=0A=
h[3];l=3D0;for(m=3Dh.length;l<m;l++)if(h[l]=3D=3D=3Dg)return =
false;return true}else k.error("Syntax error, unrecognized expression: =
"+q)},CHILD:function(g,h){var l=3Dh[1],m=3Dg;switch(l){case "only":case =
"first":for(;m=3Dm.previousSibling;)if(m.nodeType=3D=3D=3D1)return =
false;if(l=3D=3D=3D"first")return true;m=3Dg;case =
"last":for(;m=3Dm.nextSibling;)if(m.nodeType=3D=3D=3D1)return =
false;return true;case "nth":l=3Dh[2];var =
q=3Dh[3];if(l=3D=3D=3D1&&q=3D=3D=3D0)return true;h=3Dh[0];var =
p=3Dg.parentNode;if(p&&(p.sizcache!=3D=3Dh||!g.nodeIndex)){var =
v=3D0;for(m=3Dp.firstChild;m;m=3D=0A=
m.nextSibling)if(m.nodeType=3D=3D=3D1)m.nodeIndex=3D++v;p.sizcache=3Dh}g=3D=
g.nodeIndex-q;return =
l=3D=3D=3D0?g=3D=3D=3D0:g%l=3D=3D=3D0&&g/l>=3D0}},ID:function(g,h){return=
 =
g.nodeType=3D=3D=3D1&&g.getAttribute("id")=3D=3D=3Dh},TAG:function(g,h){r=
eturn =
h=3D=3D=3D"*"&&g.nodeType=3D=3D=3D1||g.nodeName.toLowerCase()=3D=3D=3Dh},=
CLASS:function(g,h){return(" "+(g.className||g.getAttribute("class"))+" =
").indexOf(h)>-1},ATTR:function(g,h){var =
l=3Dh[1];g=3Dn.attrHandle[l]?n.attrHandle[l](g):g[l]!=3Dnull?g[l]:g.getAt=
tribute(l);l=3Dg+"";var m=3Dh[2];h=3Dh[4];return =
g=3D=3Dnull?m=3D=3D=3D"!=3D":m=3D=3D=3D=0A=
"=3D"?l=3D=3D=3Dh:m=3D=3D=3D"*=3D"?l.indexOf(h)>=3D0:m=3D=3D=3D"~=3D"?(" =
"+l+" =
").indexOf(h)>=3D0:!h?l&&g!=3D=3Dfalse:m=3D=3D=3D"!=3D"?l!=3D=3Dh:m=3D=3D=
=3D"^=3D"?l.indexOf(h)=3D=3D=3D0:m=3D=3D=3D"$=3D"?l.substr(l.length-h.len=
gth)=3D=3D=3Dh:m=3D=3D=3D"|=3D"?l=3D=3D=3Dh||l.substr(0,h.length+1)=3D=3D=
=3Dh+"-":false},POS:function(g,h,l,m){var =
q=3Dn.setFilters[h[2]];if(q)return q(g,l,h,m)}}},r=3Dn.match.POS;for(var =
u in n.match){n.match[u]=3Dnew =
RegExp(n.match[u].source+/(?![^\[]*\])(?![^\(]*\))/.source);n.leftMatch[u=
]=3Dnew =
RegExp(/(^(?:.|\r|\n)*?)/.source+n.match[u].source.replace(/\\(\d+)/g,fun=
ction(g,=0A=
h){return"\\"+(h-0+1)}))}var =
z=3Dfunction(g,h){g=3DArray.prototype.slice.call(g,0);if(h){h.push.apply(=
h,g);return h}return =
g};try{Array.prototype.slice.call(s.documentElement.childNodes,0)}catch(C=
){z=3Dfunction(g,h){h=3Dh||[];if(j.call(g)=3D=3D=3D"[object =
Array]")Array.prototype.push.apply(h,g);else if(typeof =
g.length=3D=3D=3D"number")for(var =
l=3D0,m=3Dg.length;l<m;l++)h.push(g[l]);else =
for(l=3D0;g[l];l++)h.push(g[l]);return h}}var =
B;if(s.documentElement.compareDocumentPosition)B=3Dfunction(g,h){if(!g.co=
mpareDocumentPosition||=0A=
!h.compareDocumentPosition){if(g=3D=3Dh)i=3Dtrue;return =
g.compareDocumentPosition?-1:1}g=3Dg.compareDocumentPosition(h)&4?-1:g=3D=
=3D=3Dh?0:1;if(g=3D=3D=3D0)i=3Dtrue;return g};else if("sourceIndex"in =
s.documentElement)B=3Dfunction(g,h){if(!g.sourceIndex||!h.sourceIndex){if=
(g=3D=3Dh)i=3Dtrue;return =
g.sourceIndex?-1:1}g=3Dg.sourceIndex-h.sourceIndex;if(g=3D=3D=3D0)i=3Dtru=
e;return g};else =
if(s.createRange)B=3Dfunction(g,h){if(!g.ownerDocument||!h.ownerDocument)=
{if(g=3D=3Dh)i=3Dtrue;return g.ownerDocument?-1:1}var =
l=3Dg.ownerDocument.createRange(),m=3D=0A=
h.ownerDocument.createRange();l.setStart(g,0);l.setEnd(g,0);m.setStart(h,=
0);m.setEnd(h,0);g=3Dl.compareBoundaryPoints(Range.START_TO_END,m);if(g=3D=
=3D=3D0)i=3Dtrue;return g};(function(){var =
g=3Ds.createElement("div"),h=3D"script"+(new =
Date).getTime();g.innerHTML=3D"<a name=3D'"+h+"'/>";var =
l=3Ds.documentElement;l.insertBefore(g,l.firstChild);if(s.getElementById(=
h)){n.find.ID=3Dfunction(m,q,p){if(typeof =
q.getElementById!=3D=3D"undefined"&&!p)return(q=3Dq.getElementById(m[1]))=
?q.id=3D=3D=3Dm[1]||typeof q.getAttributeNode!=3D=3D"undefined"&&=0A=
q.getAttributeNode("id").nodeValue=3D=3D=3Dm[1]?[q]:w:[]};n.filter.ID=3Df=
unction(m,q){var p=3Dtypeof =
m.getAttributeNode!=3D=3D"undefined"&&m.getAttributeNode("id");return =
m.nodeType=3D=3D=3D1&&p&&p.nodeValue=3D=3D=3Dq}}l.removeChild(g);l=3Dg=3D=
null})();(function(){var =
g=3Ds.createElement("div");g.appendChild(s.createComment(""));if(g.getEle=
mentsByTagName("*").length>0)n.find.TAG=3Dfunction(h,l){l=3Dl.getElements=
ByTagName(h[1]);if(h[1]=3D=3D=3D"*"){h=3D[];for(var =
m=3D0;l[m];m++)l[m].nodeType=3D=3D=3D1&&h.push(l[m]);l=3Dh}return =
l};g.innerHTML=3D"<a href=3D'#'></a>";=0A=
if(g.firstChild&&typeof =
g.firstChild.getAttribute!=3D=3D"undefined"&&g.firstChild.getAttribute("h=
ref")!=3D=3D"#")n.attrHandle.href=3Dfunction(h){return =
h.getAttribute("href",2)};g=3Dnull})();s.querySelectorAll&&function(){var=
 g=3Dk,h=3Ds.createElement("div");h.innerHTML=3D"<p =
class=3D'TEST'></p>";if(!(h.querySelectorAll&&h.querySelectorAll(".TEST")=
.length=3D=3D=3D0)){k=3Dfunction(m,q,p,v){q=3Dq||s;if(!v&&q.nodeType=3D=3D=
=3D9&&!x(q))try{return z(q.querySelectorAll(m),p)}catch(t){}return =
g(m,q,p,v)};for(var l in g)k[l]=3Dg[l];h=3Dnull}}();=0A=
(function(){var g=3Ds.createElement("div");g.innerHTML=3D"<div =
class=3D'test e'></div><div =
class=3D'test'></div>";if(!(!g.getElementsByClassName||g.getElementsByCla=
ssName("e").length=3D=3D=3D0)){g.lastChild.className=3D"e";if(g.getElemen=
tsByClassName("e").length!=3D=3D1){n.order.splice(1,0,"CLASS");n.find.CLA=
SS=3Dfunction(h,l,m){if(typeof =
l.getElementsByClassName!=3D=3D"undefined"&&!m)return =
l.getElementsByClassName(h[1])};g=3Dnull}}})();var =
E=3Ds.compareDocumentPosition?function(g,h){return!!(g.compareDocumentPos=
ition(h)&16)}:=0A=
function(g,h){return =
g!=3D=3Dh&&(g.contains?g.contains(h):true)},x=3Dfunction(g){return(g=3D(g=
?g.ownerDocument||g:0).documentElement)?g.nodeName!=3D=3D"HTML":false},ga=
=3Dfunction(g,h){var =
l=3D[],m=3D"",q;for(h=3Dh.nodeType?[h]:h;q=3Dn.match.PSEUDO.exec(g);){m+=3D=
q[0];g=3Dg.replace(n.match.PSEUDO,"")}g=3Dn.relative[g]?g+"*":g;q=3D0;for=
(var p=3Dh.length;q<p;q++)k(g,h[q],l);return =
k.filter(m,l)};c.find=3Dk;c.expr=3Dk.selectors;c.expr[":"]=3Dc.expr.filte=
rs;c.unique=3Dk.uniqueSort;c.text=3Da;c.isXMLDoc=3Dx;c.contains=3DE})();v=
ar eb=3D/Until$/,fb=3D/^(?:parents|prevUntil|prevAll)/,=0A=
gb=3D/,/;R=3DArray.prototype.slice;var =
Ia=3Dfunction(a,b,d){if(c.isFunction(b))return =
c.grep(a,function(e,j){return!!b.call(e,j,e)=3D=3D=3Dd});else =
if(b.nodeType)return c.grep(a,function(e){return =
e=3D=3D=3Db=3D=3D=3Dd});else if(typeof b=3D=3D=3D"string"){var =
f=3Dc.grep(a,function(e){return =
e.nodeType=3D=3D=3D1});if(Ua.test(b))return c.filter(b,f,!d);else =
b=3Dc.filter(b,f)}return c.grep(a,function(e){return =
c.inArray(e,b)>=3D0=3D=3D=3Dd})};c.fn.extend({find:function(a){for(var =
b=3Dthis.pushStack("","find",a),d=3D0,f=3D0,e=3Dthis.length;f<e;f++){d=3D=
b.length;=0A=
c.find(a,this[f],b);if(f>0)for(var j=3Dd;j<b.length;j++)for(var =
i=3D0;i<d;i++)if(b[i]=3D=3D=3Db[j]){b.splice(j--,1);break}}return =
b},has:function(a){var b=3Dc(a);return this.filter(function(){for(var =
d=3D0,f=3Db.length;d<f;d++)if(c.contains(this,b[d]))return =
true})},not:function(a){return =
this.pushStack(Ia(this,a,false),"not",a)},filter:function(a){return =
this.pushStack(Ia(this,a,true),"filter",a)},is:function(a){return!!a&&c.f=
ilter(a,this).length>0},closest:function(a,b){if(c.isArray(a)){var =
d=3D[],f=3Dthis[0],e,j=3D=0A=
{},i;if(f&&a.length){e=3D0;for(var =
o=3Da.length;e<o;e++){i=3Da[e];j[i]||(j[i]=3Dc.expr.match.POS.test(i)?c(i=
,b||this.context):i)}for(;f&&f.ownerDocument&&f!=3D=3Db;){for(i in =
j){e=3Dj[i];if(e.jquery?e.index(f)>-1:c(f).is(e)){d.push({selector:i,elem=
:f});delete j[i]}}f=3Df.parentNode}}return d}var =
k=3Dc.expr.match.POS.test(a)?c(a,b||this.context):null;return =
this.map(function(n,r){for(;r&&r.ownerDocument&&r!=3D=3Db;){if(k?k.index(=
r)>-1:c(r).is(a))return r;r=3Dr.parentNode}return =
null})},index:function(a){if(!a||typeof a=3D=3D=3D=0A=
"string")return =
c.inArray(this[0],a?c(a):this.parent().children());return =
c.inArray(a.jquery?a[0]:a,this)},add:function(a,b){a=3Dtypeof =
a=3D=3D=3D"string"?c(a,b||this.context):c.makeArray(a);b=3Dc.merge(this.g=
et(),a);return =
this.pushStack(qa(a[0])||qa(b[0])?b:c.unique(b))},andSelf:function(){retu=
rn =
this.add(this.prevObject)}});c.each({parent:function(a){return(a=3Da.pare=
ntNode)&&a.nodeType!=3D=3D11?a:null},parents:function(a){return =
c.dir(a,"parentNode")},parentsUntil:function(a,b,d){return =
c.dir(a,"parentNode",=0A=
d)},next:function(a){return =
c.nth(a,2,"nextSibling")},prev:function(a){return =
c.nth(a,2,"previousSibling")},nextAll:function(a){return =
c.dir(a,"nextSibling")},prevAll:function(a){return =
c.dir(a,"previousSibling")},nextUntil:function(a,b,d){return =
c.dir(a,"nextSibling",d)},prevUntil:function(a,b,d){return =
c.dir(a,"previousSibling",d)},siblings:function(a){return =
c.sibling(a.parentNode.firstChild,a)},children:function(a){return =
c.sibling(a.firstChild)},contents:function(a){return =
c.nodeName(a,"iframe")?=0A=
a.contentDocument||a.contentWindow.document:c.makeArray(a.childNodes)}},f=
unction(a,b){c.fn[a]=3Dfunction(d,f){var =
e=3Dc.map(this,b,d);eb.test(a)||(f=3Dd);if(f&&typeof =
f=3D=3D=3D"string")e=3Dc.filter(f,e);e=3Dthis.length>1?c.unique(e):e;if((=
this.length>1||gb.test(f))&&fb.test(a))e=3De.reverse();return =
this.pushStack(e,a,R.call(arguments).join(","))}});c.extend({filter:funct=
ion(a,b,d){if(d)a=3D":not("+a+")";return =
c.find.matches(a,b)},dir:function(a,b,d){var =
f=3D[];for(a=3Da[b];a&&a.nodeType!=3D=3D9&&(d=3D=3D=3Dw||a.nodeType!=3D=3D=
1||!c(a).is(d));){a.nodeType=3D=3D=3D=0A=
1&&f.push(a);a=3Da[b]}return f},nth:function(a,b,d){b=3Db||1;for(var =
f=3D0;a;a=3Da[d])if(a.nodeType=3D=3D=3D1&&++f=3D=3D=3Db)break;return =
a},sibling:function(a,b){for(var =
d=3D[];a;a=3Da.nextSibling)a.nodeType=3D=3D=3D1&&a!=3D=3Db&&d.push(a);ret=
urn d}});var Ja=3D/ =
jQuery\d+=3D"(?:\d+|null)"/g,V=3D/^\s+/,Ka=3D/(<([\w:]+)[^>]*?)\/>/g,hb=3D=
/^(?:area|br|col|embed|hr|img|input|link|meta|param)$/i,La=3D/<([\w:]+)/,=
ib=3D/<tbody/i,jb=3D/<|&#?\w+;/,ta=3D/<script|<object|<embed|<option|<sty=
le/i,ua=3D/checked\s*(?:[^=3D]|=3D\s*.checked.)/i,Ma=3Dfunction(a,b,d){re=
turn hb.test(d)?=0A=
a:b+"></"+d+">"},F=3D{option:[1,"<select =
multiple=3D'multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"=
],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>=
"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],col:[2,"<table><tb=
ody></tbody><colgroup>","</colgroup></table>"],area:[1,"<map>","</map>"],=
_default:[0,"",""]};F.optgroup=3DF.option;F.tbody=3DF.tfoot=3DF.colgroup=3D=
F.caption=3DF.thead;F.th=3DF.td;if(!c.support.htmlSerialize)F._default=3D=
[1,"div<div>","</div>"];c.fn.extend({text:function(a){if(c.isFunction(a))=
return this.each(function(b){var d=3D=0A=
c(this);d.text(a.call(this,b,d.text()))});if(typeof =
a!=3D=3D"object"&&a!=3D=3Dw)return =
this.empty().append((this[0]&&this[0].ownerDocument||s).createTextNode(a)=
);return c.text(this)},wrapAll:function(a){if(c.isFunction(a))return =
this.each(function(d){c(this).wrapAll(a.call(this,d))});if(this[0]){var =
b=3Dc(a,this[0].ownerDocument).eq(0).clone(true);this[0].parentNode&&b.in=
sertBefore(this[0]);b.map(function(){for(var =
d=3Dthis;d.firstChild&&d.firstChild.nodeType=3D=3D=3D1;)d=3Dd.firstChild;=
return d}).append(this)}return this},=0A=
wrapInner:function(a){if(c.isFunction(a))return =
this.each(function(b){c(this).wrapInner(a.call(this,b))});return =
this.each(function(){var =
b=3Dc(this),d=3Db.contents();d.length?d.wrapAll(a):b.append(a)})},wrap:fu=
nction(a){return =
this.each(function(){c(this).wrapAll(a)})},unwrap:function(){return =
this.parent().each(function(){c.nodeName(this,"body")||c(this).replaceWit=
h(this.childNodes)}).end()},append:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.ap=
pendChild(a)})},=0A=
prepend:function(){return =
this.domManip(arguments,true,function(a){this.nodeType=3D=3D=3D1&&this.in=
sertBefore(a,this.firstChild)})},before:function(){if(this[0]&&this[0].pa=
rentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=
this)});else if(arguments.length){var =
a=3Dc(arguments[0]);a.push.apply(a,this.toArray());return =
this.pushStack(a,"before",arguments)}},after:function(){if(this[0]&&this[=
0].parentNode)return =
this.domManip(arguments,false,function(b){this.parentNode.insertBefore(b,=0A=
this.nextSibling)});else if(arguments.length){var =
a=3Dthis.pushStack(this,"after",arguments);a.push.apply(a,c(arguments[0])=
.toArray());return a}},remove:function(a,b){for(var =
d=3D0,f;(f=3Dthis[d])!=3Dnull;d++)if(!a||c.filter(a,[f]).length){if(!b&&f=
.nodeType=3D=3D=3D1){c.cleanData(f.getElementsByTagName("*"));c.cleanData=
([f])}f.parentNode&&f.parentNode.removeChild(f)}return =
this},empty:function(){for(var =
a=3D0,b;(b=3Dthis[a])!=3Dnull;a++)for(b.nodeType=3D=3D=3D1&&c.cleanData(b=
.getElementsByTagName("*"));b.firstChild;)b.removeChild(b.firstChild);=0A=
return this},clone:function(a){var =
b=3Dthis.map(function(){if(!c.support.noCloneEvent&&!c.isXMLDoc(this)){va=
r =
d=3Dthis.outerHTML,f=3Dthis.ownerDocument;if(!d){d=3Df.createElement("div=
");d.appendChild(this.cloneNode(true));d=3Dd.innerHTML}return =
c.clean([d.replace(Ja,"").replace(/=3D([^=3D"'>\s]+\/)>/g,'=3D"$1">').rep=
lace(V,"")],f)[0]}else return =
this.cloneNode(true)});if(a=3D=3D=3Dtrue){ra(this,b);ra(this.find("*"),b.=
find("*"))}return b},html:function(a){if(a=3D=3D=3Dw)return =
this[0]&&this[0].nodeType=3D=3D=3D1?this[0].innerHTML.replace(Ja,=0A=
""):null;else if(typeof =
a=3D=3D=3D"string"&&!ta.test(a)&&(c.support.leadingWhitespace||!V.test(a)=
)&&!F[(La.exec(a)||["",""])[1].toLowerCase()]){a=3Da.replace(Ka,Ma);try{f=
or(var =
b=3D0,d=3Dthis.length;b<d;b++)if(this[b].nodeType=3D=3D=3D1){c.cleanData(=
this[b].getElementsByTagName("*"));this[b].innerHTML=3Da}}catch(f){this.e=
mpty().append(a)}}else c.isFunction(a)?this.each(function(e){var =
j=3Dc(this),i=3Dj.html();j.empty().append(function(){return =
a.call(this,e,i)})}):this.empty().append(a);return =
this},replaceWith:function(a){if(this[0]&&=0A=
this[0].parentNode){if(c.isFunction(a))return this.each(function(b){var =
d=3Dc(this),f=3Dd.html();d.replaceWith(a.call(this,b,f))});if(typeof =
a!=3D=3D"string")a=3Dc(a).detach();return this.each(function(){var =
b=3Dthis.nextSibling,d=3Dthis.parentNode;c(this).remove();b?c(b).before(a=
):c(d).append(a)})}else return =
this.pushStack(c(c.isFunction(a)?a():a),"replaceWith",a)},detach:function=
(a){return this.remove(a,true)},domManip:function(a,b,d){function =
f(u){return c.nodeName(u,"table")?u.getElementsByTagName("tbody")[0]||=0A=
u.appendChild(u.ownerDocument.createElement("tbody")):u}var =
e,j,i=3Da[0],o=3D[],k;if(!c.support.checkClone&&arguments.length=3D=3D=3D=
3&&typeof i=3D=3D=3D"string"&&ua.test(i))return =
this.each(function(){c(this).domManip(a,b,d,true)});if(c.isFunction(i))re=
turn this.each(function(u){var =
z=3Dc(this);a[0]=3Di.call(this,u,b?z.html():w);z.domManip(a,b,d)});if(thi=
s[0]){e=3Di&&i.parentNode;e=3Dc.support.parentNode&&e&&e.nodeType=3D=3D=3D=
11&&e.childNodes.length=3D=3D=3Dthis.length?{fragment:e}:sa(a,this,o);k=3D=
e.fragment;if(j=3Dk.childNodes.length=3D=3D=3D=0A=
1?(k=3Dk.firstChild):k.firstChild){b=3Db&&c.nodeName(j,"tr");for(var =
n=3D0,r=3Dthis.length;n<r;n++)d.call(b?f(this[n],j):this[n],n>0||e.cachea=
ble||this.length>1?k.cloneNode(true):k)}o.length&&c.each(o,Qa)}return =
this}});c.fragments=3D{};c.each({appendTo:"append",prependTo:"prepend",in=
sertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},functio=
n(a,b){c.fn[a]=3Dfunction(d){var f=3D[];d=3Dc(d);var =
e=3Dthis.length=3D=3D=3D1&&this[0].parentNode;if(e&&e.nodeType=3D=3D=3D11=
&&e.childNodes.length=3D=3D=3D1&&d.length=3D=3D=3D1){d[b](this[0]);=0A=
return this}else{e=3D0;for(var j=3Dd.length;e<j;e++){var =
i=3D(e>0?this.clone(true):this).get();c.fn[b].apply(c(d[e]),i);f=3Df.conc=
at(i)}return =
this.pushStack(f,a,d.selector)}}});c.extend({clean:function(a,b,d,f){b=3D=
b||s;if(typeof =
b.createElement=3D=3D=3D"undefined")b=3Db.ownerDocument||b[0]&&b[0].owner=
Document||s;for(var e=3D[],j=3D0,i;(i=3Da[j])!=3Dnull;j++){if(typeof =
i=3D=3D=3D"number")i+=3D"";if(i){if(typeof =
i=3D=3D=3D"string"&&!jb.test(i))i=3Db.createTextNode(i);else if(typeof =
i=3D=3D=3D"string"){i=3Di.replace(Ka,Ma);var o=3D(La.exec(i)||["",=0A=
""])[1].toLowerCase(),k=3DF[o]||F._default,n=3Dk[0],r=3Db.createElement("=
div");for(r.innerHTML=3Dk[1]+i+k[2];n--;)r=3Dr.lastChild;if(!c.support.tb=
ody){n=3Dib.test(i);o=3Do=3D=3D=3D"table"&&!n?r.firstChild&&r.firstChild.=
childNodes:k[1]=3D=3D=3D"<table>"&&!n?r.childNodes:[];for(k=3Do.length-1;=
k>=3D0;--k)c.nodeName(o[k],"tbody")&&!o[k].childNodes.length&&o[k].parent=
Node.removeChild(o[k])}!c.support.leadingWhitespace&&V.test(i)&&r.insertB=
efore(b.createTextNode(V.exec(i)[0]),r.firstChild);i=3Dr.childNodes}if(i.=
nodeType)e.push(i);else e=3D=0A=
c.merge(e,i)}}if(d)for(j=3D0;e[j];j++)if(f&&c.nodeName(e[j],"script")&&(!=
e[j].type||e[j].type.toLowerCase()=3D=3D=3D"text/javascript"))f.push(e[j]=
.parentNode?e[j].parentNode.removeChild(e[j]):e[j]);else{e[j].nodeType=3D=
=3D=3D1&&e.splice.apply(e,[j+1,0].concat(c.makeArray(e[j].getElementsByTa=
gName("script"))));d.appendChild(e[j])}return =
e},cleanData:function(a){for(var =
b,d,f=3Dc.cache,e=3Dc.event.special,j=3Dc.support.deleteExpando,i=3D0,o;(=
o=3Da[i])!=3Dnull;i++)if(d=3Do[c.expando]){b=3Df[d];if(b.events)for(var =
k in b.events)e[k]?=0A=
c.event.remove(o,k):Ca(o,k,b.handle);if(j)delete o[c.expando];else =
o.removeAttribute&&o.removeAttribute(c.expando);delete f[d]}}});var =
kb=3D/z-?index|font-?weight|opacity|zoom|line-?height/i,Na=3D/alpha\([^)]=
*\)/,Oa=3D/opacity=3D([^)]*)/,ha=3D/float/i,ia=3D/-([a-z])/ig,lb=3D/([A-Z=
])/g,mb=3D/^-?\d+(?:px)?$/i,nb=3D/^-?\d/,ob=3D{position:"absolute",visibi=
lity:"hidden",display:"block"},pb=3D["Left","Right"],qb=3D["Top","Bottom"=
],rb=3Ds.defaultView&&s.defaultView.getComputedStyle,Pa=3Dc.support.cssFl=
oat?"cssFloat":"styleFloat",ja=3D=0A=
function(a,b){return b.toUpperCase()};c.fn.css=3Dfunction(a,b){return =
X(this,a,b,true,function(d,f,e){if(e=3D=3D=3Dw)return =
c.curCSS(d,f);if(typeof =
e=3D=3D=3D"number"&&!kb.test(f))e+=3D"px";c.style(d,f,e)})};c.extend({sty=
le:function(a,b,d){if(!a||a.nodeType=3D=3D=3D3||a.nodeType=3D=3D=3D8)retu=
rn =
w;if((b=3D=3D=3D"width"||b=3D=3D=3D"height")&&parseFloat(d)<0)d=3Dw;var =
f=3Da.style||a,e=3Dd!=3D=3Dw;if(!c.support.opacity&&b=3D=3D=3D"opacity"){=
if(e){f.zoom=3D1;b=3DparseInt(d,10)+""=3D=3D=3D"NaN"?"":"alpha(opacity=3D=
"+d*100+")";a=3Df.filter||c.curCSS(a,"filter")||"";f.filter=3D=0A=
Na.test(a)?a.replace(Na,b):b}return =
f.filter&&f.filter.indexOf("opacity=3D")>=3D0?parseFloat(Oa.exec(f.filter=
)[1])/100+"":""}if(ha.test(b))b=3DPa;b=3Db.replace(ia,ja);if(e)f[b]=3Dd;r=
eturn =
f[b]},css:function(a,b,d,f){if(b=3D=3D=3D"width"||b=3D=3D=3D"height"){var=
 e,j=3Db=3D=3D=3D"width"?pb:qb;function =
i(){e=3Db=3D=3D=3D"width"?a.offsetWidth:a.offsetHeight;f!=3D=3D"border"&&=
c.each(j,function(){f||(e-=3DparseFloat(c.curCSS(a,"padding"+this,true))|=
|0);if(f=3D=3D=3D"margin")e+=3DparseFloat(c.curCSS(a,"margin"+this,true))=
||0;else e-=3DparseFloat(c.curCSS(a,=0A=
"border"+this+"Width",true))||0})}a.offsetWidth!=3D=3D0?i():c.swap(a,ob,i=
);return Math.max(0,Math.round(e))}return =
c.curCSS(a,b,d)},curCSS:function(a,b,d){var =
f,e=3Da.style;if(!c.support.opacity&&b=3D=3D=3D"opacity"&&a.currentStyle)=
{f=3DOa.test(a.currentStyle.filter||"")?parseFloat(RegExp.$1)/100+"":"";r=
eturn =
f=3D=3D=3D""?"1":f}if(ha.test(b))b=3DPa;if(!d&&e&&e[b])f=3De[b];else =
if(rb){if(ha.test(b))b=3D"float";b=3Db.replace(lb,"-$1").toLowerCase();e=3D=
a.ownerDocument.defaultView;if(!e)return =
null;if(a=3De.getComputedStyle(a,null))f=3D=0A=
a.getPropertyValue(b);if(b=3D=3D=3D"opacity"&&f=3D=3D=3D"")f=3D"1"}else =
if(a.currentStyle){d=3Db.replace(ia,ja);f=3Da.currentStyle[b]||a.currentS=
tyle[d];if(!mb.test(f)&&nb.test(f)){b=3De.left;var =
j=3Da.runtimeStyle.left;a.runtimeStyle.left=3Da.currentStyle.left;e.left=3D=
d=3D=3D=3D"fontSize"?"1em":f||0;f=3De.pixelLeft+"px";e.left=3Db;a.runtime=
Style.left=3Dj}}return f},swap:function(a,b,d){var f=3D{};for(var e in =
b){f[e]=3Da.style[e];a.style[e]=3Db[e]}d.call(a);for(e in =
b)a.style[e]=3Df[e]}});if(c.expr&&c.expr.filters){c.expr.filters.hidden=3D=
function(a){var b=3D=0A=
a.offsetWidth,d=3Da.offsetHeight,f=3Da.nodeName.toLowerCase()=3D=3D=3D"tr=
";return =
b=3D=3D=3D0&&d=3D=3D=3D0&&!f?true:b>0&&d>0&&!f?false:c.curCSS(a,"display"=
)=3D=3D=3D"none"};c.expr.filters.visible=3Dfunction(a){return!c.expr.filt=
ers.hidden(a)}}var =
sb=3DJ(),tb=3D/<script(.|\s)*?\/script>/gi,ub=3D/select|textarea/i,vb=3D/=
color|date|datetime|email|hidden|month|number|password|range|search|tel|t=
ext|time|url|week/i,N=3D/=3D\?(&|$)/,ka=3D/\?/,wb=3D/(\?|&)_=3D.*?(&|$)/,=
xb=3D/^(\w+:)?\/\/([^\/?#]+)/,yb=3D/%20/g,zb=3Dc.fn.load;c.fn.extend({loa=
d:function(a,b,d){if(typeof a!=3D=3D=0A=
"string")return zb.call(this,a);else if(!this.length)return this;var =
f=3Da.indexOf(" ");if(f>=3D0){var =
e=3Da.slice(f,a.length);a=3Da.slice(0,f)}f=3D"GET";if(b)if(c.isFunction(b=
)){d=3Db;b=3Dnull}else if(typeof =
b=3D=3D=3D"object"){b=3Dc.param(b,c.ajaxSettings.traditional);f=3D"POST"}=
var =
j=3Dthis;c.ajax({url:a,type:f,dataType:"html",data:b,complete:function(i,=
o){if(o=3D=3D=3D"success"||o=3D=3D=3D"notmodified")j.html(e?c("<div =
/>").append(i.responseText.replace(tb,"")).find(e):i.responseText);d&&j.e=
ach(d,[i.responseText,o,i])}});return this},=0A=
serialize:function(){return =
c.param(this.serializeArray())},serializeArray:function(){return =
this.map(function(){return =
this.elements?c.makeArray(this.elements):this}).filter(function(){return =
this.name&&!this.disabled&&(this.checked||ub.test(this.nodeName)||vb.test=
(this.type))}).map(function(a,b){a=3Dc(this).val();return =
a=3D=3Dnull?null:c.isArray(a)?c.map(a,function(d){return{name:b.name,valu=
e:d}}):{name:b.name,value:a}}).get()}});c.each("ajaxStart ajaxStop =
ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "),=0A=
function(a,b){c.fn[b]=3Dfunction(d){return =
this.bind(b,d)}});c.extend({get:function(a,b,d,f){if(c.isFunction(b)){f=3D=
f||d;d=3Db;b=3Dnull}return =
c.ajax({type:"GET",url:a,data:b,success:d,dataType:f})},getScript:functio=
n(a,b){return c.get(a,null,b,"script")},getJSON:function(a,b,d){return =
c.get(a,b,d,"json")},post:function(a,b,d,f){if(c.isFunction(b)){f=3Df||d;=
d=3Db;b=3D{}}return =
c.ajax({type:"POST",url:a,data:b,success:d,dataType:f})},ajaxSetup:functi=
on(a){c.extend(c.ajaxSettings,a)},ajaxSettings:{url:location.href,=0A=
global:true,type:"GET",contentType:"application/x-www-form-urlencoded",pr=
ocessData:true,async:true,xhr:A.XMLHttpRequest&&(A.location.protocol!=3D=3D=
"file:"||!A.ActiveXObject)?function(){return new =
A.XMLHttpRequest}:function(){try{return new =
A.ActiveXObject("Microsoft.XMLHTTP")}catch(a){}},accepts:{xml:"applicatio=
n/xml, text/xml",html:"text/html",script:"text/javascript, =
application/javascript",json:"application/json, =
text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},etag:=
{},ajax:function(a){function b(){e.success&&=0A=
e.success.call(k,o,i,x);e.global&&f("ajaxSuccess",[x,e])}function =
d(){e.complete&&e.complete.call(k,x,i);e.global&&f("ajaxComplete",[x,e]);=
e.global&&!--c.active&&c.event.trigger("ajaxStop")}function =
f(q,p){(e.context?c(e.context):c.event).trigger(q,p)}var =
e=3Dc.extend(true,{},c.ajaxSettings,a),j,i,o,k=3Da&&a.context||e,n=3De.ty=
pe.toUpperCase();if(e.data&&e.processData&&typeof =
e.data!=3D=3D"string")e.data=3Dc.param(e.data,e.traditional);if(e.dataTyp=
e=3D=3D=3D"jsonp"){if(n=3D=3D=3D"GET")N.test(e.url)||(e.url+=3D(ka.test(e=
.url)?=0A=
"&":"?")+(e.jsonp||"callback")+"=3D?");else =
if(!e.data||!N.test(e.data))e.data=3D(e.data?e.data+"&":"")+(e.jsonp||"ca=
llback")+"=3D?";e.dataType=3D"json"}if(e.dataType=3D=3D=3D"json"&&(e.data=
&&N.test(e.data)||N.test(e.url))){j=3De.jsonpCallback||"jsonp"+sb++;if(e.=
data)e.data=3D(e.data+"").replace(N,"=3D"+j+"$1");e.url=3De.url.replace(N=
,"=3D"+j+"$1");e.dataType=3D"script";A[j]=3DA[j]||function(q){o=3Dq;b();d=
();A[j]=3Dw;try{delete =
A[j]}catch(p){}z&&z.removeChild(C)}}if(e.dataType=3D=3D=3D"script"&&e.cac=
he=3D=3D=3Dnull)e.cache=3Dfalse;if(e.cache=3D=3D=3D=0A=
false&&n=3D=3D=3D"GET"){var =
r=3DJ(),u=3De.url.replace(wb,"$1_=3D"+r+"$2");e.url=3Du+(u=3D=3D=3De.url?=
(ka.test(e.url)?"&":"?")+"_=3D"+r:"")}if(e.data&&n=3D=3D=3D"GET")e.url+=3D=
(ka.test(e.url)?"&":"?")+e.data;e.global&&!c.active++&&c.event.trigger("a=
jaxStart");r=3D(r=3Dxb.exec(e.url))&&(r[1]&&r[1]!=3D=3Dlocation.protocol|=
|r[2]!=3D=3Dlocation.host);if(e.dataType=3D=3D=3D"script"&&n=3D=3D=3D"GET=
"&&r){var =
z=3Ds.getElementsByTagName("head")[0]||s.documentElement,C=3Ds.createElem=
ent("script");C.src=3De.url;if(e.scriptCharset)C.charset=3De.scriptCharse=
t;if(!j){var B=3D=0A=
false;C.onload=3DC.onreadystatechange=3Dfunction(){if(!B&&(!this.readySta=
te||this.readyState=3D=3D=3D"loaded"||this.readyState=3D=3D=3D"complete")=
){B=3Dtrue;b();d();C.onload=3DC.onreadystatechange=3Dnull;z&&C.parentNode=
&&z.removeChild(C)}}}z.insertBefore(C,z.firstChild);return w}var =
E=3Dfalse,x=3De.xhr();if(x){e.username?x.open(n,e.url,e.async,e.username,=
e.password):x.open(n,e.url,e.async);try{if(e.data||a&&a.contentType)x.set=
RequestHeader("Content-Type",e.contentType);if(e.ifModified){c.lastModifi=
ed[e.url]&&x.setRequestHeader("If-Modified-Since",=0A=
c.lastModified[e.url]);c.etag[e.url]&&x.setRequestHeader("If-None-Match",=
c.etag[e.url])}r||x.setRequestHeader("X-Requested-With","XMLHttpRequest")=
;x.setRequestHeader("Accept",e.dataType&&e.accepts[e.dataType]?e.accepts[=
e.dataType]+", =
*/*":e.accepts._default)}catch(ga){}if(e.beforeSend&&e.beforeSend.call(k,=
x,e)=3D=3D=3Dfalse){e.global&&!--c.active&&c.event.trigger("ajaxStop");x.=
abort();return false}e.global&&f("ajaxSend",[x,e]);var =
g=3Dx.onreadystatechange=3Dfunction(q){if(!x||x.readyState=3D=3D=3D0||q=3D=
=3D=3D"abort"){E||=0A=
d();E=3Dtrue;if(x)x.onreadystatechange=3Dc.noop}else =
if(!E&&x&&(x.readyState=3D=3D=3D4||q=3D=3D=3D"timeout")){E=3Dtrue;x.onrea=
dystatechange=3Dc.noop;i=3Dq=3D=3D=3D"timeout"?"timeout":!c.httpSuccess(x=
)?"error":e.ifModified&&c.httpNotModified(x,e.url)?"notmodified":"success=
";var =
p;if(i=3D=3D=3D"success")try{o=3Dc.httpData(x,e.dataType,e)}catch(v){i=3D=
"parsererror";p=3Dv}if(i=3D=3D=3D"success"||i=3D=3D=3D"notmodified")j||b(=
);else =
c.handleError(e,x,i,p);d();q=3D=3D=3D"timeout"&&x.abort();if(e.async)x=3D=
null}};try{var h=3Dx.abort;x.abort=3Dfunction(){x&&h.call(x);=0A=
g("abort")}}catch(l){}e.async&&e.timeout>0&&setTimeout(function(){x&&!E&&=
g("timeout")},e.timeout);try{x.send(n=3D=3D=3D"POST"||n=3D=3D=3D"PUT"||n=3D=
=3D=3D"DELETE"?e.data:null)}catch(m){c.handleError(e,x,null,m);d()}e.asyn=
c||g();return =
x}},handleError:function(a,b,d,f){if(a.error)a.error.call(a.context||a,b,=
d,f);if(a.global)(a.context?c(a.context):c.event).trigger("ajaxError",[b,=
a,f])},active:0,httpSuccess:function(a){try{return!a.status&&location.pro=
tocol=3D=3D=3D"file:"||a.status>=3D200&&a.status<300||a.status=3D=3D=3D30=
4||a.status=3D=3D=3D=0A=
1223||a.status=3D=3D=3D0}catch(b){}return =
false},httpNotModified:function(a,b){var =
d=3Da.getResponseHeader("Last-Modified"),f=3Da.getResponseHeader("Etag");=
if(d)c.lastModified[b]=3Dd;if(f)c.etag[b]=3Df;return =
a.status=3D=3D=3D304||a.status=3D=3D=3D0},httpData:function(a,b,d){var =
f=3Da.getResponseHeader("content-type")||"",e=3Db=3D=3D=3D"xml"||!b&&f.in=
dexOf("xml")>=3D0;a=3De?a.responseXML:a.responseText;e&&a.documentElement=
.nodeName=3D=3D=3D"parsererror"&&c.error("parsererror");if(d&&d.dataFilte=
r)a=3Dd.dataFilter(a,b);if(typeof a=3D=3D=3D"string")if(b=3D=3D=3D=0A=
"json"||!b&&f.indexOf("json")>=3D0)a=3Dc.parseJSON(a);else =
if(b=3D=3D=3D"script"||!b&&f.indexOf("javascript")>=3D0)c.globalEval(a);r=
eturn a},param:function(a,b){function =
d(i,o){if(c.isArray(o))c.each(o,function(k,n){b||/\[\]$/.test(i)?f(i,n):d=
(i+"["+(typeof =
n=3D=3D=3D"object"||c.isArray(n)?k:"")+"]",n)});else!b&&o!=3Dnull&&typeof=
 =
o=3D=3D=3D"object"?c.each(o,function(k,n){d(i+"["+k+"]",n)}):f(i,o)}funct=
ion =
f(i,o){o=3Dc.isFunction(o)?o():o;e[e.length]=3DencodeURIComponent(i)+"=3D=
"+encodeURIComponent(o)}var =
e=3D[];if(b=3D=3D=3Dw)b=3Dc.ajaxSettings.traditional;=0A=
if(c.isArray(a)||a.jquery)c.each(a,function(){f(this.name,this.value)});e=
lse for(var j in a)d(j,a[j]);return e.join("&").replace(yb,"+")}});var =
la=3D{},Ab=3D/toggle|show|hide/,Bb=3D/^([+-]=3D)?([\d+-.]+)(.*)$/,W,va=3D=
[["height","marginTop","marginBottom","paddingTop","paddingBottom"],["wid=
th","marginLeft","marginRight","paddingLeft","paddingRight"],["opacity"]]=
;c.fn.extend({show:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("show",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");=0A=
this[a].style.display=3Dd||"";if(c.css(this[a],"display")=3D=3D=3D"none")=
{d=3Dthis[a].nodeName;var f;if(la[d])f=3Dla[d];else{var e=3Dc("<"+d+" =
/>").appendTo("body");f=3De.css("display");if(f=3D=3D=3D"none")f=3D"block=
";e.remove();la[d]=3Df}c.data(this[a],"olddisplay",f)}}a=3D0;for(b=3Dthis=
.length;a<b;a++)this[a].style.display=3Dc.data(this[a],"olddisplay")||"";=
return this}},hide:function(a,b){if(a||a=3D=3D=3D0)return =
this.animate(K("hide",3),a,b);else{a=3D0;for(b=3Dthis.length;a<b;a++){var=
 d=3Dc.data(this[a],"olddisplay");!d&&d!=3D=3D"none"&&c.data(this[a],=0A=
"olddisplay",c.css(this[a],"display"))}a=3D0;for(b=3Dthis.length;a<b;a++)=
this[a].style.display=3D"none";return =
this}},_toggle:c.fn.toggle,toggle:function(a,b){var d=3Dtypeof =
a=3D=3D=3D"boolean";if(c.isFunction(a)&&c.isFunction(b))this._toggle.appl=
y(this,arguments);else a=3D=3Dnull||d?this.each(function(){var =
f=3Dd?a:c(this).is(":hidden");c(this)[f?"show":"hide"]()}):this.animate(K=
("toggle",3),a,b);return this},fadeTo:function(a,b,d){return =
this.filter(":hidden").css("opacity",0).show().end().animate({opacity:b},=
a,d)},=0A=
animate:function(a,b,d,f){var =
e=3Dc.speed(b,d,f);if(c.isEmptyObject(a))return =
this.each(e.complete);return =
this[e.queue=3D=3D=3Dfalse?"each":"queue"](function(){var =
j=3Dc.extend({},e),i,o=3Dthis.nodeType=3D=3D=3D1&&c(this).is(":hidden"),k=
=3Dthis;for(i in a){var =
n=3Di.replace(ia,ja);if(i!=3D=3Dn){a[n]=3Da[i];delete =
a[i];i=3Dn}if(a[i]=3D=3D=3D"hide"&&o||a[i]=3D=3D=3D"show"&&!o)return =
j.complete.call(this);if((i=3D=3D=3D"height"||i=3D=3D=3D"width")&&this.st=
yle){j.display=3Dc.css(this,"display");j.overflow=3Dthis.style.overflow}i=
f(c.isArray(a[i])){(j.specialEasing=3D=0A=
j.specialEasing||{})[i]=3Da[i][1];a[i]=3Da[i][0]}}if(j.overflow!=3Dnull)t=
his.style.overflow=3D"hidden";j.curAnim=3Dc.extend({},a);c.each(a,functio=
n(r,u){var z=3Dnew =
c.fx(k,j,r);if(Ab.test(u))z[u=3D=3D=3D"toggle"?o?"show":"hide":u](a);else=
{var C=3DBb.exec(u),B=3Dz.cur(true)||0;if(C){u=3DparseFloat(C[2]);var =
E=3DC[3]||"px";if(E!=3D=3D"px"){k.style[r]=3D(u||1)+E;B=3D(u||1)/z.cur(tr=
ue)*B;k.style[r]=3DB+E}if(C[1])u=3D(C[1]=3D=3D=3D"-=3D"?-1:1)*u+B;z.custo=
m(B,u,E)}else z.custom(B,u,"")}});return true})},stop:function(a,b){var =
d=3Dc.timers;a&&this.queue([]);=0A=
this.each(function(){for(var =
f=3Dd.length-1;f>=3D0;f--)if(d[f].elem=3D=3D=3Dthis){b&&d[f](true);d.spli=
ce(f,1)}});b||this.dequeue();return =
this}});c.each({slideDown:K("show",1),slideUp:K("hide",1),slideToggle:K("=
toggle",1),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"}},function(a,b=
){c.fn[a]=3Dfunction(d,f){return =
this.animate(b,d,f)}});c.extend({speed:function(a,b,d){var f=3Da&&typeof =
a=3D=3D=3D"object"?a:{complete:d||!d&&b||c.isFunction(a)&&a,duration:a,ea=
sing:d&&b||b&&!c.isFunction(b)&&b};f.duration=3Dc.fx.off?0:typeof =
f.duration=3D=3D=3D=0A=
"number"?f.duration:c.fx.speeds[f.duration]||c.fx.speeds._default;f.old=3D=
f.complete;f.complete=3Dfunction(){f.queue!=3D=3Dfalse&&c(this).dequeue()=
;c.isFunction(f.old)&&f.old.call(this)};return =
f},easing:{linear:function(a,b,d,f){return =
d+f*a},swing:function(a,b,d,f){return(-Math.cos(a*Math.PI)/2+0.5)*f+d}},t=
imers:[],fx:function(a,b,d){this.options=3Db;this.elem=3Da;this.prop=3Dd;=
if(!b.orig)b.orig=3D{}}});c.fx.prototype=3D{update:function(){this.option=
s.step&&this.options.step.call(this.elem,this.now,this);(c.fx.step[this.p=
rop]||=0A=
c.fx.step._default)(this);if((this.prop=3D=3D=3D"height"||this.prop=3D=3D=
=3D"width")&&this.elem.style)this.elem.style.display=3D"block"},cur:funct=
ion(a){if(this.elem[this.prop]!=3Dnull&&(!this.elem.style||this.elem.styl=
e[this.prop]=3D=3Dnull))return =
this.elem[this.prop];return(a=3DparseFloat(c.css(this.elem,this.prop,a)))=
&&a>-10000?a:parseFloat(c.curCSS(this.elem,this.prop))||0},custom:functio=
n(a,b,d){function f(j){return =
e.step(j)}this.startTime=3DJ();this.start=3Da;this.end=3Db;this.unit=3Dd|=
|this.unit||"px";this.now=3Dthis.start;=0A=
this.pos=3Dthis.state=3D0;var =
e=3Dthis;f.elem=3Dthis.elem;if(f()&&c.timers.push(f)&&!W)W=3DsetInterval(=
c.fx.tick,13)},show:function(){this.options.orig[this.prop]=3Dc.style(thi=
s.elem,this.prop);this.options.show=3Dtrue;this.custom(this.prop=3D=3D=3D=
"width"||this.prop=3D=3D=3D"height"?1:0,this.cur());c(this.elem).show()},=
hide:function(){this.options.orig[this.prop]=3Dc.style(this.elem,this.pro=
p);this.options.hide=3Dtrue;this.custom(this.cur(),0)},step:function(a){v=
ar =
b=3DJ(),d=3Dtrue;if(a||b>=3Dthis.options.duration+this.startTime){this.no=
w=3D=0A=
this.end;this.pos=3Dthis.state=3D1;this.update();this.options.curAnim[thi=
s.prop]=3Dtrue;for(var f in =
this.options.curAnim)if(this.options.curAnim[f]!=3D=3Dtrue)d=3Dfalse;if(d=
){if(this.options.display!=3Dnull){this.elem.style.overflow=3Dthis.option=
s.overflow;a=3Dc.data(this.elem,"olddisplay");this.elem.style.display=3Da=
?a:this.options.display;if(c.css(this.elem,"display")=3D=3D=3D"none")this=
.elem.style.display=3D"block"}this.options.hide&&c(this.elem).hide();if(t=
his.options.hide||this.options.show)for(var e in =
this.options.curAnim)c.style(this.elem,=0A=
e,this.options.orig[e]);this.options.complete.call(this.elem)}return =
false}else{e=3Db-this.startTime;this.state=3De/this.options.duration;a=3D=
this.options.easing||(c.easing.swing?"swing":"linear");this.pos=3Dc.easin=
g[this.options.specialEasing&&this.options.specialEasing[this.prop]||a](t=
his.state,e,0,1,this.options.duration);this.now=3Dthis.start+(this.end-th=
is.start)*this.pos;this.update()}return =
true}};c.extend(c.fx,{tick:function(){for(var =
a=3Dc.timers,b=3D0;b<a.length;b++)a[b]()||a.splice(b--,1);a.length||=0A=
c.fx.stop()},stop:function(){clearInterval(W);W=3Dnull},speeds:{slow:600,=
fast:200,_default:400},step:{opacity:function(a){c.style(a.elem,"opacity"=
,a.now)},_default:function(a){if(a.elem.style&&a.elem.style[a.prop]!=3Dnu=
ll)a.elem.style[a.prop]=3D(a.prop=3D=3D=3D"width"||a.prop=3D=3D=3D"height=
"?Math.max(0,a.now):a.now)+a.unit;else =
a.elem[a.prop]=3Da.now}}});if(c.expr&&c.expr.filters)c.expr.filters.anima=
ted=3Dfunction(a){return c.grep(c.timers,function(b){return =
a=3D=3D=3Db.elem}).length};c.fn.offset=3D"getBoundingClientRect"in =
s.documentElement?=0A=
function(a){var b=3Dthis[0];if(a)return =
this.each(function(e){c.offset.setOffset(this,a,e)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);var =
d=3Db.getBoundingClientRect(),f=3Db.ownerDocument;b=3Df.body;f=3Df.docume=
ntElement;return{top:d.top+(self.pageYOffset||c.support.boxModel&&f.scrol=
lTop||b.scrollTop)-(f.clientTop||b.clientTop||0),left:d.left+(self.pageXO=
ffset||c.support.boxModel&&f.scrollLeft||b.scrollLeft)-(f.clientLeft||b.c=
lientLeft||0)}}:function(a){var b=3D=0A=
this[0];if(a)return =
this.each(function(r){c.offset.setOffset(this,a,r)});if(!b||!b.ownerDocum=
ent)return null;if(b=3D=3D=3Db.ownerDocument.body)return =
c.offset.bodyOffset(b);c.offset.initialize();var =
d=3Db.offsetParent,f=3Db,e=3Db.ownerDocument,j,i=3De.documentElement,o=3D=
e.body;f=3D(e=3De.defaultView)?e.getComputedStyle(b,null):b.currentStyle;=
for(var =
k=3Db.offsetTop,n=3Db.offsetLeft;(b=3Db.parentNode)&&b!=3D=3Do&&b!=3D=3Di=
;){if(c.offset.supportsFixedPosition&&f.position=3D=3D=3D"fixed")break;j=3D=
e?e.getComputedStyle(b,null):b.currentStyle;=0A=
k-=3Db.scrollTop;n-=3Db.scrollLeft;if(b=3D=3D=3Dd){k+=3Db.offsetTop;n+=3D=
b.offsetLeft;if(c.offset.doesNotAddBorder&&!(c.offset.doesAddBorderForTab=
leAndCells&&/^t(able|d|h)$/i.test(b.nodeName))){k+=3DparseFloat(j.borderT=
opWidth)||0;n+=3DparseFloat(j.borderLeftWidth)||0}f=3Dd;d=3Db.offsetParen=
t}if(c.offset.subtractsBorderForOverflowNotVisible&&j.overflow!=3D=3D"vis=
ible"){k+=3DparseFloat(j.borderTopWidth)||0;n+=3DparseFloat(j.borderLeftW=
idth)||0}f=3Dj}if(f.position=3D=3D=3D"relative"||f.position=3D=3D=3D"stat=
ic"){k+=3Do.offsetTop;n+=3Do.offsetLeft}if(c.offset.supportsFixedPosition=
&&=0A=
f.position=3D=3D=3D"fixed"){k+=3DMath.max(i.scrollTop,o.scrollTop);n+=3DM=
ath.max(i.scrollLeft,o.scrollLeft)}return{top:k,left:n}};c.offset=3D{init=
ialize:function(){var =
a=3Ds.body,b=3Ds.createElement("div"),d,f,e,j=3DparseFloat(c.curCSS(a,"ma=
rginTop",true))||0;c.extend(b.style,{position:"absolute",top:0,left:0,mar=
gin:0,border:0,width:"1px",height:"1px",visibility:"hidden"});b.innerHTML=
=3D"<div style=3D'position:absolute;top:0;left:0;margin:0;border:5px =
solid #000;padding:0;width:1px;height:1px;'><div></div></div><table =
style=3D'position:absolute;top:0;left:0;margin:0;border:5px solid =
#000;padding:0;width:1px;height:1px;' cellpadding=3D'0' =
cellspacing=3D'0'><tr><td></td></tr></table>";=0A=
a.insertBefore(b,a.firstChild);d=3Db.firstChild;f=3Dd.firstChild;e=3Dd.ne=
xtSibling.firstChild.firstChild;this.doesNotAddBorder=3Df.offsetTop!=3D=3D=
5;this.doesAddBorderForTableAndCells=3De.offsetTop=3D=3D=3D5;f.style.posi=
tion=3D"fixed";f.style.top=3D"20px";this.supportsFixedPosition=3Df.offset=
Top=3D=3D=3D20||f.offsetTop=3D=3D=3D15;f.style.position=3Df.style.top=3D"=
";d.style.overflow=3D"hidden";d.style.position=3D"relative";this.subtract=
sBorderForOverflowNotVisible=3Df.offsetTop=3D=3D=3D-5;this.doesNotInclude=
MarginInBodyOffset=3Da.offsetTop!=3D=3Dj;a.removeChild(b);=0A=
c.offset.initialize=3Dc.noop},bodyOffset:function(a){var =
b=3Da.offsetTop,d=3Da.offsetLeft;c.offset.initialize();if(c.offset.doesNo=
tIncludeMarginInBodyOffset){b+=3DparseFloat(c.curCSS(a,"marginTop",true))=
||0;d+=3DparseFloat(c.curCSS(a,"marginLeft",true))||0}return{top:b,left:d=
}},setOffset:function(a,b,d){if(/static/.test(c.curCSS(a,"position")))a.s=
tyle.position=3D"relative";var =
f=3Dc(a),e=3Df.offset(),j=3DparseInt(c.curCSS(a,"top",true),10)||0,i=3Dpa=
rseInt(c.curCSS(a,"left",true),10)||0;if(c.isFunction(b))b=3Db.call(a,=0A=
d,e);d=3D{top:b.top-e.top+j,left:b.left-e.left+i};"using"in =
b?b.using.call(a,d):f.css(d)}};c.fn.extend({position:function(){if(!this[=
0])return null;var =
a=3Dthis[0],b=3Dthis.offsetParent(),d=3Dthis.offset(),f=3D/^body|html$/i.=
test(b[0].nodeName)?{top:0,left:0}:b.offset();d.top-=3DparseFloat(c.curCS=
S(a,"marginTop",true))||0;d.left-=3DparseFloat(c.curCSS(a,"marginLeft",tr=
ue))||0;f.top+=3DparseFloat(c.curCSS(b[0],"borderTopWidth",true))||0;f.le=
ft+=3DparseFloat(c.curCSS(b[0],"borderLeftWidth",true))||0;return{top:d.t=
op-=0A=
f.top,left:d.left-f.left}},offsetParent:function(){return =
this.map(function(){for(var =
a=3Dthis.offsetParent||s.body;a&&!/^body|html$/i.test(a.nodeName)&&c.css(=
a,"position")=3D=3D=3D"static";)a=3Da.offsetParent;return =
a})}});c.each(["Left","Top"],function(a,b){var =
d=3D"scroll"+b;c.fn[d]=3Dfunction(f){var e=3Dthis[0],j;if(!e)return =
null;if(f!=3D=3Dw)return =
this.each(function(){if(j=3Dwa(this))j.scrollTo(!a?f:c(j).scrollLeft(),a?=
f:c(j).scrollTop());else this[d]=3Df});else =
return(j=3Dwa(e))?"pageXOffset"in j?j[a?"pageYOffset":=0A=
"pageXOffset"]:c.support.boxModel&&j.document.documentElement[d]||j.docum=
ent.body[d]:e[d]}});c.each(["Height","Width"],function(a,b){var =
d=3Db.toLowerCase();c.fn["inner"+b]=3Dfunction(){return =
this[0]?c.css(this[0],d,false,"padding"):null};c.fn["outer"+b]=3Dfunction=
(f){return =
this[0]?c.css(this[0],d,false,f?"margin":"border"):null};c.fn[d]=3Dfuncti=
on(f){var e=3Dthis[0];if(!e)return =
f=3D=3Dnull?null:this;if(c.isFunction(f))return =
this.each(function(j){var =
i=3Dc(this);i[d](f.call(this,j,i[d]()))});return"scrollTo"in=0A=
e&&e.document?e.document.compatMode=3D=3D=3D"CSS1Compat"&&e.document.docu=
mentElement["client"+b]||e.document.body["client"+b]:e.nodeType=3D=3D=3D9=
?Math.max(e.documentElement["client"+b],e.body["scroll"+b],e.documentElem=
ent["scroll"+b],e.body["offset"+b],e.documentElement["offset"+b]):f=3D=3D=
=3Dw?c.css(e,d):this.css(d,typeof =
f=3D=3D=3D"string"?f:f+"px")}});A.jQuery=3DA.$=3Dc})(window);jQuery.noCon=
flict();=0A=

------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/plugins/devformatter/devfmt_common.js?ver=2009.0.1.32

/*=0A=
Developer Formater=0A=
http://wordpress.org/extend/plugins/devformatter/=0A=
Developer Formatter system to WordPress. Powered by <a =
href=3D"http://qbnz.com/highlighter/">GeSHi</a> server-side highlight =
system.=0A=
Version: 2009.0.1.32=0A=
Author: Gilberto Saraiva=0A=
Author URI: http://gsaraiva.projects.pro.br/=0A=
=0A=
Copyright (c) 2009 Gilberto Saraiva=0A=
Released under the GNU General Public License (GPL)=0A=
http://www.gnu.org/licenses/gpl.txt=0A=
*/=0A=
devfmt_credits =3D function(){=0A=
  window.open('http://wordpress.org/extend/plugins/devformatter/');=0A=
}=0A=
=0A=
devfmt_getCode =3D function(ABase, AIdent){=0A=
  code =3D "";=0A=
  jQuery(ABase).parent().parent().parent().parent().find("pre." + AIdent =
+ "").each(function(){=0A=
    code +=3D this[((document.all)? "innerText" : "textContent")] + "\n";=0A=
  });=0A=
  return code;=0A=
}=0A=
=0A=
devfmt_createToolsIdent =3D "";=0A=
devfmt_createTools =3D function(AIdent){=0A=
  devfmt_createToolsIdent =3D AIdent;=0A=
  jQuery("." + AIdent + "block table.devcodetools").each(function(){=0A=
    jQuery(this).find("td:eq(0)")=0A=
      .css("cursor", "pointer")=0A=
      .attr("title", "Show Plain " + jQuery(this).attr("title") + " =
Code")=0A=
      .click(function(){=0A=
        devfmt_showPlainText(devfmt_getCode(this, AIdent));=0A=
      });=0A=
  });=0A=
}=0A=
=0A=
devfmt_showPlainText =3D function(ACode){=0A=
  with(window.open("about:blank", "_blank", =
"location=3D0,resizable=3D1,menubar=3D0,scrollbars=3D0,top=3D0,left=3D0,w=
idth=3D600,height=3D350")){=0A=
    document.write("<body style=3D\"padding:0;margin:0;\"><textarea =
style=3D\"width:100%;height:100%\" wrap=3D\"off\">" + ACode + =
"</textarea></body>");=0A=
    document.close();=0A=
  }=0A=
}=0A=
=0A=
devfmt_cleanUpZeroClipboard =3D function(){=0A=
  jQuery("." + devfmt_createToolsIdent + "block =
table.devcodetools").each(function(){=0A=
    jQuery(this).find("td:eq(1)").html("");=0A=
  });=0A=
}=0A=
=0A=
/*=0A=
  ZeroClipboard Flash 10 clipboard wrapper=0A=
  Simple Set Clipboard System=0A=
  Author: Joseph Huckaby=0A=
*/=0A=
ZeroClipboard =3D {=0A=
	dispatch: function(id, eventName, args){=0A=
    EmbedObj =3D jQuery("embed#ZeroClipboard" + id)[0];=0A=
    switch(eventName){=0A=
      case("load"):=0A=
        jQuery(EmbedObj).attr("title", "Double-click to copy");=0A=
        EmbedObj.setText(devfmt_getCode(jQuery(EmbedObj).parent()[0], =
"devcode"));=0A=
        break;=0A=
      case("mouseOut"):=0A=
        // ReCreate clipboard object=0A=
        pTD =3D jQuery(EmbedObj).parent();=0A=
        pTD.html(pTD.html());=0A=
        break;=0A=
      case("mouseDown"):=0A=
        if(jQuery.browser.msie){=0A=
          // avoid flash clipboard on ie=0A=
          window.clipboardData.setData("Text", =
devfmt_getCode(jQuery(EmbedObj).parent()[0], "devcode"));=0A=
        }=0A=
        break;=0A=
    }=0A=
	}=0A=
}=0A=
=0A=
if(typeof(jQuery) !=3D "undefined"){=0A=
  if(jQuery.browser.msie){=0A=
    window.attachEvent('onunload', devfmt_cleanUpZeroClipboard);=0A=
  }else{=0A=
    jQuery(window).unload(function(){ devfmt_cleanUpZeroClipboard() });=0A=
  }=0A=
}else=0A=
  alert("jQuery link problem. Active the link on DevFormatter config =
page.");
------=_NextPart_000_0033_01CBA048.763C1690
Content-Type: application/octet-stream
Content-Transfer-Encoding: quoted-printable
Content-Location: http://gameclay.com/wp-content/plugins/devformatter/devfmt_public.js?ver=2009.0.1.32

/*=0A=
Developer Formater=0A=
http://wordpress.org/extend/plugins/devformatter/=0A=
Developer Formatter system to WordPress. Powered by <a =
href=3D"http://qbnz.com/highlighter/">GeSHi</a> server-side highlight =
system.=0A=
Version: 2009.0.1.32=0A=
Author: Gilberto Saraiva=0A=
Author URI: http://gsaraiva.projects.pro.br/=0A=
=0A=
Copyright (c) 2009 Gilberto Saraiva=0A=
Released under the GNU General Public License (GPL)=0A=
http://www.gnu.org/licenses/gpl.txt=0A=
*/=0A=
if(typeof(jQuery) !=3D "undefined"){=0A=
  jQuery(function($){ devfmt_createTools("devcode"); });=0A=
}else=0A=
  alert("jQuery link problem. Active the link on DevFormatter config =
page.");=0A=

------=_NextPart_000_0033_01CBA048.763C1690--
